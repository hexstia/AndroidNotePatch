Dalvik是Google为Android平台开发的虚拟机，它是Android应用的解释其。Dalvik虚拟机并非java虚拟机的简单替代品，而是有自己鲜明的特点
Dalvik虚拟机最大的特点是基于寄存器,而不是像JVM基于栈.java是一种半编译半解释型语言.需要吧java代码编译称中间代码来解释执行.java设计的目的之一是为了跨平台性运行,为了这一目标,生成的中间代码没有使用寄存器,而是完全靠对战来表示变量,但是,这样会对运行速度带来负面影响.Dalvik设计之初就是为了运行在嵌入式设备上.
对性能比较看重.而且早期只考虑支持的arm平台,对跨平台没有太多的要求,因此,Dalvik选择使用寄存器来加快代码的执行速度.
既然使用了寄存器,那么jvm的字节吗也就无法使用了。于是goolgle开发了一套新的指令作为dalvik虚拟机的中间码。作为支持寄存器的代价，dalvik的指令一条需要两个字节，而jvm通常只需要一个字节。
dalvik中使用的寄存器，一部分被映射到arm的寄存器，另一部分还是用堆栈在模拟。
Android也使用新开法的Dex文件格式来代替Java虚拟机的CLASS文件。相比Class文件格式Dex文件格式有下面的改进：

生成Dex文件时，会把素有的Class文件整合到一个Dex文件中，同时对所有类进行优化合并，去除荣誉的信息，这样，不但减少整个的文件大小，也提高类的装载速度。
Dex文件会把每个类文件的常量池进行分解合并，最后放在一个常量池中，节约了内存的使用。
Dex文件中所有类的字符串常量也会整理合并称一份。
Dex文件中的签名只有一份，验证也只有一次；
Dalvik虚拟机为应用创建的线程都是Linux线程。通过Linux的内核来管理线程。不但效率高，也简化了Dalvik虚拟机的设计。

