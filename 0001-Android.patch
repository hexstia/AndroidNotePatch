From 5e92e29c364dad6b5a5b6425a8527857c3cd82f3 Mon Sep 17 00:00:00 2001
From: Neil Hexstia <wangyz@farsight>
Date: Fri, 29 Jan 2016 09:58:07 +0800
Subject: [PATCH] =?UTF-8?q?Android=20=E4=B8=AA=E4=BA=BA=E7=AC=94=E8=AE=B0?=
 =?UTF-8?q?=E6=80=BB=E7=BB=93?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

笔记主要涉及的是启动流程一块

diff --git a/.directory b/.directory
new file mode 100644
index 0000000..6cb8ac9
--- /dev/null
+++ b/.directory
@@ -0,0 +1,5 @@
+[Desktop Entry]
+Encoding=UTF-8
+Icon=user-desktop
+Type=Directory
+
diff --git "a/Binder\346\234\272\345\210\266/Binder\347\256\200\344\273\213" "b/Binder\346\234\272\345\210\266/Binder\347\256\200\344\273\213"
new file mode 100644
index 0000000..a4cc13f
--- /dev/null
+++ "b/Binder\346\234\272\345\210\266/Binder\347\256\200\344\273\213"
@@ -0,0 +1,15 @@
+Binder库头文件路径：frameworks/native/include/binder
+Binder库路径：frameworks/native/libs/binder
+binder库最终将生成libbinder.so动态库，本地程序的各个部分同个这个库实现具体的binder框架
+概念：
+Binder和传统的IPC机制相比，融合了远程过程调用RPC的概念，而且这种远程调用不是传统的面向过程的远程调用，而是一种面向对象的远程（进程）调用。
+Android在进程键传递数据使用的是共享内存的方式，这样数据只需要复制一次就能从一个进程到达另一个进程（一般的IPC都需要两步，从用户进程复制到内核，再从内核复复制到服务进程）
+在安全性方面ANdroid也做了考虑，BInder调用时会传递进程的euid到服务端，因此，服务端可以通过检查调用进程的权限来决定是否允许其使用所调用的服务。
+BInder架构
+Binder驱动：Binder的核心，实现各种binder的底层操作。
+servicemanager：提供了Binder的名称到引用对象的转化服务。
+服务端，Binder服务的提供者
+客户端：Binder服务的使用者
+
+
+
diff --git "a/Binder\346\234\272\345\210\266/Binder\347\256\200\344\273\213~" "b/Binder\346\234\272\345\210\266/Binder\347\256\200\344\273\213~"
new file mode 100644
index 0000000..a4cc13f
--- /dev/null
+++ "b/Binder\346\234\272\345\210\266/Binder\347\256\200\344\273\213~"
@@ -0,0 +1,15 @@
+Binder库头文件路径：frameworks/native/include/binder
+Binder库路径：frameworks/native/libs/binder
+binder库最终将生成libbinder.so动态库，本地程序的各个部分同个这个库实现具体的binder框架
+概念：
+Binder和传统的IPC机制相比，融合了远程过程调用RPC的概念，而且这种远程调用不是传统的面向过程的远程调用，而是一种面向对象的远程（进程）调用。
+Android在进程键传递数据使用的是共享内存的方式，这样数据只需要复制一次就能从一个进程到达另一个进程（一般的IPC都需要两步，从用户进程复制到内核，再从内核复复制到服务进程）
+在安全性方面ANdroid也做了考虑，BInder调用时会传递进程的euid到服务端，因此，服务端可以通过检查调用进程的权限来决定是否允许其使用所调用的服务。
+BInder架构
+Binder驱动：Binder的核心，实现各种binder的底层操作。
+servicemanager：提供了Binder的名称到引用对象的转化服务。
+服务端，Binder服务的提供者
+客户端：Binder服务的使用者
+
+
+
diff --git "a/Build\347\263\273\347\273\237/Android\347\232\204\344\272\247\345\223\201\351\205\215\347\275\256\346\226\207\344\273\266" "b/Build\347\263\273\347\273\237/Android\347\232\204\344\272\247\345\223\201\351\205\215\347\275\256\346\226\207\344\273\266"
new file mode 100644
index 0000000..1b49f70
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/Android\347\232\204\344\272\247\345\223\201\351\205\215\347\275\256\346\226\207\344\273\266"
@@ -0,0 +1,27 @@
+产品配置文件的作用是按照Build系统的要求，将生成产品的各种image文件所需要的配置信息（如版本号，各种参数等）/资源（图片，字体，铃声等，），二进制文件（apk,jar,so库等）有机地组织起来，同时进行裁剪，加入或去掉一些模块
+对于产品的配置文件一般放在device和endor下，但是正常开发中，往往会让这两个目录配合使用，通常产品配置文件放在device目录下，而vendor目录下则存放一些硬件的HAL库，编译某一款手机的刷机包之前，需要将手机上一些不开源的HAL库（主要是so文件），驱动等抽取出来，放在vendor目录下。    
+device下的文件目录
+common:用来存放各个产品通用的配置脚本，文件等
+sample:一个产品的配置的例子，写一个新的产品配置时，可以使用sample目录下的文件作为模板。
+google:几个简单的模块，用途不详
+asus,lge,samsung:分别代表宏，LG，三星3家公司，各家公司的产品放在对应的目录下。
+如果需要添加新的产品，可以在device目录下新建一个目录。
+hammerhead手机由LG代工的，它的产品配置文件位于lge目录下，具体内容如下
+
+1---配置文件1，
+verdorsetup.sh
+内容是
+add_lunch_combo fspad_733-eng
+add_lunch_combo fspad_733-user
+#########################################
+2----AndroidProduct.mk
+这个文件会在Build系统的build/core/ProductConfig.mk文件中被包含进去,这个文件最终要的作用是定义了一个变量PRODUCT_MAKEFILES,他定义了本配置目录中所有编译入口文件，但是，每种产品编译时只会使用其中之一.例如,hammerhead目录下AndroidProduct.mk文件的内容为；
+PRODUCT_MAKEFILES := \
+    $(LOCAL_DIR)/fspad_733.mk
+
+3-----BoradConfig.mk
+该文件会被Build系统的envsetup.sh文件包含进去。这个文件主要定义了和设备硬件（包括CPU，wifi,GPS等）相关的一些参数。看懂这个文件的关键是理解文件中使用的编译变量
+4-----XXXX.mk 产品配置的编译入口文件，包含其他配置文件，也定义了一些和产品相关的编译变量/
+	             
+
+
diff --git "a/Build\347\263\273\347\273\237/Android\347\232\204\344\272\247\345\223\201\351\205\215\347\275\256\346\226\207\344\273\266~" "b/Build\347\263\273\347\273\237/Android\347\232\204\344\272\247\345\223\201\351\205\215\347\275\256\346\226\207\344\273\266~"
new file mode 100644
index 0000000..1b49f70
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/Android\347\232\204\344\272\247\345\223\201\351\205\215\347\275\256\346\226\207\344\273\266~"
@@ -0,0 +1,27 @@
+产品配置文件的作用是按照Build系统的要求，将生成产品的各种image文件所需要的配置信息（如版本号，各种参数等）/资源（图片，字体，铃声等，），二进制文件（apk,jar,so库等）有机地组织起来，同时进行裁剪，加入或去掉一些模块
+对于产品的配置文件一般放在device和endor下，但是正常开发中，往往会让这两个目录配合使用，通常产品配置文件放在device目录下，而vendor目录下则存放一些硬件的HAL库，编译某一款手机的刷机包之前，需要将手机上一些不开源的HAL库（主要是so文件），驱动等抽取出来，放在vendor目录下。    
+device下的文件目录
+common:用来存放各个产品通用的配置脚本，文件等
+sample:一个产品的配置的例子，写一个新的产品配置时，可以使用sample目录下的文件作为模板。
+google:几个简单的模块，用途不详
+asus,lge,samsung:分别代表宏，LG，三星3家公司，各家公司的产品放在对应的目录下。
+如果需要添加新的产品，可以在device目录下新建一个目录。
+hammerhead手机由LG代工的，它的产品配置文件位于lge目录下，具体内容如下
+
+1---配置文件1，
+verdorsetup.sh
+内容是
+add_lunch_combo fspad_733-eng
+add_lunch_combo fspad_733-user
+#########################################
+2----AndroidProduct.mk
+这个文件会在Build系统的build/core/ProductConfig.mk文件中被包含进去,这个文件最终要的作用是定义了一个变量PRODUCT_MAKEFILES,他定义了本配置目录中所有编译入口文件，但是，每种产品编译时只会使用其中之一.例如,hammerhead目录下AndroidProduct.mk文件的内容为；
+PRODUCT_MAKEFILES := \
+    $(LOCAL_DIR)/fspad_733.mk
+
+3-----BoradConfig.mk
+该文件会被Build系统的envsetup.sh文件包含进去。这个文件主要定义了和设备硬件（包括CPU，wifi,GPS等）相关的一些参数。看懂这个文件的关键是理解文件中使用的编译变量
+4-----XXXX.mk 产品配置的编译入口文件，包含其他配置文件，也定义了一些和产品相关的编译变量/
+	             
+
+
diff --git "a/Build\347\263\273\347\273\237/Boot.img\345\206\205\346\240\270\351\225\234\345\203\217" "b/Build\347\263\273\347\273\237/Boot.img\345\206\205\346\240\270\351\225\234\345\203\217"
new file mode 100644
index 0000000..bb4295e
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/Boot.img\345\206\205\346\240\270\351\225\234\345\203\217"
@@ -0,0 +1,11 @@
+linux内核镜像包含了内核二进制文件（ZImage）和上一小节介绍的内存磁盘镜像（ramdisk.img）,一般对应的镜像文件是boot.img(也可以是任何其他的名字)。由于ramdisk.img中包含的init命令是与Linux内核第一个交互的程序，所以在boot.img中需要同时包含Linux内核和ramdisk.img.当linux内核调用init后，系统就会根据init.rc及其相关文件中的代码对整个Android系统进行初始化。其中主要的初始化工作就是建立如/system /data等系统目录然后使用mount命令将相应的镜像挂在得到这些目录上。
+命令：
+unpackbootimg为解压命令，mkbottimg命令可以将zImage和ramdisk.img文件合并成boot.img下面先来用unpackbootimg命令将boot.img解压，看看boot.img是不是有Zimage和ramdisk.img组成
+mkdir boot
+cd boot
+unpackbootimg -i ../boot.img
+mkdir ramdisk
+cd ramdisk 
+gunzip -c ../boot.img-ramdisk.gz |cpio -i
+
+
diff --git "a/Build\347\263\273\347\273\237/Boot.img\345\206\205\346\240\270\351\225\234\345\203\217~" "b/Build\347\263\273\347\273\237/Boot.img\345\206\205\346\240\270\351\225\234\345\203\217~"
new file mode 100644
index 0000000..35d66e2
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/Boot.img\345\206\205\346\240\270\351\225\234\345\203\217~"
@@ -0,0 +1,11 @@
+linux内核镜像包含了内核二进制文件（ZImage）和上一小节介绍的内存磁盘镜像（ramdisk.img）,一般对应的镜像文件是boot.img(也可以是任何其他的名字)。由于ramdisk.img中包含的init命令是与Linux内核第一个交互的程序，所以在boot.img中需要同时包含Linux内核和ramdisk.img.当linux内核调用init后，系统就会根据init.rc及其相关文件中的代码对整个Android系统进行初始化。其中主要的初始化工作就是建立如/system /data等系统目录然后使用mount命令将相应的镜像挂在得到这些目录上。
+命令：
+unpackbootimg为解压命令，mkbottimg命令可以将zImage和ramdisk.img文件合并成boot.img下面先来用unpackbootimg命令将boot.img解压，看看boot.img是不是有Zimage和ramdisk.img组成
+mkdir boot
+cd boot
+unpackbootimg -i ../boot.img
+mkdir ramdisk
+cd ramdisk
+gunzip -c ../boot.img-ramdisk.gz |cpio -i
+
+
diff --git "a/Build\347\263\273\347\273\237/Build\347\263\273\347\273\237\347\232\204\347\256\200\344\273\213" "b/Build\347\263\273\347\273\237/Build\347\263\273\347\273\237\347\232\204\347\256\200\344\273\213"
new file mode 100644
index 0000000..0b42c05
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/Build\347\263\273\347\273\237\347\232\204\347\256\200\344\273\213"
@@ -0,0 +1,25 @@
+功能三部分，一部分编译程序 C，java
+	   二部分生成目标系统镜像
+	   三部分维护各个模块之间的依赖关系
+
+从大方面讲，Android的build系统可以分成三大块：第一块位于build/core目录下的文件  build系统的框架和核心。
+					   第二块位于device目录下的文件，存放的是具体产生的配置文件；
+					  第三块各个模块的编译文件：Android.mk，位于模块的源文件目录下。本章将分析三个部分脚本
+
+文件一的分析：
+	envsetup.sh文件的作用
+add_lunch_combo命令的功能是将调用该命令所传递的参数存放到一个全局的数组变量LUNCH_MENU_CHOICES执行lunch命令时打印出的菜单想正式这个数组的内容
+lunch 命令
+make命令：调用根目录下的makefile文件 ，里面指向build/core/main.mk文件
+这个main.mk非常的巨大，单内容构成三部分，变量定义，函数定义，目标依赖规则。
+在buildcore的目录下有两个文件夹，一个叫combo目录：主要存放定义了GCC编译器的版本和参数 
+另一个叫clang定义了llvm编译器clang的路径和参数
+gnu make的版本检查，
+make命令的使用
+make关于include 和-include命令区别
+检查Java的版本是否是1.7和1.6，不是则会报错退出，如果使用的java版本是1.7在linux下还要求必须是openjdk的版本，否则要求是oracle的jdk版本
+关于Build的构建模块为pathmap.mk文件中进行的处理
+
+
+
+
diff --git "a/Build\347\263\273\347\273\237/Build\347\263\273\347\273\237\347\232\204\347\256\200\344\273\213~" "b/Build\347\263\273\347\273\237/Build\347\263\273\347\273\237\347\232\204\347\256\200\344\273\213~"
new file mode 100644
index 0000000..8b7e47f
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/Build\347\263\273\347\273\237\347\232\204\347\256\200\344\273\213~"
@@ -0,0 +1,24 @@
+功能三部分，一部分编译程序 C，java
+	   二部分生成目标系统镜像
+	   三部分维护各个模块之间的依赖关系
+
+从大方面讲，Android的build系统可以分成三大块：第一块位于build/core目录下的文件  build系统的框架和核心。
+					   第二块位于device目录下的文件，存放的是具体产生的配置文件；
+					  第三块各个模块的编译文件：Android.mk，位于模块的源文件目录下。本章将分析三个部分脚本
+
+文件一的分析：
+	envsetup.sh文件的作用
+add_lunch_combo命令的功能是将调用该命令所传递的参数存放到一个全局的数组变量LUNCH_MENU_CHOICES执行lunch命令时打印出的菜单想正式这个数组的内容
+lunch 命令
+make命令：调用根目录下的makefile文件 ，里面指向build/core/main.mk文件
+这个main.mk非常的巨大，单内容构成三部分，变量定义，函数定义，目标依赖规则。
+在buildcore的目录下有两个文件夹，一个叫combo目录：主要存放定义了GCC编译器的版本和参数 
+另一个叫clang定义了llvm编译器clang的路径和参数
+gnu make的版本检查，
+make命令的使用
+make关于include 和-include命令区别
+检查Java的版本是否是1.7和1.6，不是则会报错退出，如果使用的java版本是1.7在linux下还要求必须是openjdk的版本，否则要求是oracle的jdk版本
+关于Build的构建模块为pathmap.mk文件中进行的处理
+
+
+
diff --git "a/Build\347\263\273\347\273\237/System.img\346\226\207\344\273\266\350\247\243\346\236\220" "b/Build\347\263\273\347\273\237/System.img\346\226\207\344\273\266\350\247\243\346\236\220"
new file mode 100644
index 0000000..88cca86
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/System.img\346\226\207\344\273\266\350\247\243\346\236\220"
@@ -0,0 +1,3 @@
+用于存储Android系统的核心文件，一般这些文件是不允许修改，之所以叫system.img文件是因为生成镜像之前的system目录保持一致。
+每一个.img文件的解压方式是不同的
+对于sysytem.img的解压工具为unyaffs
diff --git "a/Build\347\263\273\347\273\237/System.img\346\226\207\344\273\266\350\247\243\346\236\220~" "b/Build\347\263\273\347\273\237/System.img\346\226\207\344\273\266\350\247\243\346\236\220~"
new file mode 100644
index 0000000..88cca86
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/System.img\346\226\207\344\273\266\350\247\243\346\236\220~"
@@ -0,0 +1,3 @@
+用于存储Android系统的核心文件，一般这些文件是不允许修改，之所以叫system.img文件是因为生成镜像之前的system目录保持一致。
+每一个.img文件的解压方式是不同的
+对于sysytem.img的解压工具为unyaffs
diff --git "a/Build\347\263\273\347\273\237/main.mk" "b/Build\347\263\273\347\273\237/main.mk"
new file mode 100644
index 0000000..d5c8a1d
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/main.mk"
@@ -0,0 +1,18 @@
+main.mk文件
+Android Build 系统的主控文件。该文件主要作用是包含进其他mk文件，以及定义几个最重要的编译目标，如droid,sdk,ndk等。同时检查编译工具的版本，如make,gcc,javac等
+config.mk文件
+Android Build系统的配置文件，主要定义了许多的常量来负责不同类型模块编译，定义编译器参数并引入产品的BoardConfig.mk文件来配置产品参数，同时也定义了一些编译工具的路径，如aapt，mkbooting，javajar等。
+1/编译脚本的定义
+2/生成文件的命令也就是脚本include的写法
+3/pathmap.mk给一些头文件定义别名，将framwork下的一些源码目录按类别组合在意其并定义了别名，方便使用。
+4/定义C/C++代码编译时的参数以及系统常用包的后缀名：
+5/envsetup.mk包含进product_config.mk产品的编译参数。
+6/sekect.mk指定4次，指定的是交叉编译工具以及目标平台
+7javac的编译javac.mk文件
+8/bison和flex工具 /yasm工具 doxygen
+9/定义host平台和target平台各自编译，链接C/C++使用的参数
+10/clang/config.mk C/C++编译器
+12/定义sdk版本
+13/包含dumpvar.mk文件，打印出本次编译产品的配置信息
+
+
diff --git "a/Build\347\263\273\347\273\237/main.mk~" "b/Build\347\263\273\347\273\237/main.mk~"
new file mode 100644
index 0000000..d5c8a1d
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/main.mk~"
@@ -0,0 +1,18 @@
+main.mk文件
+Android Build 系统的主控文件。该文件主要作用是包含进其他mk文件，以及定义几个最重要的编译目标，如droid,sdk,ndk等。同时检查编译工具的版本，如make,gcc,javac等
+config.mk文件
+Android Build系统的配置文件，主要定义了许多的常量来负责不同类型模块编译，定义编译器参数并引入产品的BoardConfig.mk文件来配置产品参数，同时也定义了一些编译工具的路径，如aapt，mkbooting，javajar等。
+1/编译脚本的定义
+2/生成文件的命令也就是脚本include的写法
+3/pathmap.mk给一些头文件定义别名，将framwork下的一些源码目录按类别组合在意其并定义了别名，方便使用。
+4/定义C/C++代码编译时的参数以及系统常用包的后缀名：
+5/envsetup.mk包含进product_config.mk产品的编译参数。
+6/sekect.mk指定4次，指定的是交叉编译工具以及目标平台
+7javac的编译javac.mk文件
+8/bison和flex工具 /yasm工具 doxygen
+9/定义host平台和target平台各自编译，链接C/C++使用的参数
+10/clang/config.mk C/C++编译器
+12/定义sdk版本
+13/包含dumpvar.mk文件，打印出本次编译产品的配置信息
+
+
diff --git "a/Build\347\263\273\347\273\237/ramdisk.img\351\225\234\345\203\217\345\210\206\346\236\220" "b/Build\347\263\273\347\273\237/ramdisk.img\351\225\234\345\203\217\345\210\206\346\236\220"
new file mode 100644
index 0000000..a8e6d96
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/ramdisk.img\351\225\234\345\203\217\345\210\206\346\236\220"
@@ -0,0 +1,17 @@
+内存磁盘镜像存储了Linux内核启动时装载的核心文件，通常的镜像文件名为ramdisk.img.尽管ramdisk.img需要放在Linux内核镜像（boot.img）中，但却属于Android源代码的一部分，也就是说，在编译Android源代码后，会生成一个ramdisk.img文件，其实该文件就是root目录压缩后生成的文件。ramdisk,ing文件中封装的内存是Linux内核与Androiud系统接触的第一批文件，其中有一个非常重要的init命令（在root目录中可以找到该命名文件），该命令用于读取init.rc以及相关配置文件中的初始化命令。之所以称ramdisk.img为内存磁盘镜像，是因为ramdisk.img中
+
+内存磁盘镜像存储了Linux内核启动时装载的核心文件,
+init脚本在这里修改
+ramdisk属于boot.img(包含关系)
+制作修改解压
+命令：
+mkdir ramdisk
+cd ramdisk
+
+方式1：gunzip -c ../ramdisk.img >../ramdisk.cpio
+	cpio -i < ../ramdisk.cpio
+
+方式2：gunzip -c ../ramdisk.img |cpio -i
+制作：
+mkbootfs . |minigzip > ../ramdisk.img.new
+
diff --git "a/Build\347\263\273\347\273\237/ramdisk.img\351\225\234\345\203\217\345\210\206\346\236\220~" "b/Build\347\263\273\347\273\237/ramdisk.img\351\225\234\345\203\217\345\210\206\346\236\220~"
new file mode 100644
index 0000000..a8e6d96
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/ramdisk.img\351\225\234\345\203\217\345\210\206\346\236\220~"
@@ -0,0 +1,17 @@
+内存磁盘镜像存储了Linux内核启动时装载的核心文件，通常的镜像文件名为ramdisk.img.尽管ramdisk.img需要放在Linux内核镜像（boot.img）中，但却属于Android源代码的一部分，也就是说，在编译Android源代码后，会生成一个ramdisk.img文件，其实该文件就是root目录压缩后生成的文件。ramdisk,ing文件中封装的内存是Linux内核与Androiud系统接触的第一批文件，其中有一个非常重要的init命令（在root目录中可以找到该命名文件），该命令用于读取init.rc以及相关配置文件中的初始化命令。之所以称ramdisk.img为内存磁盘镜像，是因为ramdisk.img中
+
+内存磁盘镜像存储了Linux内核启动时装载的核心文件,
+init脚本在这里修改
+ramdisk属于boot.img(包含关系)
+制作修改解压
+命令：
+mkdir ramdisk
+cd ramdisk
+
+方式1：gunzip -c ../ramdisk.img >../ramdisk.cpio
+	cpio -i < ../ramdisk.cpio
+
+方式2：gunzip -c ../ramdisk.img |cpio -i
+制作：
+mkbootfs . |minigzip > ../ramdisk.img.new
+
diff --git "a/Build\347\263\273\347\273\237/userdata.img\351\225\234\345\203\217" "b/Build\347\263\273\347\273\237/userdata.img\351\225\234\345\203\217"
new file mode 100644
index 0000000..562ab51
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/userdata.img\351\225\234\345\203\217"
@@ -0,0 +1,8 @@
+用户数据镜像
+用户镜像用来存储与用户相关的数据，一般对应的文件名是userdata.img(也可以是任何文件名)，为了方便，本书将以userdata.img表示用户镜像文件。这些数据大多都是有用户在使用Android设备的过程中产生的，
+这个镜像权限为用户级：
+例如：如果允许用户使用普通的方式卸载ROM内置的应用，就可以将APK文件放到userdata.img文件中，
+作用：
+放置apk可以卸载，确定设备内存的大小，在Android设备中可供用户操作的存储区域通常有如下三部分。
+RAM， 内存，外部存储器SD卡
+Android的内存为内置SD卡
diff --git "a/Build\347\263\273\347\273\237/userdata.img\351\225\234\345\203\217~" "b/Build\347\263\273\347\273\237/userdata.img\351\225\234\345\203\217~"
new file mode 100644
index 0000000..d9a9e53
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/userdata.img\351\225\234\345\203\217~"
@@ -0,0 +1,7 @@
+用户数据镜像
+用户镜像用来存储与用户相关的数据，一般对应的文件名是userdata.img(也可以是任何文件名)，为了方便，本书将以userdata.img表示用户镜像文件。这些数据大多都是有用户在使用Android设备的过程中产生的，
+这个镜像权限为用户级：
+例如：如果允许用户使用普通的方式卸载ROM内置的应用，就可以将APK文件放到userdata.img文件中，
+作用：
+放置apk可以卸载，确定设备内存的大小，在Android设备中可供用户操作的存储区域通常有如下三部分。
+RAM 内存，外部存储器SD卡
diff --git "a/Build\347\263\273\347\273\237/\347\224\237\346\210\220\344\272\247\347\211\251Image\346\226\207\344\273\266" "b/Build\347\263\273\347\273\237/\347\224\237\346\210\220\344\272\247\347\211\251Image\346\226\207\344\273\266"
new file mode 100644
index 0000000..1d5d9ab
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/\347\224\237\346\210\220\344\272\247\347\211\251Image\346\226\207\344\273\266"
@@ -0,0 +1,6 @@
+Android 编译完成后会生成几个Image文件，包括：boot.img---system.img----recovery.img----userdata.img
+boot.img
+是一种Android自定义的文件格式。该格式包括了一个2*1024大小的文件头，文件头后面是用gzip压缩过的Kernel映像，而后面是一个ramdisk映像，最后是一个载入器程序，这个载入器是可选的，某些映像文件中没有这部分。
+page的整数倍
+ramdisk.img对应的是root目录
+
diff --git "a/Build\347\263\273\347\273\237/\347\224\237\346\210\220\344\272\247\347\211\251Image\346\226\207\344\273\266~" "b/Build\347\263\273\347\273\237/\347\224\237\346\210\220\344\272\247\347\211\251Image\346\226\207\344\273\266~"
new file mode 100644
index 0000000..1d5d9ab
--- /dev/null
+++ "b/Build\347\263\273\347\273\237/\347\224\237\346\210\220\344\272\247\347\211\251Image\346\226\207\344\273\266~"
@@ -0,0 +1,6 @@
+Android 编译完成后会生成几个Image文件，包括：boot.img---system.img----recovery.img----userdata.img
+boot.img
+是一种Android自定义的文件格式。该格式包括了一个2*1024大小的文件头，文件头后面是用gzip压缩过的Kernel映像，而后面是一个ramdisk映像，最后是一个载入器程序，这个载入器是可选的，某些映像文件中没有这部分。
+page的整数倍
+ramdisk.img对应的是root目录
+
diff --git "a/Dalvik/Dalvik\345\220\257\345\212\250\344\270\216\345\210\235\345\247\213\345\214\226" "b/Dalvik/Dalvik\345\220\257\345\212\250\344\270\216\345\210\235\345\247\213\345\214\226"
new file mode 100644
index 0000000..ac55c48
--- /dev/null
+++ "b/Dalvik/Dalvik\345\220\257\345\212\250\344\270\216\345\210\235\345\247\213\345\214\226"
@@ -0,0 +1,7 @@
+
+路径：/home/hexstia/SourceCode5.0/androidL/frameworks/base/core/jni/AndroidRuntime.cpp
+Dalvik虚拟机在zygote进程中启动和初始化。AndroidRuntime.cpp的startVM（）函数开始启动Dalvik
+AndroidRuntime--->JNI_CreateJAVAVM();
+执行顺序start()---->jni_invocation.cpp----->init()----->AndroidRuntime.cpp----->startVm()
+startVm()：主要是解析各种虚拟机相关的属性，利用保存在属性中的值初始化系统的变量。
+startVm()----->JNI_CreateJavaVM()(属于jni_internal.cc)---->create--->init()
diff --git "a/Dalvik/Dalvik\345\220\257\345\212\250\344\270\216\345\210\235\345\247\213\345\214\226~" "b/Dalvik/Dalvik\345\220\257\345\212\250\344\270\216\345\210\235\345\247\213\345\214\226~"
new file mode 100644
index 0000000..de57a27
--- /dev/null
+++ "b/Dalvik/Dalvik\345\220\257\345\212\250\344\270\216\345\210\235\345\247\213\345\214\226~"
@@ -0,0 +1,7 @@
+
+路径：/home/hexstia/SourceCode5.0/androidL/frameworks/base/core/jni/AndroidRuntime.cpp
+Dalvik虚拟机在zygote进程中启动和初始化。AndroidRuntime.cpp的startVM（）函数开始启动Dalvik
+AndroidRuntime--->JNI_CreateJAVAVM();
+执行顺序start()---->jni_invocation.cpp----->init()----->AndroidRuntime.cpp----->startVm()
+startVm()：主要是解析各种虚拟机相关的属性，利用保存在属性中的值初始化系统的变量。
+startVm()----->JNI_CreateJavaVM()(属于jni_internal.cc)
diff --git "a/Dalvik/Dalvik\347\256\200\344\273\213" "b/Dalvik/Dalvik\347\256\200\344\273\213"
new file mode 100644
index 0000000..62fd0b8
--- /dev/null
+++ "b/Dalvik/Dalvik\347\256\200\344\273\213"
@@ -0,0 +1,13 @@
+Dalvik是Google为Android平台开发的虚拟机，它是Android应用的解释其。Dalvik虚拟机并非java虚拟机的简单替代品，而是有自己鲜明的特点
+Dalvik虚拟机最大的特点是基于寄存器,而不是像JVM基于栈.java是一种半编译半解释型语言.需要吧java代码编译称中间代码来解释执行.java设计的目的之一是为了跨平台性运行,为了这一目标,生成的中间代码没有使用寄存器,而是完全靠对战来表示变量,但是,这样会对运行速度带来负面影响.Dalvik设计之初就是为了运行在嵌入式设备上.
+对性能比较看重.而且早期只考虑支持的arm平台,对跨平台没有太多的要求,因此,Dalvik选择使用寄存器来加快代码的执行速度.
+既然使用了寄存器,那么jvm的字节吗也就无法使用了。于是goolgle开发了一套新的指令作为dalvik虚拟机的中间码。作为支持寄存器的代价，dalvik的指令一条需要两个字节，而jvm通常只需要一个字节。
+dalvik中使用的寄存器，一部分被映射到arm的寄存器，另一部分还是用堆栈在模拟。
+Android也使用新开法的Dex文件格式来代替Java虚拟机的CLASS文件。相比Class文件格式Dex文件格式有下面的改进：
+
+生成Dex文件时，会把素有的Class文件整合到一个Dex文件中，同时对所有类进行优化合并，去除荣誉的信息，这样，不但减少整个的文件大小，也提高类的装载速度。
+Dex文件会把每个类文件的常量池进行分解合并，最后放在一个常量池中，节约了内存的使用。
+Dex文件中所有类的字符串常量也会整理合并称一份。
+Dex文件中的签名只有一份，验证也只有一次；
+Dalvik虚拟机为应用创建的线程都是Linux线程。通过Linux的内核来管理线程。不但效率高，也简化了Dalvik虚拟机的设计。
+
diff --git "a/Dalvik/Dalvik\347\256\200\344\273\213~" "b/Dalvik/Dalvik\347\256\200\344\273\213~"
new file mode 100644
index 0000000..61d56de
--- /dev/null
+++ "b/Dalvik/Dalvik\347\256\200\344\273\213~"
@@ -0,0 +1,12 @@
+Dalvik是Google为Android平台开发的虚拟机，它是Android应用的解释其。Dalvik虚拟机并非java虚拟机的简单替代品，而是有自己鲜明的特点
+Dalvik虚拟机最大的特点是基于寄存器,而不是像JVM基于栈.java是一种半编译半解释型语言.需要吧java代码编译称中间代码来解释执行.java设计的目的之一是为了跨平台性运行,为了这一目标,生成的中间代码没有使用寄存器,而是完全靠对战来表示变量,但是,这样会对运行速度带来负面影响.Dalvik设计之初就是为了运行在嵌入式设备上.
+对性能比较看重.而且早期只考虑支持的arm平台,对跨平台没有太多的要求,因此,Dalvik选择使用寄存器来加快代码的执行速度.
+既然使用了寄存器,那么jvm的字节吗也就无法使用了。于是goolgle开发了一套新的指令作为dalvik虚拟机的中间码。作为支持寄存器的代价，dalvik的指令一条需要两个字节，而jvm通常只需要一个字节。
+dalvik中使用的寄存器，一部分被映射到arm的寄存器，另一部分还是用堆栈在模拟。
+Android也使用新开法的Dex文件格式来代替Java虚拟机的CLASS文件。相比Class文件格式Dex文件格式有下面的改进：
+
+生成Dex文件时，会把素有的Class文件整合到一个Dex文件中，同时对所有类进行优化合并，去除荣誉的信息，这样，不但减少整个的文件大小，也提高类的装载速度。
+Dex文件会把每个类文件的常量池进行分解合并，最后放在一个常量池中，节约了内存的使用。
+Dex文件中所有类的字符串常量也会整理合并称一份。
+Dex文件中的签名只有一份，验证也只有一次；
+Dalvik虚拟机为应用创建的线程都是Linux线程。通过Linux的内核来管理线程。不但效率高，也简化了Dalvik虚拟机的设计。
diff --git a/Dalvik/Startvm().xmind b/Dalvik/Startvm().xmind
new file mode 100644
index 0000000000000000000000000000000000000000..31784feda3241a7899aced2898b421c1453ec882
GIT binary patch
literal 39298
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

literal 0
HcmV?d00001

diff --git "a/Dalvik/art/art\347\256\200\344\273\213" "b/Dalvik/art/art\347\256\200\344\273\213"
new file mode 100644
index 0000000..a3836cb
--- /dev/null
+++ "b/Dalvik/art/art\347\256\200\344\273\213"
@@ -0,0 +1,8 @@
+ART和dalvik相比，系统的性能得到了显著提升，同时占用的内存更少，因此能支持配置更低的设备，但是ART模式下编译出来的文件会比以前增大10%-20%，系统需要更多的存储空间，同时因为在安装是要执行编译，应用的安装时间也比以前更长了。
+两种模式的区别，从系统的执行角度看，ART和Dalvik的区别表现在两个地方，
+一/	是在安装应用执行优化的时候，Dalvik模式下执行的是dexopt程序工具，而ART模式下执行的是dex2oat程序工具，通过dex2oat程序编译后得到的是elf格式的可
+        执行文件。
+二/     是在运行应用时，Dalvik模式下系统为应用进程链接的是libdvm.so，而art模式下链接的是libart.so这两个动态库都实现了相同的接口，因此能够相互替换。
+
+
+
diff --git "a/Dalvik/art/art\347\256\200\344\273\213~" "b/Dalvik/art/art\347\256\200\344\273\213~"
new file mode 100644
index 0000000..a3836cb
--- /dev/null
+++ "b/Dalvik/art/art\347\256\200\344\273\213~"
@@ -0,0 +1,8 @@
+ART和dalvik相比，系统的性能得到了显著提升，同时占用的内存更少，因此能支持配置更低的设备，但是ART模式下编译出来的文件会比以前增大10%-20%，系统需要更多的存储空间，同时因为在安装是要执行编译，应用的安装时间也比以前更长了。
+两种模式的区别，从系统的执行角度看，ART和Dalvik的区别表现在两个地方，
+一/	是在安装应用执行优化的时候，Dalvik模式下执行的是dexopt程序工具，而ART模式下执行的是dex2oat程序工具，通过dex2oat程序编译后得到的是elf格式的可
+        执行文件。
+二/     是在运行应用时，Dalvik模式下系统为应用进程链接的是libdvm.so，而art模式下链接的是libart.so这两个动态库都实现了相同的接口，因此能够相互替换。
+
+
+
diff --git "a/ELF\346\226\207\344\273\266\345\210\206\346\236\220" "b/ELF\346\226\207\344\273\266\345\210\206\346\236\220"
new file mode 100644
index 0000000..6cb1a38
--- /dev/null
+++ "b/ELF\346\226\207\344\273\266\345\210\206\346\236\220"
@@ -0,0 +1,5 @@
+elf是executable and Linking Format（可执行链接格式）的缩写，最初有Unix系统实验室发布，它是应用程序二进制接口（ABI application binary interface）的一部分。ELF标准的目的是为软件开发人员提供一组二进制的接口定义，这些接口可以在多种操作系统环境下生效，从而减少了二次开发的工作量
+elf文件以节的方式组织在一起的，节描述了文件的各项信息，例如代码，数据，符号表，重定位表，全局偏移表等。可执行文件装载进内存时，并不是被完整地映射内存，而是根据ELF文件中格式的定义，一段一段的装载进去，因此，（（（可执行文件的格式和内存的映射并不完全相同））），文件装载进内存后是以段“segment”的方式来组织的：如代码段，数据段，动态段等.
+ELF文件有三种：可执行文件，动态库(.so),重定位文件（.o文件）
+节区头部表：生成阶段用的
+程序头部表：可执行文件装载的时候用到。
diff --git "a/ELF\346\226\207\344\273\266\345\210\206\346\236\220~" "b/ELF\346\226\207\344\273\266\345\210\206\346\236\220~"
new file mode 100644
index 0000000..6cb1a38
--- /dev/null
+++ "b/ELF\346\226\207\344\273\266\345\210\206\346\236\220~"
@@ -0,0 +1,5 @@
+elf是executable and Linking Format（可执行链接格式）的缩写，最初有Unix系统实验室发布，它是应用程序二进制接口（ABI application binary interface）的一部分。ELF标准的目的是为软件开发人员提供一组二进制的接口定义，这些接口可以在多种操作系统环境下生效，从而减少了二次开发的工作量
+elf文件以节的方式组织在一起的，节描述了文件的各项信息，例如代码，数据，符号表，重定位表，全局偏移表等。可执行文件装载进内存时，并不是被完整地映射内存，而是根据ELF文件中格式的定义，一段一段的装载进去，因此，（（（可执行文件的格式和内存的映射并不完全相同））），文件装载进内存后是以段“segment”的方式来组织的：如代码段，数据段，动态段等.
+ELF文件有三种：可执行文件，动态库(.so),重定位文件（.o文件）
+节区头部表：生成阶段用的
+程序头部表：可执行文件装载的时候用到。
diff --git "a/JNI\346\226\271\346\263\225\347\232\204\345\243\260\346\230\216" "b/JNI\346\226\271\346\263\225\347\232\204\345\243\260\346\230\216"
new file mode 100644
index 0000000..36dd991
--- /dev/null
+++ "b/JNI\346\226\271\346\263\225\347\232\204\345\243\260\346\230\216"
@@ -0,0 +1,26 @@
+关于JNI方法的调用过程我们已经了解的非常清楚，现在我们如何实现一个自己定义的方法的使用呢？
+在java代码中
+1。类中创建一个方法
+例如：
+public native void show();
+2。类中创建游离静态代码快书写加载库
+例如：
+static {
+		System.loadLibrary("hello-jni");
+	}
+3。调用javah程序生成该类的头文件
+4。定义头文件中的方法在xxx.c文件中
+JNIEXPORT void JNICALL Java_com_example_hellojni_HelloJni_show
+(JNIEnv env, jobject obj){
+首先介绍一下参数：
+参数1 jnienv类型是指向可用JNI函数表的接口指针；
+参数2 jobject是hellojni类实例的java对象引用相当与java中的this关键字
+原生代码通过jnienv接口指针提供的各种函数来使用虚拟机的功能。jnienv是一个指向线程-局部数据的指针，而线程-局部数据中包含指向函数表的指针。实现原生方法的函数将JNIenv接口指针作为他们的第一个参数
+}
+注意
+传递给每一个原声方法调用的JNIenv接口指针在与方法调用相关线程中也有效，但是它不能被缓存以及被其他县城使用。
+原生代码是C与原生代码是C++其调用JNI函数的语法不同。C代码中，JNIenv是指向JNINativeInterface结构的指针，为了访问任何一个JNI函数，该指针需要首先被解引用，因为C代码中的JNI函数不了解当前的JNi环境，JNIenv实力应该作为第一个参数传递给每一个JNI函数调用者。
+实例方法：
+
+
+
diff --git "a/JNI\346\226\271\346\263\225\347\232\204\345\243\260\346\230\216~" "b/JNI\346\226\271\346\263\225\347\232\204\345\243\260\346\230\216~"
new file mode 100644
index 0000000..36dd991
--- /dev/null
+++ "b/JNI\346\226\271\346\263\225\347\232\204\345\243\260\346\230\216~"
@@ -0,0 +1,26 @@
+关于JNI方法的调用过程我们已经了解的非常清楚，现在我们如何实现一个自己定义的方法的使用呢？
+在java代码中
+1。类中创建一个方法
+例如：
+public native void show();
+2。类中创建游离静态代码快书写加载库
+例如：
+static {
+		System.loadLibrary("hello-jni");
+	}
+3。调用javah程序生成该类的头文件
+4。定义头文件中的方法在xxx.c文件中
+JNIEXPORT void JNICALL Java_com_example_hellojni_HelloJni_show
+(JNIEnv env, jobject obj){
+首先介绍一下参数：
+参数1 jnienv类型是指向可用JNI函数表的接口指针；
+参数2 jobject是hellojni类实例的java对象引用相当与java中的this关键字
+原生代码通过jnienv接口指针提供的各种函数来使用虚拟机的功能。jnienv是一个指向线程-局部数据的指针，而线程-局部数据中包含指向函数表的指针。实现原生方法的函数将JNIenv接口指针作为他们的第一个参数
+}
+注意
+传递给每一个原声方法调用的JNIenv接口指针在与方法调用相关线程中也有效，但是它不能被缓存以及被其他县城使用。
+原生代码是C与原生代码是C++其调用JNI函数的语法不同。C代码中，JNIenv是指向JNINativeInterface结构的指针，为了访问任何一个JNI函数，该指针需要首先被解引用，因为C代码中的JNI函数不了解当前的JNi环境，JNIenv实力应该作为第一个参数传递给每一个JNI函数调用者。
+实例方法：
+
+
+
diff --git "a/Java\345\220\257\345\212\250\346\265\201\347\250\213/zygote\344\275\234\347\224\250" "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/zygote\344\275\234\347\224\250"
new file mode 100644
index 0000000..da7228d
--- /dev/null
+++ "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/zygote\344\275\234\347\224\250"
@@ -0,0 +1,2 @@
+zygote的主要功能就是执行Android应用程序，在Android系统中运行新的应用，如同卵子受精分裂一样，需要跟zygote进程结合后才能执行
+zygote进程运行时，、会初始化虚拟机，并启动他，Android的应用程序是由Java编写的，他们不能直接以本地进程的形态运行在Linux上，只能运行在Dalvik虚拟机上。并且，每个应用程序都运行在各自的虚拟机中，应用程序每次运行都要重新初始化并启动虚拟机，这个过程会耗费相当长时间，是托慢应用程序的原因之一，因此在Android中应用程序运行之前，zygote进程通过共享已运行的虚拟机代码与内存信息，缩短应用程序运行所耗费的时间，并且，他会事先将应用程序要使用的Android Framework中的类与资源加载到内存中，并组织形成所用资源的链接信息。新运行的Android应用程序在在使用所需资源时不必每次重新形成资源的链接信息，这回节省大量时间，提高程序运行速度。
diff --git "a/Java\345\220\257\345\212\250\346\265\201\347\250\213/zygote\344\275\234\347\224\250~" "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/zygote\344\275\234\347\224\250~"
new file mode 100644
index 0000000..da7228d
--- /dev/null
+++ "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/zygote\344\275\234\347\224\250~"
@@ -0,0 +1,2 @@
+zygote的主要功能就是执行Android应用程序，在Android系统中运行新的应用，如同卵子受精分裂一样，需要跟zygote进程结合后才能执行
+zygote进程运行时，、会初始化虚拟机，并启动他，Android的应用程序是由Java编写的，他们不能直接以本地进程的形态运行在Linux上，只能运行在Dalvik虚拟机上。并且，每个应用程序都运行在各自的虚拟机中，应用程序每次运行都要重新初始化并启动虚拟机，这个过程会耗费相当长时间，是托慢应用程序的原因之一，因此在Android中应用程序运行之前，zygote进程通过共享已运行的虚拟机代码与内存信息，缩短应用程序运行所耗费的时间，并且，他会事先将应用程序要使用的Android Framework中的类与资源加载到内存中，并组织形成所用资源的链接信息。新运行的Android应用程序在在使用所需资源时不必每次重新形成资源的链接信息，这回节省大量时间，提高程序运行速度。
diff --git "a/Java\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\346\265\201\347\250\213\346\246\202\350\277\260" "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\346\265\201\347\250\213\346\246\202\350\277\260"
new file mode 100644
index 0000000..6a7b703
--- /dev/null
+++ "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\346\265\201\347\250\213\346\246\202\350\277\260"
@@ -0,0 +1,44 @@
+Android系统的本地部分启动完成之后，将形成一些列运行的守护进程。其中的名称为zygote的守护进程将继续完成java部分能的初始化，java部分初始化结束后，形成zygote，systemServer以及若干个Java应用的进程，系统进入正常运行阶段。
+Java的启动流程可以分成以下几个步骤。
+1.从本地可执行程序运行名为zygote的守护进程
+2.zygote运行zygoteInit(进入java程序)
+3.ZygoteInit 运行SystemServer(Java类)，并分裂出一个新的进程
+4.SystemServer 首先运行libandroid_servers.so库当中初始化（进入本地程序）
+5.执行libandroid_servers.so当中的系统初始化。调用system_init()函数进入
+6.SystemServer中的java初始化再次被调用(再入Java程序)
+7.建立ServerThread线程建立各个服务，然后进入循环.
+8.ActivityManagerService服务在启动结束发送相关消息.
+9.各个Java应用程序运行
+
+关于路径的方式：首先为init.rc--->init.zygote32_64.rc--->开启进程
+实际上是/system/bin/app_proess32或者是64
+该可执行程序的源码在framework/base/cmds/app_process 链接libandroid_runtime.so动态库 间接链接libdvm.so库调用虚拟机
+在守护进程zygote运行后com.android.internal.os.ZygoteInit进入Java环境运行,
+zygoteInit是java框架库中的内部类代码在framework/base/core/java/com/android/internal/os
+--->main方法是一个android系统正常运行之后所执行的第一段Java代码.
+  if (startSystemServer) {
+                startSystemServer(abiList, socketName);
+            }
+开启ststemserver在zygoteinit.java
+forkSystemServer方法，它是一个native方法对应的源文件在dalvik\vm\native\dalvik_system_Zygote.cpp
+在forkAndSpecializeCommon方法中，我们创建了子进程，并返回了子进程id，接下来我检查如果system_server进程是否退出，若是的话则zygote进程也将会被被干掉，由此可见其重要(在此方法中调用了fork（）创建出进程)
+===========================
+setSignalHandler();
+这里我们发现我们之前已经看到在forkSystemServer方法中已经检查过system_server进程是否死亡，为什么这里还要再一次进行检查？这是为了防止在我们还没有得到fork子进程的pid时，system_server进程就已经死亡的情况。
+
+总结一下：system_server进程的创建经历了漫长的历程：首先startSystemServer中调用了native方法forkSystemServer；之后在native方法forkSystemServer中调用了forkAndSpecializeCommon方法；在forkAndSpecializeCommon方法中fork之前还调用了setSignalHandler来设置信号处理项。这样，我们的system_server进程终于被创建起来，同时他还和zygote进程保持着同生共死的关系。
+=============================================================================================
+在startSystemServer的方法中我们可以看到，在创建进程之后，在子进程即system_server进程中会执行handleSystemServerProcess方法，这便是system_server的职责所在，
+可以看到最后system_server进程来到了RuntimeInit中，它的实现在frameworks\base\core\java\com\android\internal\os\RuntimeInit.java中
+
+handleSystemServerProcess-->调用了RuntimeInit.zygoteInit---->
+//关闭System.out和System.err，使用Android log
+        redirectLogStreams();
+        //做一些常规初始化
+        commonInit();
+        //native层初始化,调用此方法之后system_server将与Binder通信系统建立联系，这样就可以使用Binder了
+        nativeZygoteInit();
+最终，system_server开启了一个新的线程，并执行了它的initAndLoop方法，其也被定义在SystemServer.java中，该方法的代码较多，其主要的工作就是开启了系统中的各项服务，如电池服务，蓝牙服务等等。并调用了Looper的prepareMainLooper方法进行消息循环，然后处理消息，这里不再赘述。
+
+最后，我们来总结一下：
+首先system_server执行handleSystemServerProcess方法来完成自己的使命； 之后调用RuntimeInit.zygoteInit方法，在这里我们进行了一些常规的初始化工作已经native层的初始化，从而与Binder通信建立联系； 之后调用invokeStaticMain方法，利用抛出异常的方法在ZygoteInit的main方法中截获并去执行SystemServer的main方法； 在SystemServer的main方法中，我调用nativeInit方法去初始化一些传感器服务，并开启了单独的线程去开启Android系统中的各项服务，并调用了Looper的prepareMainLooper方法进行消息循环，然后处理消息                                                     
diff --git "a/Java\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\346\265\201\347\250\213\346\246\202\350\277\260~" "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\346\265\201\347\250\213\346\246\202\350\277\260~"
new file mode 100644
index 0000000..6a7b703
--- /dev/null
+++ "b/Java\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\346\265\201\347\250\213\346\246\202\350\277\260~"
@@ -0,0 +1,44 @@
+Android系统的本地部分启动完成之后，将形成一些列运行的守护进程。其中的名称为zygote的守护进程将继续完成java部分能的初始化，java部分初始化结束后，形成zygote，systemServer以及若干个Java应用的进程，系统进入正常运行阶段。
+Java的启动流程可以分成以下几个步骤。
+1.从本地可执行程序运行名为zygote的守护进程
+2.zygote运行zygoteInit(进入java程序)
+3.ZygoteInit 运行SystemServer(Java类)，并分裂出一个新的进程
+4.SystemServer 首先运行libandroid_servers.so库当中初始化（进入本地程序）
+5.执行libandroid_servers.so当中的系统初始化。调用system_init()函数进入
+6.SystemServer中的java初始化再次被调用(再入Java程序)
+7.建立ServerThread线程建立各个服务，然后进入循环.
+8.ActivityManagerService服务在启动结束发送相关消息.
+9.各个Java应用程序运行
+
+关于路径的方式：首先为init.rc--->init.zygote32_64.rc--->开启进程
+实际上是/system/bin/app_proess32或者是64
+该可执行程序的源码在framework/base/cmds/app_process 链接libandroid_runtime.so动态库 间接链接libdvm.so库调用虚拟机
+在守护进程zygote运行后com.android.internal.os.ZygoteInit进入Java环境运行,
+zygoteInit是java框架库中的内部类代码在framework/base/core/java/com/android/internal/os
+--->main方法是一个android系统正常运行之后所执行的第一段Java代码.
+  if (startSystemServer) {
+                startSystemServer(abiList, socketName);
+            }
+开启ststemserver在zygoteinit.java
+forkSystemServer方法，它是一个native方法对应的源文件在dalvik\vm\native\dalvik_system_Zygote.cpp
+在forkAndSpecializeCommon方法中，我们创建了子进程，并返回了子进程id，接下来我检查如果system_server进程是否退出，若是的话则zygote进程也将会被被干掉，由此可见其重要(在此方法中调用了fork（）创建出进程)
+===========================
+setSignalHandler();
+这里我们发现我们之前已经看到在forkSystemServer方法中已经检查过system_server进程是否死亡，为什么这里还要再一次进行检查？这是为了防止在我们还没有得到fork子进程的pid时，system_server进程就已经死亡的情况。
+
+总结一下：system_server进程的创建经历了漫长的历程：首先startSystemServer中调用了native方法forkSystemServer；之后在native方法forkSystemServer中调用了forkAndSpecializeCommon方法；在forkAndSpecializeCommon方法中fork之前还调用了setSignalHandler来设置信号处理项。这样，我们的system_server进程终于被创建起来，同时他还和zygote进程保持着同生共死的关系。
+=============================================================================================
+在startSystemServer的方法中我们可以看到，在创建进程之后，在子进程即system_server进程中会执行handleSystemServerProcess方法，这便是system_server的职责所在，
+可以看到最后system_server进程来到了RuntimeInit中，它的实现在frameworks\base\core\java\com\android\internal\os\RuntimeInit.java中
+
+handleSystemServerProcess-->调用了RuntimeInit.zygoteInit---->
+//关闭System.out和System.err，使用Android log
+        redirectLogStreams();
+        //做一些常规初始化
+        commonInit();
+        //native层初始化,调用此方法之后system_server将与Binder通信系统建立联系，这样就可以使用Binder了
+        nativeZygoteInit();
+最终，system_server开启了一个新的线程，并执行了它的initAndLoop方法，其也被定义在SystemServer.java中，该方法的代码较多，其主要的工作就是开启了系统中的各项服务，如电池服务，蓝牙服务等等。并调用了Looper的prepareMainLooper方法进行消息循环，然后处理消息，这里不再赘述。
+
+最后，我们来总结一下：
+首先system_server执行handleSystemServerProcess方法来完成自己的使命； 之后调用RuntimeInit.zygoteInit方法，在这里我们进行了一些常规的初始化工作已经native层的初始化，从而与Binder通信建立联系； 之后调用invokeStaticMain方法，利用抛出异常的方法在ZygoteInit的main方法中截获并去执行SystemServer的main方法； 在SystemServer的main方法中，我调用nativeInit方法去初始化一些传感器服务，并开启了单独的线程去开启Android系统中的各项服务，并调用了Looper的prepareMainLooper方法进行消息循环，然后处理消息                                                     
diff --git "a/Java\345\261\202/Java\345\237\272\347\241\200\345\272\223" "b/Java\345\261\202/Java\345\237\272\347\241\200\345\272\223"
new file mode 100644
index 0000000..c6f5aee
--- /dev/null
+++ "b/Java\345\261\202/Java\345\237\272\347\241\200\345\272\223"
@@ -0,0 +1,6 @@
+android中Java标准库位于根目录:/libcore
+主要查看两个mk文件NativeCode.mk和JavaLibary.mk文件一个是本地的mk编译
+一个是java库的生成
+注意点: 原来模块名为：core --->core-libart模块
+他们的jar包生成在目标系统的/system/framework目录中。
+libcore最主要目录为luni 分别代表的是lang util net io
diff --git "a/Java\345\261\202/Java\345\237\272\347\241\200\345\272\223~" "b/Java\345\261\202/Java\345\237\272\347\241\200\345\272\223~"
new file mode 100644
index 0000000..c6f5aee
--- /dev/null
+++ "b/Java\345\261\202/Java\345\237\272\347\241\200\345\272\223~"
@@ -0,0 +1,6 @@
+android中Java标准库位于根目录:/libcore
+主要查看两个mk文件NativeCode.mk和JavaLibary.mk文件一个是本地的mk编译
+一个是java库的生成
+注意点: 原来模块名为：core --->core-libart模块
+他们的jar包生成在目标系统的/system/framework目录中。
+libcore最主要目录为luni 分别代表的是lang util net io
diff --git "a/Java\345\261\202/java\350\277\220\350\241\214\347\216\257\345\242\203" "b/Java\345\261\202/java\350\277\220\350\241\214\347\216\257\345\242\203"
new file mode 100644
index 0000000..0bfcef5
--- /dev/null
+++ "b/Java\345\261\202/java\350\277\220\350\241\214\347\216\257\345\242\203"
@@ -0,0 +1,17 @@
+Java运行环境被称之为Android Runtime包括虚拟机和核心库，虚拟机是java运行的基础，核心库提供尽量与javase 标准兼容的类库
+Dalvik虚拟机主要完成对象生命周期管理，堆栈管理，安全和异常管理，以及垃圾回收等重要管理，与标准的java虚拟机运行的class字节码不同,Dalvik虚拟机所用的字节码是dex格式，dex格式的文件针对小内存使用做了优化.
+
+Dalvik目录：/dalvik 有实现和工具
+
+其中子目录vm libdex,dx,dalvikvm 几个子目录为虚拟机的核心实现，dexopt,dexdump ,dexlist等子目录为辅助工具的内容，大多数工具和库都有主机和目标机两个版本，在编译过程中将生成目标及和主机的多个目标。
+
+JIT（just-in-time compiler）简称 运行时编译 android2.2系统支持 
+
+传统java虚拟机是基于堆栈的，但是dalvik虚拟机是基于寄存器的，这样的实现方式在通用性和可移植性上差了一些，但是可以获得更好的性能
+Dalvik虚拟机的底层是有C语言和汇编语言实现的，依赖于linux内核的一些功能，比如线程机制和底层内存管理机制
+Dalvik虚拟机核心内容还包括一下几个目录
+libdex ：dex字节码解析处理程序，由纯C写成的工具库生成静态库libdex.a
+vm:生成动态库，链接静态库libdex.a ---->libdvm.so
+dalvik 虚拟机的可执行程序为dalvik，它将链接libdvm.so
+dx：dx工具
+
diff --git "a/Java\345\261\202/java\350\277\220\350\241\214\347\216\257\345\242\203~" "b/Java\345\261\202/java\350\277\220\350\241\214\347\216\257\345\242\203~"
new file mode 100644
index 0000000..c15dd0f
--- /dev/null
+++ "b/Java\345\261\202/java\350\277\220\350\241\214\347\216\257\345\242\203~"
@@ -0,0 +1,16 @@
+Java运行环境被称之为Android Runtime包括虚拟机和核心库，虚拟机是java运行的基础，核心库提供尽量与javase 标准兼容的类库
+Dalvik虚拟机主要完成对象生命周期管理，堆栈管理，安全和异常管理，以及垃圾回收等重要管理，与标准的java虚拟机运行的class字节码不同,Dalvik虚拟机所用的字节码是dex格式，dex格式的文件针对小内存使用做了优化.
+
+Dalvik目录：/dalvik 有实现和工具
+
+其中子目录vm libdex,dx,dalvikvm 几个子目录为虚拟机的核心实现，dexopt,dexdump ,dexlist等子目录为辅助工具的内容，大多数工具和库都有主机和目标机两个版本，在编译过程中将生成目标及和主机的多个目标。
+
+JIT（just-in-time compiler）简称 运行时编译 android2.2系统支持 
+
+传统java虚拟机是基于堆栈的，但是dalvik虚拟机是基于寄存器的，这样的实现方式在通用性和可移植性上差了一些，但是可以获得更好的性能
+Dalvik虚拟机的底层是有C语言和汇编语言实现的，依赖于linux内核的一些功能，比如线程机制和底层内存管理机制
+Dalvik虚拟机核心内容还包括一下几个目录
+libdex ：dex字节码解析处理程序，由纯C写成的工具库生成静态库libdex.a
+vm:生成动态库，链接静态库libdex.a ---->libdvm.so
+dalvik 虚拟机的可执行程序为dalvik，它将链接libdvm.so
+dx：dx工具
diff --git a/Untitled Document b/Untitled Document
new file mode 100644
index 0000000..e69de29
diff --git a/Untitled Document 2~ b/Untitled Document 2~
new file mode 100644
index 0000000..cc25dbb
--- /dev/null
+++ b/Untitled Document 2~	
@@ -0,0 +1,3 @@
+现在才开始
+哈哈
+hello world
diff --git a/Untitled Document~ b/Untitled Document~
new file mode 100644
index 0000000..fff8ddc
--- /dev/null
+++ b/Untitled Document~	
@@ -0,0 +1,23 @@
+ 关于 模拟器运行系统镜像的方式，配置信息在：
+hexstia@unbuntu0:~/adt-bundle-linux-x86_64-20140702/sdk/.android/avd/xzc.avd$ ls
+cache.img  config.ini  emulator-user.ini  hardware-qemu.ini  sdcard.img  userdata.img  userdata-qemu.img
+ init:
+ 路径为 system /core/init 
+首先是内核启动过程加载 函数startkernel（）-》init_post()->run_init_process()内部执行execute ——command 中哦能否的进程文件路径
+执行execve（）调用查找的是系统路径下的脚本文件所 init.rc init.goldfish.rc
+init
+int fd_count = 0;
+    struct pollfd ufds[4];
+    char *tmpdev;
+    char* debuggable;
+    char tmp[32];
+    int property_set_fd_init = 0;
+    int signal_fd_init = 0;
+    int keychord_fd_init = 0;
+    bool is_charger = false;
+
+    if (!strcmp(basename(argv[0]), "ueventd"))
+        return ueventd_main(argc, argv);
+
+    if (!strcmp(basename(argv[0]), "watchdogd"))
+        return watchdogd_main(argc, argv);
diff --git a/compile.sh b/compile.sh
new file mode 100644
index 0000000..bd04e7a
--- /dev/null
+++ b/compile.sh
@@ -0,0 +1,18 @@
+#!/bin/bash
+
+PREFIX=/home/tqj/downloads/android-ndk-r10
+ROOTDIR=/home/hexstia/jni
+LINUX_LIBARYSO=/-I/usr/jdk1.6.0_23/include/ -I/usr/jdk1.6.0_23/include/linux/  -I$ROOTDIR
+######################################################
+CC="$PREFIX/toolchains/arm-linux-androideabi-4.6/prebuilt/linux-x86_64/bin/arm-linux-androideabi-gcc"
+
+NDK="$PREFIX/platforms/android-14/arch-arm"
+
+CFLAGS="-I$NDK/usr/include"
+
+LDFLAGS="-nostdlib -Wl,-rpath-link=$NDK/usr/lib -L$NDK/usr/lib $NDK/usr/lib/crtbegin_dynamic.o -lc"
+###########################################################################################
+
+$CC -o deapk deapk.c $CFLAGS $LDFLAGS
+cp deapk /media/disk/
+
diff --git a/git b/git
new file mode 100644
index 0000000..baac841
--- /dev/null
+++ b/git
@@ -0,0 +1,93 @@
+命令配置
+	  用户名配置
+	git config --global user.name "Neil Hexstia"
+	git config --global user.email "wangyz@farsight.cn"
+	git config --global color.ui always
+	git config --global core.editor vim
+	git init
+	以上命令必须在同一个终端上来敲击 
+	// 以上为配置工作 
+	 代码的提交（保证代码运行无误才能提交）
+
+/************************************************************/
+	//跟踪git需要关注的代码文件
+
+		git add
+
+
+	//查看git代码仓库的文件状态
+	：：：绿色代表被跟踪的文件
+	：：：红色代表未被跟踪的文件
+
+		git commit   提交文件的备注事件信息 书写代码信息:
+
+	//bug  ID关于提交的代码的方式（关于前版本的作用以及修改的工作）
+	例如：
+	    Initial commit
+	o Create a new file that hello.c file
+	
+
+	显示：
+			     （ID标示）
+	[master (root-commit) fbe4ab3] Initial commit  分支
+	 2 files changed, 11 insertions(+)
+ 	create mode 100755 a.out
+ 	create mode 100644 hello.c
+/************************************************************/		
+	//git log关于提交的信息
+	commit fbe4ab3d6d8549c0942b19586bb02a933d05072a(ID标示为MD5码)
+	Author: Neil Hexstia <wangyz@farsight>
+	Date:   Thu Jan 28 14:11:50 2016 +0800
+
+   	 Initial commit
+    
+    	o create a new file that hello.c file(问什么用 o 标志位)
+
+/////////////////////////
+情况1  文件被删除时
+git status
+git checkout xxx.c
+
+情况2  
+git diff  查看文件的添加和删除
+	
+	比较时 有一个的时间点修改 ‘-’号为上次时间点状态 (上一次提交版本)
+				 ‘+’号为当前时间点状态 （当前版本或者是当前提交版本 ）
+取上下文前后三行的标示
+例如：index c7dd56e..bf0023f 100644
+@@ -3,9 +3,6 @@ int main(int argc, const char *argv[])
+ {
+ 	printf("hello World!\n");
+ 	printf("hello 15101\n");
+-	printf("hello wangyz\n");
+-	printf("hello you \n");
+-	printf("hello china\n");
+ 	printf("beijing\n");
+ 	return 0;
+ }
+
+情况三 对于提交之间的比较的版本控制
+	git diff ac3443a577c4e58e41193f408ff71cffadf1f58f fbe4ab3d6d8549c0942b19586bb02a933d05072a
+
+
+情况四  关于pach 的git diff 的修改工作
+	diff的工作是对于不同的版本的diff的修改（分支开发）
+       （将整体的一个项目分拆成多个git来进行控制，每一个单独的git在单独看成一个模块来处理）
+
+
+情况五  分支控制的git（库），
+
+
+
+情况六  git format-patch -p2   ::(2代表的生成的数量)
+	解析：根节点的方式 ，提交 字符类之间关系
+情况七  git init 
+	git am ~/gittmp/0001.....path （不明白怎么用）
+	//用来返回树型结构的某一个值
+关于地基的方式
+A--->B----->C(如果是以前的状态，是无法还原的)
+	 这里想跳回某个版本，可以使用git reset  <MD5>
+	
+	
+
+
diff --git a/git~ b/git~
new file mode 100644
index 0000000..7425c4c
--- /dev/null
+++ b/git~
@@ -0,0 +1,92 @@
+命令配置
+	  用户名配置
+	git config --global user.name "Neil Hexstia"
+	git config --global user.email "wangyz@farsight.cn"
+	git config --global color.ui always
+	git config --global core.editor vim
+	git init
+	以上命令必须在同一个终端上来敲击 
+	// 以上为配置工作 
+	 代码的提交（保证代码运行无误才能提交）
+
+/************************************************************/
+	//跟踪git需要关注的代码文件
+
+		git add
+
+
+	//查看git代码仓库的文件状态
+	：：：绿色代表被跟踪的文件
+	：：：红色代表未被跟踪的文件
+
+		git commit   提交文件的备注事件信息 书写代码信息:
+
+	//bug  ID关于提交的代码的方式（关于前版本的作用以及修改的工作）
+	例如：
+	    Initial commit
+	o Create a new file that hello.c file
+	
+
+	显示：
+			     （ID标示）
+	[master (root-commit) fbe4ab3] Initial commit  分支
+	 2 files changed, 11 insertions(+)
+ 	create mode 100755 a.out
+ 	create mode 100644 hello.c
+/************************************************************/		
+	//git log关于提交的信息
+	commit fbe4ab3d6d8549c0942b19586bb02a933d05072a(ID标示为MD5码)
+	Author: Neil Hexstia <wangyz@farsight>
+	Date:   Thu Jan 28 14:11:50 2016 +0800
+
+   	 Initial commit
+    
+    	o create a new file that hello.c file(问什么用 o 标志位)
+
+/////////////////////////
+情况1  文件被删除时
+git status
+git checkout xxx.c
+
+情况2  
+git diff  查看文件的添加和删除
+	
+	比较时 有一个的时间点修改 ‘-’号为上次时间点状态 (上一次提交版本)
+				 ‘+’号为当前时间点状态 （当前版本或者是当前提交版本 ）
+取上下文前后三行的标示
+例如：index c7dd56e..bf0023f 100644
+@@ -3,9 +3,6 @@ int main(int argc, const char *argv[])
+ {
+ 	printf("hello World!\n");
+ 	printf("hello 15101\n");
+-	printf("hello wangyz\n");
+-	printf("hello you \n");
+-	printf("hello china\n");
+ 	printf("beijing\n");
+ 	return 0;
+ }
+
+情况三 对于提交之间的比较的版本控制
+	git diff ac3443a577c4e58e41193f408ff71cffadf1f58f fbe4ab3d6d8549c0942b19586bb02a933d05072a
+
+
+情况四  关于pach 的git diff 的修改工作
+	diff的工作是对于不同的版本的diff的修改（分支开发）
+       （将整体的一个项目分拆成多个git来进行控制，每一个单独的git在单独看成一个模块来处理）
+
+
+情况五  分支控制的git（库），
+
+
+
+情况六  git format-patch -p2   ::(2代表的生成的数量)
+	解析：根节点的方式 ，提交 字符类之间关系
+情况七  git init 
+	git am ~/gittmp/0001.....path （不明白怎么用）
+	//用来返回树型结构的某一个值
+关于地基的方式
+A--->B----->C(如果是以前的状态，是无法还原的)
+	
+	
+
+
diff --git "a/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/Init\347\232\204\345\210\235\345\247\213\345\214\226\350\277\207\347\250\213" "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/Init\347\232\204\345\210\235\345\247\213\345\214\226\350\277\207\347\250\213"
new file mode 100644
index 0000000..c407d07
--- /dev/null
+++ "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/Init\347\232\204\345\210\235\345\247\213\345\214\226\350\277\207\347\250\213"
@@ -0,0 +1,3 @@
+源码位置/system/core/init下的init.c的文件有一个main函数
+main函数比较长，整个Init进程的启动流程都在这个函数中。下面我们把main（）函数分成小段，一段段地介绍其功能和作用。
+进入main函数后，首先检查启动
diff --git "a/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/Init\347\232\204\345\210\235\345\247\213\345\214\226\350\277\207\347\250\213~" "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/Init\347\232\204\345\210\235\345\247\213\345\214\226\350\277\207\347\250\213~"
new file mode 100644
index 0000000..c407d07
--- /dev/null
+++ "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/Init\347\232\204\345\210\235\345\247\213\345\214\226\350\277\207\347\250\213~"
@@ -0,0 +1,3 @@
+源码位置/system/core/init下的init.c的文件有一个main函数
+main函数比较长，整个Init进程的启动流程都在这个函数中。下面我们把main（）函数分成小段，一段段地介绍其功能和作用。
+进入main函数后，首先检查启动
diff --git "a/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/initrc_Readme.txt" "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/initrc_Readme.txt"
new file mode 100644
index 0000000..26be536
--- /dev/null
+++ "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/initrc_Readme.txt"
@@ -0,0 +1,349 @@
+
+Android Init Language
+---------------------
+
+The Android Init Language consists of four broad classes of statements,
+which are Actions, Commands, Services, and Options.
+
+All of these are line-oriented, consisting of tokens separated by
+whitespace.  The c-style backslash escapes may be used to insert
+whitespace into a token.  Double quotes may also be used to prevent
+whitespace from breaking text into multiple tokens.  The backslash,
+when it is the last character on a line, may be used for line-folding.
+
+Lines which start with a # (leading whitespace allowed) are comments.
+
+Actions and Services implicitly declare a new section.  All commands
+or options belong to the section most recently declared.  Commands
+or options before the first section are ignored.
+
+Actions and Services have unique names.  If a second Action or Service
+is declared with the same name as an existing one, it is ignored as
+an error.  (??? should we override instead)
+
+
+Actions
+-------
+Actions are named sequences of commands.  Actions have a trigger which
+is used to determine when the action should occur.  When an event
+occurs which matches an action's trigger, that action is added to
+the tail of a to-be-executed queue (unless it is already on the
+queue).
+
+Each action in the queue is dequeued in sequence and each command in
+that action is executed in sequence.  Init handles other activities
+(device creation/destruction, property setting, process restarting)
+"between" the execution of the commands in activities.
+
+Actions take the form of:
+
+on <trigger>
+   <command>
+   <command>
+   <command>
+
+
+Services
+--------
+Services are programs which init launches and (optionally) restarts
+when they exit.  Services take the form of:
+
+service <name> <pathname> [ <argument> ]*
+   <option>
+   <option>
+   ...
+
+
+Options
+-------
+Options are modifiers to services.  They affect how and when init
+runs the service.
+
+critical
+   This is a device-critical service. If it exits more than four times in
+   four minutes, the device will reboot into recovery mode.
+
+disabled
+   This service will not automatically start with its class.
+   It must be explicitly started by name.
+
+setenv <name> <value>
+   Set the environment variable <name> to <value> in the launched process.
+
+socket <name> <type> <perm> [ <user> [ <group> [ <context> ] ] ]
+   Create a unix domain socket named /dev/socket/<name> and pass
+   its fd to the launched process.  <type> must be "dgram", "stream" or "seqpacket".
+   User and group default to 0.
+   Context is the SELinux security context for the socket.
+   It defaults to the service security context, as specified by seclabel or
+   computed based on the service executable file security context.
+
+user <username>
+   Change to username before exec'ing this service.
+   Currently defaults to root.  (??? probably should default to nobody)
+   Currently, if your process requires linux capabilities then you cannot use
+   this command. You must instead request the capabilities in-process while
+   still root, and then drop to your desired uid.
+
+group <groupname> [ <groupname> ]*
+   Change to groupname before exec'ing this service.  Additional
+   groupnames beyond the (required) first one are used to set the
+   supplemental groups of the process (via setgroups()).
+   Currently defaults to root.  (??? probably should default to nobody)
+
+seclabel <securitycontext>
+  Change to securitycontext before exec'ing this service.
+  Primarily for use by services run from the rootfs, e.g. ueventd, adbd.
+  Services on the system partition can instead use policy-defined transitions
+  based on their file security context.
+  If not specified and no transition is defined in policy, defaults to the init context.
+
+oneshot
+   Do not restart the service when it exits.
+
+class <name>
+   Specify a class name for the service.  All services in a
+   named class may be started or stopped together.  A service
+   is in the class "default" if one is not specified via the
+   class option.
+
+onrestart
+    Execute a Command (see below) when service restarts.
+
+Triggers
+--------
+   Triggers are strings which can be used to match certain kinds
+   of events and used to cause an action to occur.
+
+boot
+   This is the first trigger that will occur when init starts
+   (after /init.conf is loaded)
+
+<name>=<value>
+   Triggers of this form occur when the property <name> is set
+   to the specific value <value>.
+
+device-added-<path>
+device-removed-<path>
+   Triggers of these forms occur when a device node is added
+   or removed.
+
+service-exited-<name>
+   Triggers of this form occur when the specified service exits.
+
+
+Commands
+--------
+
+exec <path> [ <argument> ]*
+   Fork and execute a program (<path>).  This will block until
+   the program completes execution.  It is best to avoid exec
+   as unlike the builtin commands, it runs the risk of getting
+   init "stuck". (??? maybe there should be a timeout?)
+
+export <name> <value>
+   Set the environment variable <name> equal to <value> in the
+   global environment (which will be inherited by all processes
+   started after this command is executed)
+
+ifup <interface>
+   Bring the network interface <interface> online.
+
+import <filename>
+   Parse an init config file, extending the current configuration.
+
+hostname <name>
+   Set the host name.
+
+chdir <directory>
+   Change working directory.
+
+chmod <octal-mode> <path>
+   Change file access permissions.
+
+chown <owner> <group> <path>
+   Change file owner and group.
+
+chroot <directory>
+  Change process root directory.
+
+class_start <serviceclass>
+   Start all services of the specified class if they are
+   not already running.
+
+class_stop <serviceclass>
+   Stop all services of the specified class if they are
+   currently running.
+
+domainname <name>
+   Set the domain name.
+
+enable <servicename>
+   Turns a disabled service into an enabled one as if the service did not
+   specify disabled.
+   If the service is supposed to be running, it will be started now.
+   Typically used when the bootloader sets a variable that indicates a specific
+   service should be started when needed. E.g.
+     on property:ro.boot.myfancyhardware=1
+        enable my_fancy_service_for_my_fancy_hardware
+
+
+insmod <path>
+   Install the module at <path>
+
+mkdir <path> [mode] [owner] [group]
+   Create a directory at <path>, optionally with the given mode, owner, and
+   group. If not provided, the directory is created with permissions 755 and
+   owned by the root user and root group.
+
+mount <type> <device> <dir> [ <mountoption> ]*
+   Attempt to mount the named device at the directory <dir>
+   <device> may be of the form mtd@name to specify a mtd block
+   device by name.
+   <mountoption>s include "ro", "rw", "remount", "noatime", ...
+
+restorecon <path> [ <path> ]*
+   Restore the file named by <path> to the security context specified
+   in the file_contexts configuration.
+   Not required for directories created by the init.rc as these are
+   automatically labeled correctly by init.
+
+restorecon_recursive <path> [ <path> ]*
+   Recursively restore the directory tree named by <path> to the
+   security contexts specified in the file_contexts configuration.
+   Do NOT use this with paths leading to shell-writable or app-writable
+   directories, e.g. /data/local/tmp, /data/data or any prefix thereof.
+
+setcon <securitycontext>
+   Set the current process security context to the specified string.
+   This is typically only used from early-init to set the init context
+   before any other process is started.
+
+setenforce 0|1
+   Set the SELinux system-wide enforcing status.
+   0 is permissive (i.e. log but do not deny), 1 is enforcing.
+
+setkey
+   TBD
+
+setprop <name> <value>
+   Set system property <name> to <value>.
+
+setrlimit <resource> <cur> <max>
+   Set the rlimit for a resource.
+
+setsebool <name> <value>
+   Set SELinux boolean <name> to <value>.
+   <value> may be 1|true|on or 0|false|off
+
+start <service>
+   Start a service running if it is not already running.
+
+stop <service>
+   Stop a service from running if it is currently running.
+
+symlink <target> <path>
+   Create a symbolic link at <path> with the value <target>
+
+sysclktz <mins_west_of_gmt>
+   Set the system clock base (0 if system clock ticks in GMT)
+
+trigger <event>
+   Trigger an event.  Used to queue an action from another
+   action.
+
+wait <path> [ <timeout> ]
+  Poll for the existence of the given file and return when found,
+  or the timeout has been reached. If timeout is not specified it
+  currently defaults to five seconds.
+
+write <path> <string>
+   Open the file at <path> and write a string to it with write(2)
+   without appending.
+
+
+Properties
+----------
+Init updates some system properties to provide some insight into
+what it's doing:
+
+init.action 
+   Equal to the name of the action currently being executed or "" if none
+
+init.command
+   Equal to the command being executed or "" if none.
+
+init.svc.<name>
+   State of a named service ("stopped", "running", "restarting")
+
+
+Example init.conf
+-----------------
+
+# not complete -- just providing some examples of usage
+#
+on boot
+   export PATH /sbin:/system/sbin:/system/bin
+   export LD_LIBRARY_PATH /system/lib
+
+   mkdir /dev
+   mkdir /proc
+   mkdir /sys
+
+   mount tmpfs tmpfs /dev
+   mkdir /dev/pts
+   mkdir /dev/socket
+   mount devpts devpts /dev/pts
+   mount proc proc /proc
+   mount sysfs sysfs /sys
+
+   write /proc/cpu/alignment 4
+
+   ifup lo
+
+   hostname localhost
+   domainname localhost
+
+   mount yaffs2 mtd@system /system
+   mount yaffs2 mtd@userdata /data
+
+   import /system/etc/init.conf
+
+   class_start default
+
+service adbd /sbin/adbd
+   user adb
+   group adb
+
+service usbd /system/bin/usbd -r
+   user usbd
+   group usbd
+   socket usbd 666
+
+service zygote /system/bin/app_process -Xzygote /system/bin --zygote
+   socket zygote 666
+
+service runtime /system/bin/runtime
+   user system
+   group system
+
+on device-added-/dev/compass
+   start akmd
+
+on device-removed-/dev/compass
+   stop akmd
+
+service akmd /sbin/akmd
+   disabled
+   user akmd
+   group akmd
+
+Debugging notes
+---------------
+By default, programs executed by init will drop stdout and stderr into
+/dev/null. To help with debugging, you can execute your program via the
+Andoird program logwrapper. This will redirect stdout/stderr into the
+Android logging system (accessed via logcat).
+
+For example
+service akmd /system/bin/logwrapper /sbin/akmd
diff --git "a/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/init\350\277\233\347\250\213.xmind" "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/init\350\277\233\347\250\213.xmind"
new file mode 100644
index 0000000000000000000000000000000000000000..09014080efd3c138e0f2ab2b2949444786330a3d
GIT binary patch
literal 109031
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
O*#!^C*K1*EP5uW@@|i~f

literal 0
HcmV?d00001

diff --git "a/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/zhushi.c" "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/zhushi.c"
new file mode 100644
index 0000000..4747028
--- /dev/null
+++ "b/init\345\217\257\346\211\247\350\241\214\347\250\213\345\272\217/zhushi.c"
@@ -0,0 +1,921 @@
+ 关于 模拟器运行系统镜像的方式，配置信息在：
+hexstia@unbuntu0:~/adt-bundle-linux-x86_64-20140702/sdk/.android/avd/xzc.avd$ ls
+cache.img  config.ini  emulator-user.ini  hardware-qemu.ini  sdcard.img  userdata.img  userdata-qemu.img
+ init:
+ 路径为 system /core/init 
+首先是内核启动过程加载 函数startkernel（）-》init_post()->run_init_process()内部执行execute ——command 中哦能否的进程文件路径
+执行execve（）调用查找的是系统路径下的脚本文件所 init.rc init.goldfish.rc
+init
+int fd_count = 0;
+    struct pollfd ufds[4];
+    char *tmpdev;
+    char* debuggable;
+    char tmp[32];
+    int property_set_fd_init = 0;
+    int signal_fd_init = 0;
+    int keychord_fd_init = 0;
+    bool is_charger = false;
+
+    if (!strcmp(basename(argv[0]), "ueventd"))
+        return ueventd_main(argc, argv);
+
+    if (!strcmp(basename(argv[0]), "watchdogd"))
+        return watchdogd_main(argc, argv);
+=============================================================
+ /* clear the umask */
+    umask(0);
+
+        /* Get the basic filesystem setup we need put
+         * together in the initramdisk on / and then we'll
+         * let the rc file figure out the rest.
+         */
+    mkdir("/dev", 0755);//设备驱动程序 文件系统
+    mkdir("/proc", 0755);//虚拟文件系统
+    mkdir("/sys", 0755);
+
+    mount("tmpfs", "/dev", "tmpfs", MS_NOSUID, "mode=0755");
+    mkdir("/dev/pts", 0755);
+    mkdir("/dev/socket", 0755);
+    mount("devpts", "/dev/pts", "devpts", 0, NULL);
+    mount("proc", "/proc", "proc", 0, NULL);
+    mount("sysfs", "/sys", "sysfs", 0, NULL);
+//以上创建基本的文件系统目录以及挂在文件
+  close(open("/dev/.booting", O_WRONLY | O_CREAT, 0000));
+
+        /* 
+	我们必须有一些/创建以外的地方
+	*设备节点kmsg和零,否则我们不会
+	*能够重新安装/只读。
+	*现在tmpfs是安装在/ dev,我们可以
+	*跟外面的世界。
+
+         */
+    open_devnull_stdio();//打开3个文件：输入，输出，错误  将会在 /dev下生成 __null__设备文件节点所有输入输出全部重定向__null__
+	    klog_init();//初始化log
+property_init();//属性初始化 
+init_parse_config_file("/init.rc");//使用函数init_parse_config_file读取并分析init.rc文件
+当前涉及到init .rc文件的脚本 
+文件脚本的路径在 system/core/rootdir/init.rc
+如果想自己挂在文件的话。
+#############
+snprintf(tmp,sizeof(tmp),"/init.%s/rc",hardware);
+init_parse_config_file(tmp);
+#############
+=========================================================
+ action_for_each_trigger("early-init", action_add_queue_tail);
+    /* execute all the boot actions to get us started */
+    action_for_each_trigger("init", action_add_queue_tail);//执行与动作列表的init区块相关的命令
+不要挂载文件系统或启动核心系统服务
+如果在充电模式
+  if (is_charger) {
+        action_for_each_trigger("charger", action_add_queue_tail);
+    } else {
+        action_for_each_trigger("late-init", action_add_queue_tail);
+    }
+/// *运行所有属性触发器基于当前状态属性* /
+  queue_builtin_action(queue_property_triggers_action, "queue_property_triggers");
+=======================================================================================
+========================================================================================
+下面讲解initrc脚本语法
+链接其他的脚本文件
+import /init.environ.rc
+import /init.usb.rc
+import /init.${ro.hardware}.rc
+import /init.${ro.zygote}.rc
+import /init.trace.rc
+
+on early-init
+    # Set init and its forked children's oom_adj.
+    #设置初始化及其派生的子类 oom_adj。
+    write /proc/1/oom_score_adj -1000
+
+    # Apply strict SELinux checking of PROT_EXEC on mmap/mprotect calls.4
+   #应用严格的PROT_EXEC mmap / SELinux检查mprotect调用
+    write /sys/fs/selinux/checkreqprot 0
+
+    # Set the security context for the init process.
+    # This should occur before anything else (e.g. ueventd) is started.这应该发生什么(例如ueventd)之前开始
+    setcon u:r:init:s0
+
+    # Set the security context of /adb_keys if present.设置/ adb_keys如果存在的安全上下文。
+    restorecon /adb_keys
+
+    start ueventd
+
+    # create mountpoints创建挂在点
+    mkdir /mnt 0775 root system
+
+on init
+    sysclktz 0
+
+    loglevel 3
+
+    # Backward compatibility向后兼容性  symlink建立新的链接 路径文件节点 symlink(oldpath,newpath)
+    symlink /system/etc /etc  
+    symlink /sys/kernel/debug /d
+
+    # Right now vendor lives on the same filesystem as system,
+    # but someday that may change.
+    symlink /system/vendor /vendor
+
+    # Create cgroup mount point for cpu accounting
+    mkdir /acct
+    mount cgroup none /acct cpuacct
+    mkdir /acct/uid
+
+    # Create cgroup mount point for memory
+    mount tmpfs none /sys/fs/cgroup mode=0750,uid=0,gid=1000
+    mkdir /sys/fs/cgroup/memory 0750 root system
+    mount cgroup none /sys/fs/cgroup/memory memory
+    write /sys/fs/cgroup/memory/memory.move_charge_at_immigrate 1
+    chown root system /sys/fs/cgroup/memory/tasks
+    chmod 0660 /sys/fs/cgroup/memory/tasks
+    mkdir /sys/fs/cgroup/memory/sw 0750 root system
+    write /sys/fs/cgroup/memory/sw/memory.swappiness 100
+    write /sys/fs/cgroup/memory/sw/memory.move_charge_at_immigrate 1
+    chown root system /sys/fs/cgroup/memory/sw/tasks
+    chmod 0660 /sys/fs/cgroup/memory/sw/tasks
+
+    mkdir /system
+    mkdir /data 0771 system system
+    mkdir /cache 0770 system cache
+    mkdir /config 0500 root root
+
+    # See storage config details at http://source.android.com/tech/storage/ 这里是存储的挂在点 注意这个位置
+    mkdir /mnt/shell 0700 shell shell
+    mkdir /mnt/media_rw 0770 media_rw media_rw
+    mkdir /storage 0751 root sdcard_r
+
+    # Directory for putting things only root should see.目录将只有根应该看到的东西
+    mkdir /mnt/secure 0700 root root
+
+    # Directory for staging bindmounts 目录暂存绑定安装
+    mkdir /mnt/secure/staging 0700 root root
+
+    # Directory-target for where the secure container 安全内容
+    # imagefile directory will be bind-mounted
+    mkdir /mnt/secure/asec  0700 root root
+
+    # Secure container public mount points.安全容器公开挂载点。
+    mkdir /mnt/asec  0700 root system
+    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000
+
+    # Filesystem image public mount points.文件系统映像公共挂载点。
+    mkdir /mnt/obb 0700 root system
+    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000
+
+    # memory control cgroup 内存控制组
+    mkdir /dev/memcg 0700 root system
+    mount cgroup none /dev/memcg memory
+
+    write /proc/sys/kernel/panic_on_oops 1
+    write /proc/sys/kernel/hung_task_timeout_secs 0
+    write /proc/cpu/alignment 4
+    write /proc/sys/kernel/sched_latency_ns 10000000
+    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
+    write /proc/sys/kernel/sched_compat_yield 1
+    write /proc/sys/kernel/sched_child_runs_first 0
+    write /proc/sys/kernel/randomize_va_space 2
+    write /proc/sys/kernel/kptr_restrict 2
+    write /proc/sys/vm/mmap_min_addr 32768
+    write /proc/sys/net/ipv4/ping_group_range "0 2147483647"
+    write /proc/sys/net/unix/max_dgram_qlen 300
+    write /proc/sys/kernel/sched_rt_runtime_us 950000
+    write /proc/sys/kernel/sched_rt_period_us 1000000
+
+    # reflect fwmark from incoming packets onto generated replies反映fwmark从传入的数据包到生成的回复
+    write /proc/sys/net/ipv4/fwmark_reflect 1
+    write /proc/sys/net/ipv6/fwmark_reflect 1
+
+    # set fwmark on accepted sockets 设置fwmark接受套接字
+    write /proc/sys/net/ipv4/tcp_fwmark_accept 1
+
+    # Create cgroup mount points for process groups 为过程组创建cgroup挂载点
+    mkdir /dev/cpuctl
+    mount cgroup none /dev/cpuctl cpu
+    chown system system /dev/cpuctl
+    chown system system /dev/cpuctl/tasks
+    chmod 0660 /dev/cpuctl/tasks
+    write /dev/cpuctl/cpu.shares 1024
+    write /dev/cpuctl/cpu.rt_runtime_us 950000
+    write /dev/cpuctl/cpu.rt_period_us 1000000
+
+    mkdir /dev/cpuctl/apps
+    chown system system /dev/cpuctl/apps/tasks
+    chmod 0666 /dev/cpuctl/apps/tasks
+    write /dev/cpuctl/apps/cpu.shares 1024
+    write /dev/cpuctl/apps/cpu.rt_runtime_us 800000
+    write /dev/cpuctl/apps/cpu.rt_period_us 1000000
+
+    mkdir /dev/cpuctl/apps/bg_non_interactive
+    chown system system /dev/cpuctl/apps/bg_non_interactive/tasks
+    chmod 0666 /dev/cpuctl/apps/bg_non_interactive/tasks
+    # 5.0 %
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.shares 52
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us 700000
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_period_us 1000000
+
+    # qtaguid will limit access to specific data based on group memberships.
+    #   net_bw_acct grants impersonation of socket owners.
+    #   net_bw_stats grants access to other apps' detailed tagged-socket stats.
+    chown root net_bw_acct /proc/net/xt_qtaguid/ctrl
+    chown root net_bw_stats /proc/net/xt_qtaguid/stats
+
+    # Allow everybody to read the xt_qtaguid resource tracking misc dev.
+    # This is needed by any process that uses socket tagging.
+    chmod 0644 /dev/xt_qtaguid
+
+    # Create location for fs_mgr to store abbreviated output from filesystem
+    # checker programs.
+    mkdir /dev/fscklogs 0770 root system
+
+    # pstore/ramoops previous console log
+    mount pstore pstore /sys/fs/pstore
+    chown system log /sys/fs/pstore/console-ramoops
+    chmod 0440 /sys/fs/pstore/console-ramoops
+
+# Healthd can trigger a full boot from charger mode by signaling this
+# property when the power button is held.
+on property:sys.boot_from_charger_mode=1
+    class_stop charger
+    trigger late-init
+
+# Load properties from /system/ + /factory after fs mount.
+on load_all_props_action
+    load_all_props
+
+# Indicate to fw loaders that the relevant mounts are up.
+on firmware_mounts_complete
+    rm /dev/.booting
+
+# Mount filesystems and start core system services.挂载文件系统和启动核心系统服务。
+on late-init
+    trigger early-fs
+    trigger fs
+    trigger post-fs
+    trigger post-fs-data
+
+    # Load properties from /system/ + /factory after fs mount. Place
+    # this in another action so that the load will be scheduled after the prior
+    # issued fs triggers have completed.
+    trigger load_all_props_action
+
+    # Remove a file to wake up anything waiting for firmware.
+    trigger firmware_mounts_complete
+
+    trigger early-boot
+    trigger boot
+
+
+on post-fs
+    # once everything is setup, no need to modify /
+    mount rootfs rootfs / ro remount
+    # mount shared so changes propagate into child namespaces
+    mount rootfs rootfs / shared rec
+
+    # We chown/chmod /cache again so because mount is run as root + defaults
+    chown system cache /cache
+    chmod 0770 /cache
+    # We restorecon /cache in case the cache partition has been reset.
+    restorecon_recursive /cache
+
+    # This may have been created by the recovery system with odd permissions
+    chown system cache /cache/recovery
+    chmod 0770 /cache/recovery
+
+    #change permissions on vmallocinfo so we can grab it from bugreports
+    chown root log /proc/vmallocinfo
+    chmod 0440 /proc/vmallocinfo
+
+    chown root log /proc/slabinfo
+    chmod 0440 /proc/slabinfo
+
+    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
+    chown root system /proc/kmsg
+    chmod 0440 /proc/kmsg
+    chown root system /proc/sysrq-trigger
+    chmod 0220 /proc/sysrq-trigger
+    chown system log /proc/last_kmsg
+    chmod 0440 /proc/last_kmsg
+
+    # make the selinux kernel policy world-readable
+    chmod 0444 /sys/fs/selinux/policy
+
+    # create the lost+found directories, so as to enforce our permissions
+    mkdir /cache/lost+found 0770 root root
+
+on post-fs-data
+    # We chown/chmod /data again so because mount is run as root + defaults
+    chown system system /data
+    chmod 0771 /data
+    # We restorecon /data in case the userdata partition has been reset.
+    restorecon /data
+
+    # Avoid predictable entropy pool. Carry over entropy from previous boot.
+    copy /data/system/entropy.dat /dev/urandom
+
+    # Create dump dir and collect dumps.
+    # Do this before we mount cache so eventually we can use cache for
+    # storing dumps on platforms which do not have a dedicated dump partition.
+    mkdir /data/dontpanic 0750 root log
+
+    # Collect apanic data, free resources and re-arm trigger
+    copy /proc/apanic_console /data/dontpanic/apanic_console
+    chown root log /data/dontpanic/apanic_console
+    chmod 0640 /data/dontpanic/apanic_console
+
+    copy /proc/apanic_threads /data/dontpanic/apanic_threads
+    chown root log /data/dontpanic/apanic_threads
+    chmod 0640 /data/dontpanic/apanic_threads
+
+    write /proc/apanic_console 1
+
+    # create basic filesystem structure
+    mkdir /data/misc 01771 system misc
+    mkdir /data/misc/adb 02750 system shell
+    mkdir /data/misc/bluedroid 0770 bluetooth net_bt_stack
+    mkdir /data/misc/bluetooth 0770 system system
+    mkdir /data/misc/keystore 0700 keystore keystore
+    mkdir /data/misc/keychain 0771 system system
+    mkdir /data/misc/net 0750 root shell
+    mkdir /data/misc/radio 0770 system radio
+    mkdir /data/misc/sms 0770 system radio
+    mkdir /data/misc/zoneinfo 0775 system system
+    mkdir /data/misc/vpn 0770 system vpn
+    mkdir /data/misc/shared_relro 0771 shared_relro shared_relro
+    mkdir /data/misc/systemkeys 0700 system system
+    mkdir /data/misc/wifi 0770 wifi wifi
+    mkdir /data/misc/wifi/sockets 0770 wifi wifi
+    mkdir /data/misc/wifi/wpa_supplicant 0770 wifi wifi
+    mkdir /data/misc/ethernet 0770 system system
+    mkdir /data/misc/dhcp 0770 dhcp dhcp
+    mkdir /data/misc/user 0771 root root
+    # give system access to wpa_supplicant.conf for backup and restore
+    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
+    mkdir /data/local 0751 root root
+    mkdir /data/misc/media 0700 media media
+
+    # For security reasons, /data/local/tmp should always be empty.
+    # Do not place files or directories in /data/local/tmp
+    mkdir /data/local/tmp 0771 shell shell
+    mkdir /data/data 0771 system system
+    mkdir /data/app-private 0771 system system
+    mkdir /data/app-asec 0700 root root
+    mkdir /data/app-lib 0771 system system
+    mkdir /data/app 0771 system system
+    mkdir /data/property 0700 root root
+
+    # create dalvik-cache, so as to enforce our permissions
+    mkdir /data/dalvik-cache 0771 root root
+    mkdir /data/dalvik-cache/profiles 0711 system system
+
+    # create resource-cache and double-check the perms
+    mkdir /data/resource-cache 0771 system system
+    chown system system /data/resource-cache
+    chmod 0771 /data/resource-cache
+
+    # create the lost+found directories, so as to enforce our permissions
+    mkdir /data/lost+found 0770 root root
+
+    # create directory for DRM plug-ins - give drm the read/write access to
+    # the following directory.
+    mkdir /data/drm 0770 drm drm
+
+    # create directory for MediaDrm plug-ins - give drm the read/write access to
+    # the following directory.
+    mkdir /data/mediadrm 0770 mediadrm mediadrm
+
+    # symlink to bugreport storage location
+    symlink /data/data/com.android.shell/files/bugreports /data/bugreports
+
+    # Separate location for storing security policy files on data
+    mkdir /data/security 0711 system system
+
+    # Reload policy from /data/security if present.
+    setprop selinux.reload_policy 1
+
+    # Set SELinux security contexts on upgrade or policy update.
+    restorecon_recursive /data
+
+    # If there is no fs-post-data action in the init.<device>.rc file, you
+    # must uncomment this line, otherwise encrypted filesystems
+    # won't work.
+    # Set indication (checked by vold) that we have finished this action
+    #setprop vold.post_fs_data_done 1
+
+on boot
+    # basic network init
+    ifup lo
+    hostname localhost
+    domainname localdomain
+
+    # set RLIMIT_NICE to allow priorities from 19 to -20
+    setrlimit 13 40 40
+
+    # Memory management.  Basic kernel parameters, and allow the high
+    # level system server to be able to adjust the kernel OOM driver
+    # parameters to match how it is managing things.
+    write /proc/sys/vm/overcommit_memory 1
+    write /proc/sys/vm/min_free_order_shift 4
+    chown root system /sys/module/lowmemorykiller/parameters/adj
+    chmod 0220 /sys/module/lowmemorykiller/parameters/adj
+    chown root system /sys/module/lowmemorykiller/parameters/minfree
+    chmod 0220 /sys/module/lowmemorykiller/parameters/minfree
+
+    # Tweak background writeout
+    write /proc/sys/vm/dirty_expire_centisecs 200
+    write /proc/sys/vm/dirty_background_ratio  5
+
+    # Permissions for System Server and daemons.
+    chown radio system /sys/android_power/state
+    chown radio system /sys/android_power/request_state
+    chown radio system /sys/android_power/acquire_full_wake_lock
+    chown radio system /sys/android_power/acquire_partial_wake_lock
+    chown radio system /sys/android_power/release_wake_lock
+    chown system system /sys/power/autosleep
+    chown system system /sys/power/state
+    chown system system /sys/power/wakeup_count
+    chown radio system /sys/power/wake_lock
+    chown radio system /sys/power/wake_unlock
+    chmod 0660 /sys/power/state
+    chmod 0660 /sys/power/wake_lock
+    chmod 0660 /sys/power/wake_unlock
+
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/timer_rate
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/timer_rate
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/timer_slack
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/timer_slack
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/target_loads
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/target_loads
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boost
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/boost
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boostpulse
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/input_boost
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/input_boost
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/io_is_busy
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/io_is_busy
+
+    # Assume SMP uses shared cpufreq policy for all CPUs
+    chown system system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
+    chmod 0660 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
+
+    chown system system /sys/class/timed_output/vibrator/enable
+    chown system system /sys/class/leds/keyboard-backlight/brightness
+    chown system system /sys/class/leds/lcd-backlight/brightness
+    chown system system /sys/class/leds/button-backlight/brightness
+    chown system system /sys/class/leds/jogball-backlight/brightness
+    chown system system /sys/class/leds/red/brightness
+    chown system system /sys/class/leds/green/brightness
+    chown system system /sys/class/leds/blue/brightness
+    chown system system /sys/class/leds/red/device/grpfreq
+    chown system system /sys/class/leds/red/device/grppwm
+    chown system system /sys/class/leds/red/device/blink
+    chown system system /sys/class/timed_output/vibrator/enable
+    chown system system /sys/module/sco/parameters/disable_esco
+    chown system system /sys/kernel/ipv4/tcp_wmem_min
+    chown system system /sys/kernel/ipv4/tcp_wmem_def
+    chown system system /sys/kernel/ipv4/tcp_wmem_max
+    chown system system /sys/kernel/ipv4/tcp_rmem_min
+    chown system system /sys/kernel/ipv4/tcp_rmem_def
+    chown system system /sys/kernel/ipv4/tcp_rmem_max
+    chown root radio /proc/cmdline
+
+    # Define default initial receive window size in segments.
+    setprop net.tcp.default_init_rwnd 60
+
+    class_start core
+
+on nonencrypted
+    class_start main
+    class_start late_start
+
+on property:vold.decrypt=trigger_default_encryption
+    start defaultcrypto
+
+on property:vold.decrypt=trigger_encryption
+    start surfaceflinger
+    start encrypt
+
+on property:sys.init_log_level=*
+    loglevel ${sys.init_log_level}
+
+on charger
+    class_start charger
+
+on property:vold.decrypt=trigger_reset_main
+    class_reset main
+
+on property:vold.decrypt=trigger_load_persist_props
+    load_persist_props
+
+on property:vold.decrypt=trigger_post_fs_data
+    trigger post-fs-data
+
+on property:vold.decrypt=trigger_restart_min_framework
+    class_start main
+
+on property:vold.decrypt=trigger_restart_framework
+    class_start main
+    class_start late_start
+
+on property:vold.decrypt=trigger_shutdown_framework
+    class_reset late_start
+    class_reset main
+
+on property:sys.powerctl=*
+    powerctl ${sys.powerctl}
+
+# system server cannot write to /proc/sys files,
+# and chown/chmod does not work for /proc/sys/ entries.
+# So proxy writes through init.
+on property:sys.sysctl.extra_free_kbytes=*
+    write /proc/sys/vm/extra_free_kbytes ${sys.sysctl.extra_free_kbytes}
+
+# "tcp_default_init_rwnd" Is too long!
+on property:sys.sysctl.tcp_def_init_rwnd=*
+    write /proc/sys/net/ipv4/tcp_default_init_rwnd ${sys.sysctl.tcp_def_init_rwnd}
+
+
+## Daemon processes to be run by init.
+##
+service ueventd /sbin/ueventd
+    class core
+    critical
+    seclabel u:r:ueventd:s0
+
+service logd /system/bin/logd
+    class core
+    socket logd stream 0666 logd logd
+    socket logdr seqpacket 0666 logd logd
+    socket logdw dgram 0222 logd logd
+    seclabel u:r:logd:s0
+
+service healthd /sbin/healthd
+    class core
+    critical
+    seclabel u:r:healthd:s0
+
+service console /system/bin/sh
+    class core
+    console
+    disabled
+    user shell
+    group shell log
+    seclabel u:r:shell:s0
+
+on property:ro.debuggable=1
+    start console
+
+# adbd is controlled via property triggers in init.<platform>.usb.rc
+service adbd /sbin/adbd --root_seclabel=u:r:su:s0
+    class core
+    socket adbd stream 660 system system
+    disabled
+    seclabel u:r:adbd:s0
+
+# adbd on at boot in emulator
+on property:ro.kernel.qemu=1
+    start adbd
+
+service lmkd /system/bin/lmkd
+    class core
+    critical
+    socket lmkd seqpacket 0660 system system
+
+service servicemanager /system/bin/servicemanager
+    class core
+    user system
+    group system
+    critical
+    onrestart restart healthd
+    onrestart restart zygote
+    onrestart restart media
+    onrestart restart surfaceflinger
+    onrestart restart drm
+
+service vold /system/bin/vold
+    class core
+    socket vold stream 0660 root mount
+    ioprio be 2
+
+service netd /system/bin/netd
+    class main
+    socket netd stream 0660 root system
+    socket dnsproxyd stream 0660 root inet
+    socket mdns stream 0660 root system
+    socket fwmarkd stream 0660 root inet
+
+service debuggerd /system/bin/debuggerd
+    class main
+
+service debuggerd64 /system/bin/debuggerd64
+    class main
+
+service ril-daemon /system/bin/rild
+    class main
+    socket rild stream 660 root radio
+    socket rild-debug stream 660 radio system
+    user root
+    group radio cache inet misc audio log
+
+service surfaceflinger /system/bin/surfaceflinger
+    class core
+    user system
+    group graphics drmrpc
+    onrestart restart zygote
+
+service drm /system/bin/drmserver
+    class main
+    user drm
+    group drm system inet drmrpc
+
+service media /system/bin/mediaserver
+    class main
+    user media
+    group audio camera inet net_bt net_bt_admin net_bw_acct drmrpc mediadrm
+    ioprio rt 4
+
+# One shot invocation to deal with encrypted volume.
+service defaultcrypto /system/bin/vdc --wait cryptfs mountdefaultencrypted
+    disabled
+    oneshot
+    # vold will set vold.decrypt to trigger_restart_framework (default
+    # encryption) or trigger_restart_min_framework (other encryption)
+
+# One shot invocation to encrypt unencrypted volumes
+service encrypt /system/bin/vdc --wait cryptfs enablecrypto inplace default
+    disabled
+    oneshot
+    # vold will set vold.decrypt to trigger_restart_framework (default
+    # encryption)
+
+# 动画安装的服务
+service bootanim /system/bin/bootanimation
+    class core
+    user graphics
+    group graphics audio media
+    disabled
+    oneshot
+
+service installd /system/bin/installd
+    class main
+    socket installd stream 600 system system
+
+service flash_recovery /system/bin/install-recovery.sh
+    class main
+    seclabel u:r:install_recovery:s0
+    oneshot
+
+service racoon /system/bin/racoon
+    class main
+    socket racoon stream 600 system system
+    # IKE uses UDP port 500. Racoon will setuid to vpn after binding the port.
+    group vpn net_admin inet
+    disabled
+    oneshot
+
+service mtpd /system/bin/mtpd
+    class main
+    socket mtpd stream 600 system system
+    user vpn
+    group vpn net_admin inet net_raw
+    disabled
+    oneshot
+
+service keystore /system/bin/keystore /data/misc/keystore
+    class main
+    user keystore
+    group keystore drmrpc
+
+service dumpstate /system/bin/dumpstate -s
+    class main
+    socket dumpstate stream 0660 shell log
+    disabled
+    oneshot
+
+service mdnsd /system/bin/mdnsd
+    class main
+    user mdnsr
+    group inet net_raw
+    socket mdnsd stream 0660 mdnsr inet
+    disabled
+    oneshot
+
+service pre-recovery /system/bin/uncrypt
+    class main
+    disabled
+    oneshot
+========================================================
+对于关键字的定义在sysytem/core/keywordc文件中
+KEYWORD(mkdir,       COMMAND, 1, do_mkdir)
+第一个参数 脚本中使用的名字
+第二个参数 flags 为关键字的类型
+第三个参数 关键字参数的个数
+第三个参数 关键字所对应的函数  （函数的实现在builtins.c文件中实现的）
+关于init的内建动作和初始化
+=======================================================
+我们在返回init.c文件
+queue_builtin_action(wait_for_coldboot_done_action, "wait_for_coldboot_done");等待启动结束
+属于内建动作
+内建动作和init脚本一样，形成命令的序列，在init可执行程序的for循环中真正的执行
+终端初始化
+static int console_init_action(int nargs, char **args)
+{
+    int fd;
+
+    if (console[0]) {
+        snprintf(console_name, sizeof(console_name), "/dev/%s", console);
+    }
+
+    fd = open(console_name, O_RDWR);
+    if (fd >= 0)
+        have_console = 1;
+    close(fd);
+
+    fd = open("/dev/tty0", O_WRONLY);//获取系统的默认的首个终端
+    if (fd >= 0) {
+        const char *msg;
+            msg = "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"  // console is 40 cols x 30 lines
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "             A N D R O I D ";//显示在终端的字符串上
+        write(fd, msg, strlen(msg));//写设备以显示字符串
+        close(fd);
+    }
+
+    return 0;
+}
+===========================================keychord初始化（keychords.c）=========================
+keychord组合键的一种 由/dev/keychord设备用于一些调试类的功能 
+void keychord_init()
+{
+    int fd, ret;
+
+    service_for_each(add_service_keycodes);//对每个服务增加keycode
+
+    /* nothing to do if no services require keychords */
+    if (!keychords)
+        return;
+
+    fd = open("/dev/keychord", O_RDWR);//打开
+    if (fd < 0) {
+        ERROR("could not open /dev/keychord\n");
+        return;
+    }
+    fcntl(fd, F_SETFD, FD_CLOEXEC);
+
+    ret = write(fd, keychords, keychords_length);//写
+    if (ret != keychords_length) {
+        ERROR("could not configure /dev/keychord %d (%d)\n", ret, errno);
+        close(fd);
+        fd = -1;
+    }
+
+    free(keychords);
+    keychords = 0;//保存标志和文件描述符
+
+    keychord_fd = fd;
+}
+==========================property_service.c===========================
+void property_init(void)
+{
+    init_property_area();
+}
+实际上包括属性存储区域，初始化和默认属性文件的处理
+void property_load_boot_defaults(void)
+{
+    load_properties_from_file(PROP_PATH_RAMDISK_DEFAULT, NULL);
+}
+
+int properties_inited(void)
+{
+    return property_area_inited;
+}
+=========================bootchart.c=================
+
+
+
+
+===================for(;;)===========================
+
+  for(;;) {
+        int nr, i, timeout = -1;
+
+        execute_one_command();//执行一个单行的命令
+        restart_processes();// 重新启动进程 
+
+        if (!property_set_fd_init && get_property_set_fd() > 0) {
+            ufds[fd_count].fd = get_property_set_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count++;
+            property_set_fd_init = 1;//设置属性的初始化标志
+        }
+        if (!signal_fd_init && get_signal_fd() > 0) {
+            ufds[fd_count].fd = get_signal_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count+ +;
+            signal_fd_init = 1;//设置signal的初始化标志
+        }
+        if (!keychord_fd_init && get_keychord_fd() > 0) {
+            ufds[fd_count].fd = get_keychord_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count++;
+            keychord_fd_init = 1;//设置keychord的初始化标志
+        }
+
+        if (process_needs_restart) {
+            timeout = (process_needs_restart - gettime()) * 1000;
+            if (timeout < 0)
+                timeout = 0;
+        }
+
+        if (!action_queue_empty() || cur_action)
+            timeout = 0;
+
+#if BOOTCHART
+        if (bootchart_count > 0) {
+            if (timeout < 0 || timeout > BOOTCHART_POLLING_MS)
+                timeout = BOOTCHART_POLLING_MS;
+            if (bootchart_step() < 0 || --bootchart_count == 0) {
+                bootchart_finish();
+                bootchart_count = 0;
+            }
+        }
+#endif
+
+        nr = poll(ufds, fd_count, timeout);//获取用于时间的文件描述符
+        if (nr <= 0)
+            continue;
+
+        for (i = 0; i < fd_count; i++) {
+            if (ufds[i].revents & POLLIN) {
+                if (ufds[i].fd == get_property_set_fd())//
+                    handle_property_set_fd();//设置属性方面的处理
+                else if (ufds[i].fd == get_keychord_fd())
+                    handle_keychord();//keychord方面的处理
+                else if (ufds[i].fd == get_signal_fd())
+                    handle_signal();//signal方面的处理
+            }
+        }
+    }
+
+    return 0;
+}
+======================================execute_one_command()====================
+void execute_one_command(void)
+{
+    int ret, i;
+    char cmd_str[256] = "";
+
+    if (!cur_action || !cur_command || is_last_command(cur_action, cur_command)) {
+        cur_action = action_remove_queue_head();
+        cur_command = NULL;
+        if (!cur_action)//无动作将退出
+            return;
+        INFO("processing action %p (%s)\n", cur_action, cur_action->name);
+        cur_command = get_first_command(cur_action);//获取第一个命令
+    } else {
+        cur_command = get_next_command(cur_action, cur_command);//获取下一个命令
+    }
+
+    if (!cur_command)
+        return;
+	//执行命令
+    ret = cur_command->func(cur_command->nargs, cur_command->args);
+    if (klog_get_level() >= KLOG_INFO_LEVEL) {
+        for (i = 0; i < cur_command->nargs; i++) {
+            strlcat(cmd_str, cur_command->args[i], sizeof(cmd_str));
+            if (i < cur_command->nargs - 1) {
+                strlcat(cmd_str, " ", sizeof(cmd_str));
+            }
+        }
+        INFO("command '%s' action=%s status=%d (%s:%d)\n",
+             cmd_str, cur_action ? cur_action->name : "", ret, cur_command->filename,
+             cur_command->line);
+    }
+}
+====================================
diff --git "a/javah_ecplise\351\205\215\347\275\256" "b/javah_ecplise\351\205\215\347\275\256"
new file mode 100644
index 0000000..3dbb3d9
--- /dev/null
+++ "b/javah_ecplise\351\205\215\347\275\256"
@@ -0,0 +1,4 @@
+/usr/bin/javah
+${project_loc}/jni
+-d ${project_loc:}/jni -classpath "${project_classpath};${env_var:ANDROID_SDK_HOME}/platforms/android-20/android.jar" 
+ ${java_type_name}
diff --git "a/javah_ecplise\351\205\215\347\275\256~" "b/javah_ecplise\351\205\215\347\275\256~"
new file mode 100644
index 0000000..3dbb3d9
--- /dev/null
+++ "b/javah_ecplise\351\205\215\347\275\256~"
@@ -0,0 +1,4 @@
+/usr/bin/javah
+${project_loc}/jni
+-d ${project_loc:}/jni -classpath "${project_classpath};${env_var:ANDROID_SDK_HOME}/platforms/android-20/android.jar" 
+ ${java_type_name}
diff --git "a/vim\344\275\277\347\224\250~" "b/vim\344\275\277\347\224\250~"
new file mode 100644
index 0000000..25ffccb
--- /dev/null
+++ "b/vim\344\275\277\347\224\250~"
@@ -0,0 +1,5 @@
+关于 F2 查看函数列表
+     F3 查看文件列表
+  
+ctrl+H退出函数列表
+上下左右 和回车来移动
diff --git a/zhushi.c b/zhushi.c
new file mode 100644
index 0000000..4747028
--- /dev/null
+++ b/zhushi.c
@@ -0,0 +1,921 @@
+ 关于 模拟器运行系统镜像的方式，配置信息在：
+hexstia@unbuntu0:~/adt-bundle-linux-x86_64-20140702/sdk/.android/avd/xzc.avd$ ls
+cache.img  config.ini  emulator-user.ini  hardware-qemu.ini  sdcard.img  userdata.img  userdata-qemu.img
+ init:
+ 路径为 system /core/init 
+首先是内核启动过程加载 函数startkernel（）-》init_post()->run_init_process()内部执行execute ——command 中哦能否的进程文件路径
+执行execve（）调用查找的是系统路径下的脚本文件所 init.rc init.goldfish.rc
+init
+int fd_count = 0;
+    struct pollfd ufds[4];
+    char *tmpdev;
+    char* debuggable;
+    char tmp[32];
+    int property_set_fd_init = 0;
+    int signal_fd_init = 0;
+    int keychord_fd_init = 0;
+    bool is_charger = false;
+
+    if (!strcmp(basename(argv[0]), "ueventd"))
+        return ueventd_main(argc, argv);
+
+    if (!strcmp(basename(argv[0]), "watchdogd"))
+        return watchdogd_main(argc, argv);
+=============================================================
+ /* clear the umask */
+    umask(0);
+
+        /* Get the basic filesystem setup we need put
+         * together in the initramdisk on / and then we'll
+         * let the rc file figure out the rest.
+         */
+    mkdir("/dev", 0755);//设备驱动程序 文件系统
+    mkdir("/proc", 0755);//虚拟文件系统
+    mkdir("/sys", 0755);
+
+    mount("tmpfs", "/dev", "tmpfs", MS_NOSUID, "mode=0755");
+    mkdir("/dev/pts", 0755);
+    mkdir("/dev/socket", 0755);
+    mount("devpts", "/dev/pts", "devpts", 0, NULL);
+    mount("proc", "/proc", "proc", 0, NULL);
+    mount("sysfs", "/sys", "sysfs", 0, NULL);
+//以上创建基本的文件系统目录以及挂在文件
+  close(open("/dev/.booting", O_WRONLY | O_CREAT, 0000));
+
+        /* 
+	我们必须有一些/创建以外的地方
+	*设备节点kmsg和零,否则我们不会
+	*能够重新安装/只读。
+	*现在tmpfs是安装在/ dev,我们可以
+	*跟外面的世界。
+
+         */
+    open_devnull_stdio();//打开3个文件：输入，输出，错误  将会在 /dev下生成 __null__设备文件节点所有输入输出全部重定向__null__
+	    klog_init();//初始化log
+property_init();//属性初始化 
+init_parse_config_file("/init.rc");//使用函数init_parse_config_file读取并分析init.rc文件
+当前涉及到init .rc文件的脚本 
+文件脚本的路径在 system/core/rootdir/init.rc
+如果想自己挂在文件的话。
+#############
+snprintf(tmp,sizeof(tmp),"/init.%s/rc",hardware);
+init_parse_config_file(tmp);
+#############
+=========================================================
+ action_for_each_trigger("early-init", action_add_queue_tail);
+    /* execute all the boot actions to get us started */
+    action_for_each_trigger("init", action_add_queue_tail);//执行与动作列表的init区块相关的命令
+不要挂载文件系统或启动核心系统服务
+如果在充电模式
+  if (is_charger) {
+        action_for_each_trigger("charger", action_add_queue_tail);
+    } else {
+        action_for_each_trigger("late-init", action_add_queue_tail);
+    }
+/// *运行所有属性触发器基于当前状态属性* /
+  queue_builtin_action(queue_property_triggers_action, "queue_property_triggers");
+=======================================================================================
+========================================================================================
+下面讲解initrc脚本语法
+链接其他的脚本文件
+import /init.environ.rc
+import /init.usb.rc
+import /init.${ro.hardware}.rc
+import /init.${ro.zygote}.rc
+import /init.trace.rc
+
+on early-init
+    # Set init and its forked children's oom_adj.
+    #设置初始化及其派生的子类 oom_adj。
+    write /proc/1/oom_score_adj -1000
+
+    # Apply strict SELinux checking of PROT_EXEC on mmap/mprotect calls.4
+   #应用严格的PROT_EXEC mmap / SELinux检查mprotect调用
+    write /sys/fs/selinux/checkreqprot 0
+
+    # Set the security context for the init process.
+    # This should occur before anything else (e.g. ueventd) is started.这应该发生什么(例如ueventd)之前开始
+    setcon u:r:init:s0
+
+    # Set the security context of /adb_keys if present.设置/ adb_keys如果存在的安全上下文。
+    restorecon /adb_keys
+
+    start ueventd
+
+    # create mountpoints创建挂在点
+    mkdir /mnt 0775 root system
+
+on init
+    sysclktz 0
+
+    loglevel 3
+
+    # Backward compatibility向后兼容性  symlink建立新的链接 路径文件节点 symlink(oldpath,newpath)
+    symlink /system/etc /etc  
+    symlink /sys/kernel/debug /d
+
+    # Right now vendor lives on the same filesystem as system,
+    # but someday that may change.
+    symlink /system/vendor /vendor
+
+    # Create cgroup mount point for cpu accounting
+    mkdir /acct
+    mount cgroup none /acct cpuacct
+    mkdir /acct/uid
+
+    # Create cgroup mount point for memory
+    mount tmpfs none /sys/fs/cgroup mode=0750,uid=0,gid=1000
+    mkdir /sys/fs/cgroup/memory 0750 root system
+    mount cgroup none /sys/fs/cgroup/memory memory
+    write /sys/fs/cgroup/memory/memory.move_charge_at_immigrate 1
+    chown root system /sys/fs/cgroup/memory/tasks
+    chmod 0660 /sys/fs/cgroup/memory/tasks
+    mkdir /sys/fs/cgroup/memory/sw 0750 root system
+    write /sys/fs/cgroup/memory/sw/memory.swappiness 100
+    write /sys/fs/cgroup/memory/sw/memory.move_charge_at_immigrate 1
+    chown root system /sys/fs/cgroup/memory/sw/tasks
+    chmod 0660 /sys/fs/cgroup/memory/sw/tasks
+
+    mkdir /system
+    mkdir /data 0771 system system
+    mkdir /cache 0770 system cache
+    mkdir /config 0500 root root
+
+    # See storage config details at http://source.android.com/tech/storage/ 这里是存储的挂在点 注意这个位置
+    mkdir /mnt/shell 0700 shell shell
+    mkdir /mnt/media_rw 0770 media_rw media_rw
+    mkdir /storage 0751 root sdcard_r
+
+    # Directory for putting things only root should see.目录将只有根应该看到的东西
+    mkdir /mnt/secure 0700 root root
+
+    # Directory for staging bindmounts 目录暂存绑定安装
+    mkdir /mnt/secure/staging 0700 root root
+
+    # Directory-target for where the secure container 安全内容
+    # imagefile directory will be bind-mounted
+    mkdir /mnt/secure/asec  0700 root root
+
+    # Secure container public mount points.安全容器公开挂载点。
+    mkdir /mnt/asec  0700 root system
+    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000
+
+    # Filesystem image public mount points.文件系统映像公共挂载点。
+    mkdir /mnt/obb 0700 root system
+    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000
+
+    # memory control cgroup 内存控制组
+    mkdir /dev/memcg 0700 root system
+    mount cgroup none /dev/memcg memory
+
+    write /proc/sys/kernel/panic_on_oops 1
+    write /proc/sys/kernel/hung_task_timeout_secs 0
+    write /proc/cpu/alignment 4
+    write /proc/sys/kernel/sched_latency_ns 10000000
+    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
+    write /proc/sys/kernel/sched_compat_yield 1
+    write /proc/sys/kernel/sched_child_runs_first 0
+    write /proc/sys/kernel/randomize_va_space 2
+    write /proc/sys/kernel/kptr_restrict 2
+    write /proc/sys/vm/mmap_min_addr 32768
+    write /proc/sys/net/ipv4/ping_group_range "0 2147483647"
+    write /proc/sys/net/unix/max_dgram_qlen 300
+    write /proc/sys/kernel/sched_rt_runtime_us 950000
+    write /proc/sys/kernel/sched_rt_period_us 1000000
+
+    # reflect fwmark from incoming packets onto generated replies反映fwmark从传入的数据包到生成的回复
+    write /proc/sys/net/ipv4/fwmark_reflect 1
+    write /proc/sys/net/ipv6/fwmark_reflect 1
+
+    # set fwmark on accepted sockets 设置fwmark接受套接字
+    write /proc/sys/net/ipv4/tcp_fwmark_accept 1
+
+    # Create cgroup mount points for process groups 为过程组创建cgroup挂载点
+    mkdir /dev/cpuctl
+    mount cgroup none /dev/cpuctl cpu
+    chown system system /dev/cpuctl
+    chown system system /dev/cpuctl/tasks
+    chmod 0660 /dev/cpuctl/tasks
+    write /dev/cpuctl/cpu.shares 1024
+    write /dev/cpuctl/cpu.rt_runtime_us 950000
+    write /dev/cpuctl/cpu.rt_period_us 1000000
+
+    mkdir /dev/cpuctl/apps
+    chown system system /dev/cpuctl/apps/tasks
+    chmod 0666 /dev/cpuctl/apps/tasks
+    write /dev/cpuctl/apps/cpu.shares 1024
+    write /dev/cpuctl/apps/cpu.rt_runtime_us 800000
+    write /dev/cpuctl/apps/cpu.rt_period_us 1000000
+
+    mkdir /dev/cpuctl/apps/bg_non_interactive
+    chown system system /dev/cpuctl/apps/bg_non_interactive/tasks
+    chmod 0666 /dev/cpuctl/apps/bg_non_interactive/tasks
+    # 5.0 %
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.shares 52
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us 700000
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_period_us 1000000
+
+    # qtaguid will limit access to specific data based on group memberships.
+    #   net_bw_acct grants impersonation of socket owners.
+    #   net_bw_stats grants access to other apps' detailed tagged-socket stats.
+    chown root net_bw_acct /proc/net/xt_qtaguid/ctrl
+    chown root net_bw_stats /proc/net/xt_qtaguid/stats
+
+    # Allow everybody to read the xt_qtaguid resource tracking misc dev.
+    # This is needed by any process that uses socket tagging.
+    chmod 0644 /dev/xt_qtaguid
+
+    # Create location for fs_mgr to store abbreviated output from filesystem
+    # checker programs.
+    mkdir /dev/fscklogs 0770 root system
+
+    # pstore/ramoops previous console log
+    mount pstore pstore /sys/fs/pstore
+    chown system log /sys/fs/pstore/console-ramoops
+    chmod 0440 /sys/fs/pstore/console-ramoops
+
+# Healthd can trigger a full boot from charger mode by signaling this
+# property when the power button is held.
+on property:sys.boot_from_charger_mode=1
+    class_stop charger
+    trigger late-init
+
+# Load properties from /system/ + /factory after fs mount.
+on load_all_props_action
+    load_all_props
+
+# Indicate to fw loaders that the relevant mounts are up.
+on firmware_mounts_complete
+    rm /dev/.booting
+
+# Mount filesystems and start core system services.挂载文件系统和启动核心系统服务。
+on late-init
+    trigger early-fs
+    trigger fs
+    trigger post-fs
+    trigger post-fs-data
+
+    # Load properties from /system/ + /factory after fs mount. Place
+    # this in another action so that the load will be scheduled after the prior
+    # issued fs triggers have completed.
+    trigger load_all_props_action
+
+    # Remove a file to wake up anything waiting for firmware.
+    trigger firmware_mounts_complete
+
+    trigger early-boot
+    trigger boot
+
+
+on post-fs
+    # once everything is setup, no need to modify /
+    mount rootfs rootfs / ro remount
+    # mount shared so changes propagate into child namespaces
+    mount rootfs rootfs / shared rec
+
+    # We chown/chmod /cache again so because mount is run as root + defaults
+    chown system cache /cache
+    chmod 0770 /cache
+    # We restorecon /cache in case the cache partition has been reset.
+    restorecon_recursive /cache
+
+    # This may have been created by the recovery system with odd permissions
+    chown system cache /cache/recovery
+    chmod 0770 /cache/recovery
+
+    #change permissions on vmallocinfo so we can grab it from bugreports
+    chown root log /proc/vmallocinfo
+    chmod 0440 /proc/vmallocinfo
+
+    chown root log /proc/slabinfo
+    chmod 0440 /proc/slabinfo
+
+    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
+    chown root system /proc/kmsg
+    chmod 0440 /proc/kmsg
+    chown root system /proc/sysrq-trigger
+    chmod 0220 /proc/sysrq-trigger
+    chown system log /proc/last_kmsg
+    chmod 0440 /proc/last_kmsg
+
+    # make the selinux kernel policy world-readable
+    chmod 0444 /sys/fs/selinux/policy
+
+    # create the lost+found directories, so as to enforce our permissions
+    mkdir /cache/lost+found 0770 root root
+
+on post-fs-data
+    # We chown/chmod /data again so because mount is run as root + defaults
+    chown system system /data
+    chmod 0771 /data
+    # We restorecon /data in case the userdata partition has been reset.
+    restorecon /data
+
+    # Avoid predictable entropy pool. Carry over entropy from previous boot.
+    copy /data/system/entropy.dat /dev/urandom
+
+    # Create dump dir and collect dumps.
+    # Do this before we mount cache so eventually we can use cache for
+    # storing dumps on platforms which do not have a dedicated dump partition.
+    mkdir /data/dontpanic 0750 root log
+
+    # Collect apanic data, free resources and re-arm trigger
+    copy /proc/apanic_console /data/dontpanic/apanic_console
+    chown root log /data/dontpanic/apanic_console
+    chmod 0640 /data/dontpanic/apanic_console
+
+    copy /proc/apanic_threads /data/dontpanic/apanic_threads
+    chown root log /data/dontpanic/apanic_threads
+    chmod 0640 /data/dontpanic/apanic_threads
+
+    write /proc/apanic_console 1
+
+    # create basic filesystem structure
+    mkdir /data/misc 01771 system misc
+    mkdir /data/misc/adb 02750 system shell
+    mkdir /data/misc/bluedroid 0770 bluetooth net_bt_stack
+    mkdir /data/misc/bluetooth 0770 system system
+    mkdir /data/misc/keystore 0700 keystore keystore
+    mkdir /data/misc/keychain 0771 system system
+    mkdir /data/misc/net 0750 root shell
+    mkdir /data/misc/radio 0770 system radio
+    mkdir /data/misc/sms 0770 system radio
+    mkdir /data/misc/zoneinfo 0775 system system
+    mkdir /data/misc/vpn 0770 system vpn
+    mkdir /data/misc/shared_relro 0771 shared_relro shared_relro
+    mkdir /data/misc/systemkeys 0700 system system
+    mkdir /data/misc/wifi 0770 wifi wifi
+    mkdir /data/misc/wifi/sockets 0770 wifi wifi
+    mkdir /data/misc/wifi/wpa_supplicant 0770 wifi wifi
+    mkdir /data/misc/ethernet 0770 system system
+    mkdir /data/misc/dhcp 0770 dhcp dhcp
+    mkdir /data/misc/user 0771 root root
+    # give system access to wpa_supplicant.conf for backup and restore
+    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
+    mkdir /data/local 0751 root root
+    mkdir /data/misc/media 0700 media media
+
+    # For security reasons, /data/local/tmp should always be empty.
+    # Do not place files or directories in /data/local/tmp
+    mkdir /data/local/tmp 0771 shell shell
+    mkdir /data/data 0771 system system
+    mkdir /data/app-private 0771 system system
+    mkdir /data/app-asec 0700 root root
+    mkdir /data/app-lib 0771 system system
+    mkdir /data/app 0771 system system
+    mkdir /data/property 0700 root root
+
+    # create dalvik-cache, so as to enforce our permissions
+    mkdir /data/dalvik-cache 0771 root root
+    mkdir /data/dalvik-cache/profiles 0711 system system
+
+    # create resource-cache and double-check the perms
+    mkdir /data/resource-cache 0771 system system
+    chown system system /data/resource-cache
+    chmod 0771 /data/resource-cache
+
+    # create the lost+found directories, so as to enforce our permissions
+    mkdir /data/lost+found 0770 root root
+
+    # create directory for DRM plug-ins - give drm the read/write access to
+    # the following directory.
+    mkdir /data/drm 0770 drm drm
+
+    # create directory for MediaDrm plug-ins - give drm the read/write access to
+    # the following directory.
+    mkdir /data/mediadrm 0770 mediadrm mediadrm
+
+    # symlink to bugreport storage location
+    symlink /data/data/com.android.shell/files/bugreports /data/bugreports
+
+    # Separate location for storing security policy files on data
+    mkdir /data/security 0711 system system
+
+    # Reload policy from /data/security if present.
+    setprop selinux.reload_policy 1
+
+    # Set SELinux security contexts on upgrade or policy update.
+    restorecon_recursive /data
+
+    # If there is no fs-post-data action in the init.<device>.rc file, you
+    # must uncomment this line, otherwise encrypted filesystems
+    # won't work.
+    # Set indication (checked by vold) that we have finished this action
+    #setprop vold.post_fs_data_done 1
+
+on boot
+    # basic network init
+    ifup lo
+    hostname localhost
+    domainname localdomain
+
+    # set RLIMIT_NICE to allow priorities from 19 to -20
+    setrlimit 13 40 40
+
+    # Memory management.  Basic kernel parameters, and allow the high
+    # level system server to be able to adjust the kernel OOM driver
+    # parameters to match how it is managing things.
+    write /proc/sys/vm/overcommit_memory 1
+    write /proc/sys/vm/min_free_order_shift 4
+    chown root system /sys/module/lowmemorykiller/parameters/adj
+    chmod 0220 /sys/module/lowmemorykiller/parameters/adj
+    chown root system /sys/module/lowmemorykiller/parameters/minfree
+    chmod 0220 /sys/module/lowmemorykiller/parameters/minfree
+
+    # Tweak background writeout
+    write /proc/sys/vm/dirty_expire_centisecs 200
+    write /proc/sys/vm/dirty_background_ratio  5
+
+    # Permissions for System Server and daemons.
+    chown radio system /sys/android_power/state
+    chown radio system /sys/android_power/request_state
+    chown radio system /sys/android_power/acquire_full_wake_lock
+    chown radio system /sys/android_power/acquire_partial_wake_lock
+    chown radio system /sys/android_power/release_wake_lock
+    chown system system /sys/power/autosleep
+    chown system system /sys/power/state
+    chown system system /sys/power/wakeup_count
+    chown radio system /sys/power/wake_lock
+    chown radio system /sys/power/wake_unlock
+    chmod 0660 /sys/power/state
+    chmod 0660 /sys/power/wake_lock
+    chmod 0660 /sys/power/wake_unlock
+
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/timer_rate
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/timer_rate
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/timer_slack
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/timer_slack
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/target_loads
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/target_loads
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boost
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/boost
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boostpulse
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/input_boost
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/input_boost
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/io_is_busy
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/io_is_busy
+
+    # Assume SMP uses shared cpufreq policy for all CPUs
+    chown system system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
+    chmod 0660 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
+
+    chown system system /sys/class/timed_output/vibrator/enable
+    chown system system /sys/class/leds/keyboard-backlight/brightness
+    chown system system /sys/class/leds/lcd-backlight/brightness
+    chown system system /sys/class/leds/button-backlight/brightness
+    chown system system /sys/class/leds/jogball-backlight/brightness
+    chown system system /sys/class/leds/red/brightness
+    chown system system /sys/class/leds/green/brightness
+    chown system system /sys/class/leds/blue/brightness
+    chown system system /sys/class/leds/red/device/grpfreq
+    chown system system /sys/class/leds/red/device/grppwm
+    chown system system /sys/class/leds/red/device/blink
+    chown system system /sys/class/timed_output/vibrator/enable
+    chown system system /sys/module/sco/parameters/disable_esco
+    chown system system /sys/kernel/ipv4/tcp_wmem_min
+    chown system system /sys/kernel/ipv4/tcp_wmem_def
+    chown system system /sys/kernel/ipv4/tcp_wmem_max
+    chown system system /sys/kernel/ipv4/tcp_rmem_min
+    chown system system /sys/kernel/ipv4/tcp_rmem_def
+    chown system system /sys/kernel/ipv4/tcp_rmem_max
+    chown root radio /proc/cmdline
+
+    # Define default initial receive window size in segments.
+    setprop net.tcp.default_init_rwnd 60
+
+    class_start core
+
+on nonencrypted
+    class_start main
+    class_start late_start
+
+on property:vold.decrypt=trigger_default_encryption
+    start defaultcrypto
+
+on property:vold.decrypt=trigger_encryption
+    start surfaceflinger
+    start encrypt
+
+on property:sys.init_log_level=*
+    loglevel ${sys.init_log_level}
+
+on charger
+    class_start charger
+
+on property:vold.decrypt=trigger_reset_main
+    class_reset main
+
+on property:vold.decrypt=trigger_load_persist_props
+    load_persist_props
+
+on property:vold.decrypt=trigger_post_fs_data
+    trigger post-fs-data
+
+on property:vold.decrypt=trigger_restart_min_framework
+    class_start main
+
+on property:vold.decrypt=trigger_restart_framework
+    class_start main
+    class_start late_start
+
+on property:vold.decrypt=trigger_shutdown_framework
+    class_reset late_start
+    class_reset main
+
+on property:sys.powerctl=*
+    powerctl ${sys.powerctl}
+
+# system server cannot write to /proc/sys files,
+# and chown/chmod does not work for /proc/sys/ entries.
+# So proxy writes through init.
+on property:sys.sysctl.extra_free_kbytes=*
+    write /proc/sys/vm/extra_free_kbytes ${sys.sysctl.extra_free_kbytes}
+
+# "tcp_default_init_rwnd" Is too long!
+on property:sys.sysctl.tcp_def_init_rwnd=*
+    write /proc/sys/net/ipv4/tcp_default_init_rwnd ${sys.sysctl.tcp_def_init_rwnd}
+
+
+## Daemon processes to be run by init.
+##
+service ueventd /sbin/ueventd
+    class core
+    critical
+    seclabel u:r:ueventd:s0
+
+service logd /system/bin/logd
+    class core
+    socket logd stream 0666 logd logd
+    socket logdr seqpacket 0666 logd logd
+    socket logdw dgram 0222 logd logd
+    seclabel u:r:logd:s0
+
+service healthd /sbin/healthd
+    class core
+    critical
+    seclabel u:r:healthd:s0
+
+service console /system/bin/sh
+    class core
+    console
+    disabled
+    user shell
+    group shell log
+    seclabel u:r:shell:s0
+
+on property:ro.debuggable=1
+    start console
+
+# adbd is controlled via property triggers in init.<platform>.usb.rc
+service adbd /sbin/adbd --root_seclabel=u:r:su:s0
+    class core
+    socket adbd stream 660 system system
+    disabled
+    seclabel u:r:adbd:s0
+
+# adbd on at boot in emulator
+on property:ro.kernel.qemu=1
+    start adbd
+
+service lmkd /system/bin/lmkd
+    class core
+    critical
+    socket lmkd seqpacket 0660 system system
+
+service servicemanager /system/bin/servicemanager
+    class core
+    user system
+    group system
+    critical
+    onrestart restart healthd
+    onrestart restart zygote
+    onrestart restart media
+    onrestart restart surfaceflinger
+    onrestart restart drm
+
+service vold /system/bin/vold
+    class core
+    socket vold stream 0660 root mount
+    ioprio be 2
+
+service netd /system/bin/netd
+    class main
+    socket netd stream 0660 root system
+    socket dnsproxyd stream 0660 root inet
+    socket mdns stream 0660 root system
+    socket fwmarkd stream 0660 root inet
+
+service debuggerd /system/bin/debuggerd
+    class main
+
+service debuggerd64 /system/bin/debuggerd64
+    class main
+
+service ril-daemon /system/bin/rild
+    class main
+    socket rild stream 660 root radio
+    socket rild-debug stream 660 radio system
+    user root
+    group radio cache inet misc audio log
+
+service surfaceflinger /system/bin/surfaceflinger
+    class core
+    user system
+    group graphics drmrpc
+    onrestart restart zygote
+
+service drm /system/bin/drmserver
+    class main
+    user drm
+    group drm system inet drmrpc
+
+service media /system/bin/mediaserver
+    class main
+    user media
+    group audio camera inet net_bt net_bt_admin net_bw_acct drmrpc mediadrm
+    ioprio rt 4
+
+# One shot invocation to deal with encrypted volume.
+service defaultcrypto /system/bin/vdc --wait cryptfs mountdefaultencrypted
+    disabled
+    oneshot
+    # vold will set vold.decrypt to trigger_restart_framework (default
+    # encryption) or trigger_restart_min_framework (other encryption)
+
+# One shot invocation to encrypt unencrypted volumes
+service encrypt /system/bin/vdc --wait cryptfs enablecrypto inplace default
+    disabled
+    oneshot
+    # vold will set vold.decrypt to trigger_restart_framework (default
+    # encryption)
+
+# 动画安装的服务
+service bootanim /system/bin/bootanimation
+    class core
+    user graphics
+    group graphics audio media
+    disabled
+    oneshot
+
+service installd /system/bin/installd
+    class main
+    socket installd stream 600 system system
+
+service flash_recovery /system/bin/install-recovery.sh
+    class main
+    seclabel u:r:install_recovery:s0
+    oneshot
+
+service racoon /system/bin/racoon
+    class main
+    socket racoon stream 600 system system
+    # IKE uses UDP port 500. Racoon will setuid to vpn after binding the port.
+    group vpn net_admin inet
+    disabled
+    oneshot
+
+service mtpd /system/bin/mtpd
+    class main
+    socket mtpd stream 600 system system
+    user vpn
+    group vpn net_admin inet net_raw
+    disabled
+    oneshot
+
+service keystore /system/bin/keystore /data/misc/keystore
+    class main
+    user keystore
+    group keystore drmrpc
+
+service dumpstate /system/bin/dumpstate -s
+    class main
+    socket dumpstate stream 0660 shell log
+    disabled
+    oneshot
+
+service mdnsd /system/bin/mdnsd
+    class main
+    user mdnsr
+    group inet net_raw
+    socket mdnsd stream 0660 mdnsr inet
+    disabled
+    oneshot
+
+service pre-recovery /system/bin/uncrypt
+    class main
+    disabled
+    oneshot
+========================================================
+对于关键字的定义在sysytem/core/keywordc文件中
+KEYWORD(mkdir,       COMMAND, 1, do_mkdir)
+第一个参数 脚本中使用的名字
+第二个参数 flags 为关键字的类型
+第三个参数 关键字参数的个数
+第三个参数 关键字所对应的函数  （函数的实现在builtins.c文件中实现的）
+关于init的内建动作和初始化
+=======================================================
+我们在返回init.c文件
+queue_builtin_action(wait_for_coldboot_done_action, "wait_for_coldboot_done");等待启动结束
+属于内建动作
+内建动作和init脚本一样，形成命令的序列，在init可执行程序的for循环中真正的执行
+终端初始化
+static int console_init_action(int nargs, char **args)
+{
+    int fd;
+
+    if (console[0]) {
+        snprintf(console_name, sizeof(console_name), "/dev/%s", console);
+    }
+
+    fd = open(console_name, O_RDWR);
+    if (fd >= 0)
+        have_console = 1;
+    close(fd);
+
+    fd = open("/dev/tty0", O_WRONLY);//获取系统的默认的首个终端
+    if (fd >= 0) {
+        const char *msg;
+            msg = "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"  // console is 40 cols x 30 lines
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "             A N D R O I D ";//显示在终端的字符串上
+        write(fd, msg, strlen(msg));//写设备以显示字符串
+        close(fd);
+    }
+
+    return 0;
+}
+===========================================keychord初始化（keychords.c）=========================
+keychord组合键的一种 由/dev/keychord设备用于一些调试类的功能 
+void keychord_init()
+{
+    int fd, ret;
+
+    service_for_each(add_service_keycodes);//对每个服务增加keycode
+
+    /* nothing to do if no services require keychords */
+    if (!keychords)
+        return;
+
+    fd = open("/dev/keychord", O_RDWR);//打开
+    if (fd < 0) {
+        ERROR("could not open /dev/keychord\n");
+        return;
+    }
+    fcntl(fd, F_SETFD, FD_CLOEXEC);
+
+    ret = write(fd, keychords, keychords_length);//写
+    if (ret != keychords_length) {
+        ERROR("could not configure /dev/keychord %d (%d)\n", ret, errno);
+        close(fd);
+        fd = -1;
+    }
+
+    free(keychords);
+    keychords = 0;//保存标志和文件描述符
+
+    keychord_fd = fd;
+}
+==========================property_service.c===========================
+void property_init(void)
+{
+    init_property_area();
+}
+实际上包括属性存储区域，初始化和默认属性文件的处理
+void property_load_boot_defaults(void)
+{
+    load_properties_from_file(PROP_PATH_RAMDISK_DEFAULT, NULL);
+}
+
+int properties_inited(void)
+{
+    return property_area_inited;
+}
+=========================bootchart.c=================
+
+
+
+
+===================for(;;)===========================
+
+  for(;;) {
+        int nr, i, timeout = -1;
+
+        execute_one_command();//执行一个单行的命令
+        restart_processes();// 重新启动进程 
+
+        if (!property_set_fd_init && get_property_set_fd() > 0) {
+            ufds[fd_count].fd = get_property_set_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count++;
+            property_set_fd_init = 1;//设置属性的初始化标志
+        }
+        if (!signal_fd_init && get_signal_fd() > 0) {
+            ufds[fd_count].fd = get_signal_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count+ +;
+            signal_fd_init = 1;//设置signal的初始化标志
+        }
+        if (!keychord_fd_init && get_keychord_fd() > 0) {
+            ufds[fd_count].fd = get_keychord_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count++;
+            keychord_fd_init = 1;//设置keychord的初始化标志
+        }
+
+        if (process_needs_restart) {
+            timeout = (process_needs_restart - gettime()) * 1000;
+            if (timeout < 0)
+                timeout = 0;
+        }
+
+        if (!action_queue_empty() || cur_action)
+            timeout = 0;
+
+#if BOOTCHART
+        if (bootchart_count > 0) {
+            if (timeout < 0 || timeout > BOOTCHART_POLLING_MS)
+                timeout = BOOTCHART_POLLING_MS;
+            if (bootchart_step() < 0 || --bootchart_count == 0) {
+                bootchart_finish();
+                bootchart_count = 0;
+            }
+        }
+#endif
+
+        nr = poll(ufds, fd_count, timeout);//获取用于时间的文件描述符
+        if (nr <= 0)
+            continue;
+
+        for (i = 0; i < fd_count; i++) {
+            if (ufds[i].revents & POLLIN) {
+                if (ufds[i].fd == get_property_set_fd())//
+                    handle_property_set_fd();//设置属性方面的处理
+                else if (ufds[i].fd == get_keychord_fd())
+                    handle_keychord();//keychord方面的处理
+                else if (ufds[i].fd == get_signal_fd())
+                    handle_signal();//signal方面的处理
+            }
+        }
+    }
+
+    return 0;
+}
+======================================execute_one_command()====================
+void execute_one_command(void)
+{
+    int ret, i;
+    char cmd_str[256] = "";
+
+    if (!cur_action || !cur_command || is_last_command(cur_action, cur_command)) {
+        cur_action = action_remove_queue_head();
+        cur_command = NULL;
+        if (!cur_action)//无动作将退出
+            return;
+        INFO("processing action %p (%s)\n", cur_action, cur_action->name);
+        cur_command = get_first_command(cur_action);//获取第一个命令
+    } else {
+        cur_command = get_next_command(cur_action, cur_command);//获取下一个命令
+    }
+
+    if (!cur_command)
+        return;
+	//执行命令
+    ret = cur_command->func(cur_command->nargs, cur_command->args);
+    if (klog_get_level() >= KLOG_INFO_LEVEL) {
+        for (i = 0; i < cur_command->nargs; i++) {
+            strlcat(cmd_str, cur_command->args[i], sizeof(cmd_str));
+            if (i < cur_command->nargs - 1) {
+                strlcat(cmd_str, " ", sizeof(cmd_str));
+            }
+        }
+        INFO("command '%s' action=%s status=%d (%s:%d)\n",
+             cmd_str, cur_action ? cur_action->name : "", ret, cur_command->filename,
+             cur_command->line);
+    }
+}
+====================================
diff --git a/zhushi.c~ b/zhushi.c~
new file mode 100644
index 0000000..4747028
--- /dev/null
+++ b/zhushi.c~
@@ -0,0 +1,921 @@
+ 关于 模拟器运行系统镜像的方式，配置信息在：
+hexstia@unbuntu0:~/adt-bundle-linux-x86_64-20140702/sdk/.android/avd/xzc.avd$ ls
+cache.img  config.ini  emulator-user.ini  hardware-qemu.ini  sdcard.img  userdata.img  userdata-qemu.img
+ init:
+ 路径为 system /core/init 
+首先是内核启动过程加载 函数startkernel（）-》init_post()->run_init_process()内部执行execute ——command 中哦能否的进程文件路径
+执行execve（）调用查找的是系统路径下的脚本文件所 init.rc init.goldfish.rc
+init
+int fd_count = 0;
+    struct pollfd ufds[4];
+    char *tmpdev;
+    char* debuggable;
+    char tmp[32];
+    int property_set_fd_init = 0;
+    int signal_fd_init = 0;
+    int keychord_fd_init = 0;
+    bool is_charger = false;
+
+    if (!strcmp(basename(argv[0]), "ueventd"))
+        return ueventd_main(argc, argv);
+
+    if (!strcmp(basename(argv[0]), "watchdogd"))
+        return watchdogd_main(argc, argv);
+=============================================================
+ /* clear the umask */
+    umask(0);
+
+        /* Get the basic filesystem setup we need put
+         * together in the initramdisk on / and then we'll
+         * let the rc file figure out the rest.
+         */
+    mkdir("/dev", 0755);//设备驱动程序 文件系统
+    mkdir("/proc", 0755);//虚拟文件系统
+    mkdir("/sys", 0755);
+
+    mount("tmpfs", "/dev", "tmpfs", MS_NOSUID, "mode=0755");
+    mkdir("/dev/pts", 0755);
+    mkdir("/dev/socket", 0755);
+    mount("devpts", "/dev/pts", "devpts", 0, NULL);
+    mount("proc", "/proc", "proc", 0, NULL);
+    mount("sysfs", "/sys", "sysfs", 0, NULL);
+//以上创建基本的文件系统目录以及挂在文件
+  close(open("/dev/.booting", O_WRONLY | O_CREAT, 0000));
+
+        /* 
+	我们必须有一些/创建以外的地方
+	*设备节点kmsg和零,否则我们不会
+	*能够重新安装/只读。
+	*现在tmpfs是安装在/ dev,我们可以
+	*跟外面的世界。
+
+         */
+    open_devnull_stdio();//打开3个文件：输入，输出，错误  将会在 /dev下生成 __null__设备文件节点所有输入输出全部重定向__null__
+	    klog_init();//初始化log
+property_init();//属性初始化 
+init_parse_config_file("/init.rc");//使用函数init_parse_config_file读取并分析init.rc文件
+当前涉及到init .rc文件的脚本 
+文件脚本的路径在 system/core/rootdir/init.rc
+如果想自己挂在文件的话。
+#############
+snprintf(tmp,sizeof(tmp),"/init.%s/rc",hardware);
+init_parse_config_file(tmp);
+#############
+=========================================================
+ action_for_each_trigger("early-init", action_add_queue_tail);
+    /* execute all the boot actions to get us started */
+    action_for_each_trigger("init", action_add_queue_tail);//执行与动作列表的init区块相关的命令
+不要挂载文件系统或启动核心系统服务
+如果在充电模式
+  if (is_charger) {
+        action_for_each_trigger("charger", action_add_queue_tail);
+    } else {
+        action_for_each_trigger("late-init", action_add_queue_tail);
+    }
+/// *运行所有属性触发器基于当前状态属性* /
+  queue_builtin_action(queue_property_triggers_action, "queue_property_triggers");
+=======================================================================================
+========================================================================================
+下面讲解initrc脚本语法
+链接其他的脚本文件
+import /init.environ.rc
+import /init.usb.rc
+import /init.${ro.hardware}.rc
+import /init.${ro.zygote}.rc
+import /init.trace.rc
+
+on early-init
+    # Set init and its forked children's oom_adj.
+    #设置初始化及其派生的子类 oom_adj。
+    write /proc/1/oom_score_adj -1000
+
+    # Apply strict SELinux checking of PROT_EXEC on mmap/mprotect calls.4
+   #应用严格的PROT_EXEC mmap / SELinux检查mprotect调用
+    write /sys/fs/selinux/checkreqprot 0
+
+    # Set the security context for the init process.
+    # This should occur before anything else (e.g. ueventd) is started.这应该发生什么(例如ueventd)之前开始
+    setcon u:r:init:s0
+
+    # Set the security context of /adb_keys if present.设置/ adb_keys如果存在的安全上下文。
+    restorecon /adb_keys
+
+    start ueventd
+
+    # create mountpoints创建挂在点
+    mkdir /mnt 0775 root system
+
+on init
+    sysclktz 0
+
+    loglevel 3
+
+    # Backward compatibility向后兼容性  symlink建立新的链接 路径文件节点 symlink(oldpath,newpath)
+    symlink /system/etc /etc  
+    symlink /sys/kernel/debug /d
+
+    # Right now vendor lives on the same filesystem as system,
+    # but someday that may change.
+    symlink /system/vendor /vendor
+
+    # Create cgroup mount point for cpu accounting
+    mkdir /acct
+    mount cgroup none /acct cpuacct
+    mkdir /acct/uid
+
+    # Create cgroup mount point for memory
+    mount tmpfs none /sys/fs/cgroup mode=0750,uid=0,gid=1000
+    mkdir /sys/fs/cgroup/memory 0750 root system
+    mount cgroup none /sys/fs/cgroup/memory memory
+    write /sys/fs/cgroup/memory/memory.move_charge_at_immigrate 1
+    chown root system /sys/fs/cgroup/memory/tasks
+    chmod 0660 /sys/fs/cgroup/memory/tasks
+    mkdir /sys/fs/cgroup/memory/sw 0750 root system
+    write /sys/fs/cgroup/memory/sw/memory.swappiness 100
+    write /sys/fs/cgroup/memory/sw/memory.move_charge_at_immigrate 1
+    chown root system /sys/fs/cgroup/memory/sw/tasks
+    chmod 0660 /sys/fs/cgroup/memory/sw/tasks
+
+    mkdir /system
+    mkdir /data 0771 system system
+    mkdir /cache 0770 system cache
+    mkdir /config 0500 root root
+
+    # See storage config details at http://source.android.com/tech/storage/ 这里是存储的挂在点 注意这个位置
+    mkdir /mnt/shell 0700 shell shell
+    mkdir /mnt/media_rw 0770 media_rw media_rw
+    mkdir /storage 0751 root sdcard_r
+
+    # Directory for putting things only root should see.目录将只有根应该看到的东西
+    mkdir /mnt/secure 0700 root root
+
+    # Directory for staging bindmounts 目录暂存绑定安装
+    mkdir /mnt/secure/staging 0700 root root
+
+    # Directory-target for where the secure container 安全内容
+    # imagefile directory will be bind-mounted
+    mkdir /mnt/secure/asec  0700 root root
+
+    # Secure container public mount points.安全容器公开挂载点。
+    mkdir /mnt/asec  0700 root system
+    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000
+
+    # Filesystem image public mount points.文件系统映像公共挂载点。
+    mkdir /mnt/obb 0700 root system
+    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000
+
+    # memory control cgroup 内存控制组
+    mkdir /dev/memcg 0700 root system
+    mount cgroup none /dev/memcg memory
+
+    write /proc/sys/kernel/panic_on_oops 1
+    write /proc/sys/kernel/hung_task_timeout_secs 0
+    write /proc/cpu/alignment 4
+    write /proc/sys/kernel/sched_latency_ns 10000000
+    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
+    write /proc/sys/kernel/sched_compat_yield 1
+    write /proc/sys/kernel/sched_child_runs_first 0
+    write /proc/sys/kernel/randomize_va_space 2
+    write /proc/sys/kernel/kptr_restrict 2
+    write /proc/sys/vm/mmap_min_addr 32768
+    write /proc/sys/net/ipv4/ping_group_range "0 2147483647"
+    write /proc/sys/net/unix/max_dgram_qlen 300
+    write /proc/sys/kernel/sched_rt_runtime_us 950000
+    write /proc/sys/kernel/sched_rt_period_us 1000000
+
+    # reflect fwmark from incoming packets onto generated replies反映fwmark从传入的数据包到生成的回复
+    write /proc/sys/net/ipv4/fwmark_reflect 1
+    write /proc/sys/net/ipv6/fwmark_reflect 1
+
+    # set fwmark on accepted sockets 设置fwmark接受套接字
+    write /proc/sys/net/ipv4/tcp_fwmark_accept 1
+
+    # Create cgroup mount points for process groups 为过程组创建cgroup挂载点
+    mkdir /dev/cpuctl
+    mount cgroup none /dev/cpuctl cpu
+    chown system system /dev/cpuctl
+    chown system system /dev/cpuctl/tasks
+    chmod 0660 /dev/cpuctl/tasks
+    write /dev/cpuctl/cpu.shares 1024
+    write /dev/cpuctl/cpu.rt_runtime_us 950000
+    write /dev/cpuctl/cpu.rt_period_us 1000000
+
+    mkdir /dev/cpuctl/apps
+    chown system system /dev/cpuctl/apps/tasks
+    chmod 0666 /dev/cpuctl/apps/tasks
+    write /dev/cpuctl/apps/cpu.shares 1024
+    write /dev/cpuctl/apps/cpu.rt_runtime_us 800000
+    write /dev/cpuctl/apps/cpu.rt_period_us 1000000
+
+    mkdir /dev/cpuctl/apps/bg_non_interactive
+    chown system system /dev/cpuctl/apps/bg_non_interactive/tasks
+    chmod 0666 /dev/cpuctl/apps/bg_non_interactive/tasks
+    # 5.0 %
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.shares 52
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us 700000
+    write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_period_us 1000000
+
+    # qtaguid will limit access to specific data based on group memberships.
+    #   net_bw_acct grants impersonation of socket owners.
+    #   net_bw_stats grants access to other apps' detailed tagged-socket stats.
+    chown root net_bw_acct /proc/net/xt_qtaguid/ctrl
+    chown root net_bw_stats /proc/net/xt_qtaguid/stats
+
+    # Allow everybody to read the xt_qtaguid resource tracking misc dev.
+    # This is needed by any process that uses socket tagging.
+    chmod 0644 /dev/xt_qtaguid
+
+    # Create location for fs_mgr to store abbreviated output from filesystem
+    # checker programs.
+    mkdir /dev/fscklogs 0770 root system
+
+    # pstore/ramoops previous console log
+    mount pstore pstore /sys/fs/pstore
+    chown system log /sys/fs/pstore/console-ramoops
+    chmod 0440 /sys/fs/pstore/console-ramoops
+
+# Healthd can trigger a full boot from charger mode by signaling this
+# property when the power button is held.
+on property:sys.boot_from_charger_mode=1
+    class_stop charger
+    trigger late-init
+
+# Load properties from /system/ + /factory after fs mount.
+on load_all_props_action
+    load_all_props
+
+# Indicate to fw loaders that the relevant mounts are up.
+on firmware_mounts_complete
+    rm /dev/.booting
+
+# Mount filesystems and start core system services.挂载文件系统和启动核心系统服务。
+on late-init
+    trigger early-fs
+    trigger fs
+    trigger post-fs
+    trigger post-fs-data
+
+    # Load properties from /system/ + /factory after fs mount. Place
+    # this in another action so that the load will be scheduled after the prior
+    # issued fs triggers have completed.
+    trigger load_all_props_action
+
+    # Remove a file to wake up anything waiting for firmware.
+    trigger firmware_mounts_complete
+
+    trigger early-boot
+    trigger boot
+
+
+on post-fs
+    # once everything is setup, no need to modify /
+    mount rootfs rootfs / ro remount
+    # mount shared so changes propagate into child namespaces
+    mount rootfs rootfs / shared rec
+
+    # We chown/chmod /cache again so because mount is run as root + defaults
+    chown system cache /cache
+    chmod 0770 /cache
+    # We restorecon /cache in case the cache partition has been reset.
+    restorecon_recursive /cache
+
+    # This may have been created by the recovery system with odd permissions
+    chown system cache /cache/recovery
+    chmod 0770 /cache/recovery
+
+    #change permissions on vmallocinfo so we can grab it from bugreports
+    chown root log /proc/vmallocinfo
+    chmod 0440 /proc/vmallocinfo
+
+    chown root log /proc/slabinfo
+    chmod 0440 /proc/slabinfo
+
+    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
+    chown root system /proc/kmsg
+    chmod 0440 /proc/kmsg
+    chown root system /proc/sysrq-trigger
+    chmod 0220 /proc/sysrq-trigger
+    chown system log /proc/last_kmsg
+    chmod 0440 /proc/last_kmsg
+
+    # make the selinux kernel policy world-readable
+    chmod 0444 /sys/fs/selinux/policy
+
+    # create the lost+found directories, so as to enforce our permissions
+    mkdir /cache/lost+found 0770 root root
+
+on post-fs-data
+    # We chown/chmod /data again so because mount is run as root + defaults
+    chown system system /data
+    chmod 0771 /data
+    # We restorecon /data in case the userdata partition has been reset.
+    restorecon /data
+
+    # Avoid predictable entropy pool. Carry over entropy from previous boot.
+    copy /data/system/entropy.dat /dev/urandom
+
+    # Create dump dir and collect dumps.
+    # Do this before we mount cache so eventually we can use cache for
+    # storing dumps on platforms which do not have a dedicated dump partition.
+    mkdir /data/dontpanic 0750 root log
+
+    # Collect apanic data, free resources and re-arm trigger
+    copy /proc/apanic_console /data/dontpanic/apanic_console
+    chown root log /data/dontpanic/apanic_console
+    chmod 0640 /data/dontpanic/apanic_console
+
+    copy /proc/apanic_threads /data/dontpanic/apanic_threads
+    chown root log /data/dontpanic/apanic_threads
+    chmod 0640 /data/dontpanic/apanic_threads
+
+    write /proc/apanic_console 1
+
+    # create basic filesystem structure
+    mkdir /data/misc 01771 system misc
+    mkdir /data/misc/adb 02750 system shell
+    mkdir /data/misc/bluedroid 0770 bluetooth net_bt_stack
+    mkdir /data/misc/bluetooth 0770 system system
+    mkdir /data/misc/keystore 0700 keystore keystore
+    mkdir /data/misc/keychain 0771 system system
+    mkdir /data/misc/net 0750 root shell
+    mkdir /data/misc/radio 0770 system radio
+    mkdir /data/misc/sms 0770 system radio
+    mkdir /data/misc/zoneinfo 0775 system system
+    mkdir /data/misc/vpn 0770 system vpn
+    mkdir /data/misc/shared_relro 0771 shared_relro shared_relro
+    mkdir /data/misc/systemkeys 0700 system system
+    mkdir /data/misc/wifi 0770 wifi wifi
+    mkdir /data/misc/wifi/sockets 0770 wifi wifi
+    mkdir /data/misc/wifi/wpa_supplicant 0770 wifi wifi
+    mkdir /data/misc/ethernet 0770 system system
+    mkdir /data/misc/dhcp 0770 dhcp dhcp
+    mkdir /data/misc/user 0771 root root
+    # give system access to wpa_supplicant.conf for backup and restore
+    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
+    mkdir /data/local 0751 root root
+    mkdir /data/misc/media 0700 media media
+
+    # For security reasons, /data/local/tmp should always be empty.
+    # Do not place files or directories in /data/local/tmp
+    mkdir /data/local/tmp 0771 shell shell
+    mkdir /data/data 0771 system system
+    mkdir /data/app-private 0771 system system
+    mkdir /data/app-asec 0700 root root
+    mkdir /data/app-lib 0771 system system
+    mkdir /data/app 0771 system system
+    mkdir /data/property 0700 root root
+
+    # create dalvik-cache, so as to enforce our permissions
+    mkdir /data/dalvik-cache 0771 root root
+    mkdir /data/dalvik-cache/profiles 0711 system system
+
+    # create resource-cache and double-check the perms
+    mkdir /data/resource-cache 0771 system system
+    chown system system /data/resource-cache
+    chmod 0771 /data/resource-cache
+
+    # create the lost+found directories, so as to enforce our permissions
+    mkdir /data/lost+found 0770 root root
+
+    # create directory for DRM plug-ins - give drm the read/write access to
+    # the following directory.
+    mkdir /data/drm 0770 drm drm
+
+    # create directory for MediaDrm plug-ins - give drm the read/write access to
+    # the following directory.
+    mkdir /data/mediadrm 0770 mediadrm mediadrm
+
+    # symlink to bugreport storage location
+    symlink /data/data/com.android.shell/files/bugreports /data/bugreports
+
+    # Separate location for storing security policy files on data
+    mkdir /data/security 0711 system system
+
+    # Reload policy from /data/security if present.
+    setprop selinux.reload_policy 1
+
+    # Set SELinux security contexts on upgrade or policy update.
+    restorecon_recursive /data
+
+    # If there is no fs-post-data action in the init.<device>.rc file, you
+    # must uncomment this line, otherwise encrypted filesystems
+    # won't work.
+    # Set indication (checked by vold) that we have finished this action
+    #setprop vold.post_fs_data_done 1
+
+on boot
+    # basic network init
+    ifup lo
+    hostname localhost
+    domainname localdomain
+
+    # set RLIMIT_NICE to allow priorities from 19 to -20
+    setrlimit 13 40 40
+
+    # Memory management.  Basic kernel parameters, and allow the high
+    # level system server to be able to adjust the kernel OOM driver
+    # parameters to match how it is managing things.
+    write /proc/sys/vm/overcommit_memory 1
+    write /proc/sys/vm/min_free_order_shift 4
+    chown root system /sys/module/lowmemorykiller/parameters/adj
+    chmod 0220 /sys/module/lowmemorykiller/parameters/adj
+    chown root system /sys/module/lowmemorykiller/parameters/minfree
+    chmod 0220 /sys/module/lowmemorykiller/parameters/minfree
+
+    # Tweak background writeout
+    write /proc/sys/vm/dirty_expire_centisecs 200
+    write /proc/sys/vm/dirty_background_ratio  5
+
+    # Permissions for System Server and daemons.
+    chown radio system /sys/android_power/state
+    chown radio system /sys/android_power/request_state
+    chown radio system /sys/android_power/acquire_full_wake_lock
+    chown radio system /sys/android_power/acquire_partial_wake_lock
+    chown radio system /sys/android_power/release_wake_lock
+    chown system system /sys/power/autosleep
+    chown system system /sys/power/state
+    chown system system /sys/power/wakeup_count
+    chown radio system /sys/power/wake_lock
+    chown radio system /sys/power/wake_unlock
+    chmod 0660 /sys/power/state
+    chmod 0660 /sys/power/wake_lock
+    chmod 0660 /sys/power/wake_unlock
+
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/timer_rate
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/timer_rate
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/timer_slack
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/timer_slack
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/target_loads
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/target_loads
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/above_hispeed_delay
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boost
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/boost
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boostpulse
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/input_boost
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/input_boost
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/boostpulse_duration
+    chown system system /sys/devices/system/cpu/cpufreq/interactive/io_is_busy
+    chmod 0660 /sys/devices/system/cpu/cpufreq/interactive/io_is_busy
+
+    # Assume SMP uses shared cpufreq policy for all CPUs
+    chown system system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
+    chmod 0660 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
+
+    chown system system /sys/class/timed_output/vibrator/enable
+    chown system system /sys/class/leds/keyboard-backlight/brightness
+    chown system system /sys/class/leds/lcd-backlight/brightness
+    chown system system /sys/class/leds/button-backlight/brightness
+    chown system system /sys/class/leds/jogball-backlight/brightness
+    chown system system /sys/class/leds/red/brightness
+    chown system system /sys/class/leds/green/brightness
+    chown system system /sys/class/leds/blue/brightness
+    chown system system /sys/class/leds/red/device/grpfreq
+    chown system system /sys/class/leds/red/device/grppwm
+    chown system system /sys/class/leds/red/device/blink
+    chown system system /sys/class/timed_output/vibrator/enable
+    chown system system /sys/module/sco/parameters/disable_esco
+    chown system system /sys/kernel/ipv4/tcp_wmem_min
+    chown system system /sys/kernel/ipv4/tcp_wmem_def
+    chown system system /sys/kernel/ipv4/tcp_wmem_max
+    chown system system /sys/kernel/ipv4/tcp_rmem_min
+    chown system system /sys/kernel/ipv4/tcp_rmem_def
+    chown system system /sys/kernel/ipv4/tcp_rmem_max
+    chown root radio /proc/cmdline
+
+    # Define default initial receive window size in segments.
+    setprop net.tcp.default_init_rwnd 60
+
+    class_start core
+
+on nonencrypted
+    class_start main
+    class_start late_start
+
+on property:vold.decrypt=trigger_default_encryption
+    start defaultcrypto
+
+on property:vold.decrypt=trigger_encryption
+    start surfaceflinger
+    start encrypt
+
+on property:sys.init_log_level=*
+    loglevel ${sys.init_log_level}
+
+on charger
+    class_start charger
+
+on property:vold.decrypt=trigger_reset_main
+    class_reset main
+
+on property:vold.decrypt=trigger_load_persist_props
+    load_persist_props
+
+on property:vold.decrypt=trigger_post_fs_data
+    trigger post-fs-data
+
+on property:vold.decrypt=trigger_restart_min_framework
+    class_start main
+
+on property:vold.decrypt=trigger_restart_framework
+    class_start main
+    class_start late_start
+
+on property:vold.decrypt=trigger_shutdown_framework
+    class_reset late_start
+    class_reset main
+
+on property:sys.powerctl=*
+    powerctl ${sys.powerctl}
+
+# system server cannot write to /proc/sys files,
+# and chown/chmod does not work for /proc/sys/ entries.
+# So proxy writes through init.
+on property:sys.sysctl.extra_free_kbytes=*
+    write /proc/sys/vm/extra_free_kbytes ${sys.sysctl.extra_free_kbytes}
+
+# "tcp_default_init_rwnd" Is too long!
+on property:sys.sysctl.tcp_def_init_rwnd=*
+    write /proc/sys/net/ipv4/tcp_default_init_rwnd ${sys.sysctl.tcp_def_init_rwnd}
+
+
+## Daemon processes to be run by init.
+##
+service ueventd /sbin/ueventd
+    class core
+    critical
+    seclabel u:r:ueventd:s0
+
+service logd /system/bin/logd
+    class core
+    socket logd stream 0666 logd logd
+    socket logdr seqpacket 0666 logd logd
+    socket logdw dgram 0222 logd logd
+    seclabel u:r:logd:s0
+
+service healthd /sbin/healthd
+    class core
+    critical
+    seclabel u:r:healthd:s0
+
+service console /system/bin/sh
+    class core
+    console
+    disabled
+    user shell
+    group shell log
+    seclabel u:r:shell:s0
+
+on property:ro.debuggable=1
+    start console
+
+# adbd is controlled via property triggers in init.<platform>.usb.rc
+service adbd /sbin/adbd --root_seclabel=u:r:su:s0
+    class core
+    socket adbd stream 660 system system
+    disabled
+    seclabel u:r:adbd:s0
+
+# adbd on at boot in emulator
+on property:ro.kernel.qemu=1
+    start adbd
+
+service lmkd /system/bin/lmkd
+    class core
+    critical
+    socket lmkd seqpacket 0660 system system
+
+service servicemanager /system/bin/servicemanager
+    class core
+    user system
+    group system
+    critical
+    onrestart restart healthd
+    onrestart restart zygote
+    onrestart restart media
+    onrestart restart surfaceflinger
+    onrestart restart drm
+
+service vold /system/bin/vold
+    class core
+    socket vold stream 0660 root mount
+    ioprio be 2
+
+service netd /system/bin/netd
+    class main
+    socket netd stream 0660 root system
+    socket dnsproxyd stream 0660 root inet
+    socket mdns stream 0660 root system
+    socket fwmarkd stream 0660 root inet
+
+service debuggerd /system/bin/debuggerd
+    class main
+
+service debuggerd64 /system/bin/debuggerd64
+    class main
+
+service ril-daemon /system/bin/rild
+    class main
+    socket rild stream 660 root radio
+    socket rild-debug stream 660 radio system
+    user root
+    group radio cache inet misc audio log
+
+service surfaceflinger /system/bin/surfaceflinger
+    class core
+    user system
+    group graphics drmrpc
+    onrestart restart zygote
+
+service drm /system/bin/drmserver
+    class main
+    user drm
+    group drm system inet drmrpc
+
+service media /system/bin/mediaserver
+    class main
+    user media
+    group audio camera inet net_bt net_bt_admin net_bw_acct drmrpc mediadrm
+    ioprio rt 4
+
+# One shot invocation to deal with encrypted volume.
+service defaultcrypto /system/bin/vdc --wait cryptfs mountdefaultencrypted
+    disabled
+    oneshot
+    # vold will set vold.decrypt to trigger_restart_framework (default
+    # encryption) or trigger_restart_min_framework (other encryption)
+
+# One shot invocation to encrypt unencrypted volumes
+service encrypt /system/bin/vdc --wait cryptfs enablecrypto inplace default
+    disabled
+    oneshot
+    # vold will set vold.decrypt to trigger_restart_framework (default
+    # encryption)
+
+# 动画安装的服务
+service bootanim /system/bin/bootanimation
+    class core
+    user graphics
+    group graphics audio media
+    disabled
+    oneshot
+
+service installd /system/bin/installd
+    class main
+    socket installd stream 600 system system
+
+service flash_recovery /system/bin/install-recovery.sh
+    class main
+    seclabel u:r:install_recovery:s0
+    oneshot
+
+service racoon /system/bin/racoon
+    class main
+    socket racoon stream 600 system system
+    # IKE uses UDP port 500. Racoon will setuid to vpn after binding the port.
+    group vpn net_admin inet
+    disabled
+    oneshot
+
+service mtpd /system/bin/mtpd
+    class main
+    socket mtpd stream 600 system system
+    user vpn
+    group vpn net_admin inet net_raw
+    disabled
+    oneshot
+
+service keystore /system/bin/keystore /data/misc/keystore
+    class main
+    user keystore
+    group keystore drmrpc
+
+service dumpstate /system/bin/dumpstate -s
+    class main
+    socket dumpstate stream 0660 shell log
+    disabled
+    oneshot
+
+service mdnsd /system/bin/mdnsd
+    class main
+    user mdnsr
+    group inet net_raw
+    socket mdnsd stream 0660 mdnsr inet
+    disabled
+    oneshot
+
+service pre-recovery /system/bin/uncrypt
+    class main
+    disabled
+    oneshot
+========================================================
+对于关键字的定义在sysytem/core/keywordc文件中
+KEYWORD(mkdir,       COMMAND, 1, do_mkdir)
+第一个参数 脚本中使用的名字
+第二个参数 flags 为关键字的类型
+第三个参数 关键字参数的个数
+第三个参数 关键字所对应的函数  （函数的实现在builtins.c文件中实现的）
+关于init的内建动作和初始化
+=======================================================
+我们在返回init.c文件
+queue_builtin_action(wait_for_coldboot_done_action, "wait_for_coldboot_done");等待启动结束
+属于内建动作
+内建动作和init脚本一样，形成命令的序列，在init可执行程序的for循环中真正的执行
+终端初始化
+static int console_init_action(int nargs, char **args)
+{
+    int fd;
+
+    if (console[0]) {
+        snprintf(console_name, sizeof(console_name), "/dev/%s", console);
+    }
+
+    fd = open(console_name, O_RDWR);
+    if (fd >= 0)
+        have_console = 1;
+    close(fd);
+
+    fd = open("/dev/tty0", O_WRONLY);//获取系统的默认的首个终端
+    if (fd >= 0) {
+        const char *msg;
+            msg = "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"  // console is 40 cols x 30 lines
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "\n"
+        "             A N D R O I D ";//显示在终端的字符串上
+        write(fd, msg, strlen(msg));//写设备以显示字符串
+        close(fd);
+    }
+
+    return 0;
+}
+===========================================keychord初始化（keychords.c）=========================
+keychord组合键的一种 由/dev/keychord设备用于一些调试类的功能 
+void keychord_init()
+{
+    int fd, ret;
+
+    service_for_each(add_service_keycodes);//对每个服务增加keycode
+
+    /* nothing to do if no services require keychords */
+    if (!keychords)
+        return;
+
+    fd = open("/dev/keychord", O_RDWR);//打开
+    if (fd < 0) {
+        ERROR("could not open /dev/keychord\n");
+        return;
+    }
+    fcntl(fd, F_SETFD, FD_CLOEXEC);
+
+    ret = write(fd, keychords, keychords_length);//写
+    if (ret != keychords_length) {
+        ERROR("could not configure /dev/keychord %d (%d)\n", ret, errno);
+        close(fd);
+        fd = -1;
+    }
+
+    free(keychords);
+    keychords = 0;//保存标志和文件描述符
+
+    keychord_fd = fd;
+}
+==========================property_service.c===========================
+void property_init(void)
+{
+    init_property_area();
+}
+实际上包括属性存储区域，初始化和默认属性文件的处理
+void property_load_boot_defaults(void)
+{
+    load_properties_from_file(PROP_PATH_RAMDISK_DEFAULT, NULL);
+}
+
+int properties_inited(void)
+{
+    return property_area_inited;
+}
+=========================bootchart.c=================
+
+
+
+
+===================for(;;)===========================
+
+  for(;;) {
+        int nr, i, timeout = -1;
+
+        execute_one_command();//执行一个单行的命令
+        restart_processes();// 重新启动进程 
+
+        if (!property_set_fd_init && get_property_set_fd() > 0) {
+            ufds[fd_count].fd = get_property_set_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count++;
+            property_set_fd_init = 1;//设置属性的初始化标志
+        }
+        if (!signal_fd_init && get_signal_fd() > 0) {
+            ufds[fd_count].fd = get_signal_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count+ +;
+            signal_fd_init = 1;//设置signal的初始化标志
+        }
+        if (!keychord_fd_init && get_keychord_fd() > 0) {
+            ufds[fd_count].fd = get_keychord_fd();
+            ufds[fd_count].events = POLLIN;
+            ufds[fd_count].revents = 0;
+            fd_count++;
+            keychord_fd_init = 1;//设置keychord的初始化标志
+        }
+
+        if (process_needs_restart) {
+            timeout = (process_needs_restart - gettime()) * 1000;
+            if (timeout < 0)
+                timeout = 0;
+        }
+
+        if (!action_queue_empty() || cur_action)
+            timeout = 0;
+
+#if BOOTCHART
+        if (bootchart_count > 0) {
+            if (timeout < 0 || timeout > BOOTCHART_POLLING_MS)
+                timeout = BOOTCHART_POLLING_MS;
+            if (bootchart_step() < 0 || --bootchart_count == 0) {
+                bootchart_finish();
+                bootchart_count = 0;
+            }
+        }
+#endif
+
+        nr = poll(ufds, fd_count, timeout);//获取用于时间的文件描述符
+        if (nr <= 0)
+            continue;
+
+        for (i = 0; i < fd_count; i++) {
+            if (ufds[i].revents & POLLIN) {
+                if (ufds[i].fd == get_property_set_fd())//
+                    handle_property_set_fd();//设置属性方面的处理
+                else if (ufds[i].fd == get_keychord_fd())
+                    handle_keychord();//keychord方面的处理
+                else if (ufds[i].fd == get_signal_fd())
+                    handle_signal();//signal方面的处理
+            }
+        }
+    }
+
+    return 0;
+}
+======================================execute_one_command()====================
+void execute_one_command(void)
+{
+    int ret, i;
+    char cmd_str[256] = "";
+
+    if (!cur_action || !cur_command || is_last_command(cur_action, cur_command)) {
+        cur_action = action_remove_queue_head();
+        cur_command = NULL;
+        if (!cur_action)//无动作将退出
+            return;
+        INFO("processing action %p (%s)\n", cur_action, cur_action->name);
+        cur_command = get_first_command(cur_action);//获取第一个命令
+    } else {
+        cur_command = get_next_command(cur_action, cur_command);//获取下一个命令
+    }
+
+    if (!cur_command)
+        return;
+	//执行命令
+    ret = cur_command->func(cur_command->nargs, cur_command->args);
+    if (klog_get_level() >= KLOG_INFO_LEVEL) {
+        for (i = 0; i < cur_command->nargs; i++) {
+            strlcat(cmd_str, cur_command->args[i], sizeof(cmd_str));
+            if (i < cur_command->nargs - 1) {
+                strlcat(cmd_str, " ", sizeof(cmd_str));
+            }
+        }
+        INFO("command '%s' action=%s status=%d (%s:%d)\n",
+             cmd_str, cur_action ? cur_action->name : "", ret, cur_command->filename,
+             cur_command->line);
+    }
+}
+====================================
diff --git "a/zygote\350\277\233\347\250\213.xmind" "b/zygote\350\277\233\347\250\213.xmind"
new file mode 100644
index 0000000000000000000000000000000000000000..fbccdc88bf07d7916fce286d8d80b6cba117bbad
GIT binary patch
literal 75904
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
I!z_;c2X{ySMgRZ+

literal 0
HcmV?d00001

diff --git "a/\345\220\215\350\257\215\346\224\266\351\233\206" "b/\345\220\215\350\257\215\346\224\266\351\233\206"
new file mode 100644
index 0000000..6056dc3
--- /dev/null
+++ "b/\345\220\215\350\257\215\346\224\266\351\233\206"
@@ -0,0 +1,35 @@
+Uevent:是内核通知android有状态变化的一种方法，比如USB线插入、拔出，电池电量变化等等。其本质是内核发送（可以通过socket）一个字符串，应用层（android）接收并解释该字符串，获取相应信息。
+
+clang: 	Clang是一个C语言、C++、Objective-C、Objective-C++语言的轻量级编译器。源代码发布于BSD协议下。
+（clang是LLVM的一个子项目，）
+#########################################################################
+LLVM:   是构架编译器(compiler)的框架系统，以C++编写而成，用于优化以任意程序语言编写的程序的编译时间(compile-time)、链接时间(link-time)、运行时间(run-time)以及空闲时间(idle-time)，对开发者保持开放，并兼容已有脚本。LLVM计划启动于2000年，最初由University of Illinois at Urbana-Champaign的Chris Lattner主持开展。2006年Chris Lattner加盟Apple Inc.并致力于LLVM在Apple开发体系中的应用。Apple也是LLVM计划的主要资助者。
+#########################################################################
+LLVM:   命名最早源自于底层虚拟机（Low Level Virtual Machine）的缩写,由于命名带来的混乱，目前LLVM就是该项目的全称。LLVM 核心库提供了与编译器相关的支持，可以作为多种语言编译器的后台来使用。能够进行程序语言的编译期优化、链接优化、在线编译优化、代码生成。LLVM的项目是一个模块化和可重复使用的编译器和工具技术的集合。LLVM是伊利诺伊大学的一个研究项目，提供一个现代化的，基于SSA的编译策略能够同时支持静态和动态的任意编程语言的编译目标。自那时以来，已经成长为LLVM的主干项目，由不同的子项目组成，其中许多正在生产中使用的各种 商业和开源的项目，以及被广泛用于学术研究。[1] 
+对关注编译技术的开发人员，LLVM提供了很多优点：
+现代化的设计
+LLVM的设计是高度模块化的，使得其代码更为清晰和便于排查问题所在。
+语言无关的中间代码
+一方面，这使得透过LLVM能够将不同的语言相互连结起来；也使得LLVM能够紧密地与IDE交互和集成。
+另一方面，发布中间代码而非目标代码能够在目标系统上更好地发挥其潜能而又不伤害可调试性（i.e. 在目标系统上针对本机的硬件环境产生目标代码，但又能够直接通过中间代码来进行行级调试）
+作为工具和函数库
+使用LLVM提供的工具可以比较容易地实现新的编程语言的优化编译器或VM，或为现有的编程语言引入一些更好的优化/调试特性。[5]  
+#########################################################################
+
+Yasm：是一个完全重写的NASM汇编。目前，它支持x86和AMD64指令集，接受NASM和GNU汇编器（gas）语法，产出二进制， ELF32 ， ELF64 ， COFF ， Mach - O的（ 32和64 ） ， RDOFF2 ，的Win32和Win64对象的格式，并生成STABS 调试信息的来源，DWARF 2 ，CodeView 8格式。
+#########################################################################
+Lambda:http://baike.baidu.com/view/3048187.htm#2
+
+“Lambda 表达式”(lambda expression)是一个匿名函数，Lambda表达式基于数学中的λ演算得名，直接对应于其中的lambda抽象(lambda abstraction)，是一个匿名函数，即没有函数名的函数。Lambda表达式可以表示闭包（注意和数学传统意义上的不同）。
+(注释java 8实现这种功能)
+flex bison
+Flex词法分析器生成工具。是一个生成词法分析器的工具，它可以利用正则表达式来生成匹配相应字符串的C语言代码，其语法格式基本同Lex相同
+Bison是一种通用目的的分析器生成器。它将LALR(1)上下文无关文法的描述转化成分析该文法的C程序。 一旦你精通Bison，你可以用它生成从简单的桌面计算器到复杂的程序设计语言等等许多语言的分析器。
+Bison向上兼容Yacc；所有书写正确的Yacc语法都应该可以不加更改地与Bison一起工作， 熟悉Yacc的人能毫不费力地使用Bison。
+单词的描述称为模式(Lexical Pattern)，模式一般用正规表达式进行精确描述。FLEX通过读取一个有规定格式的文本文件，输出一个C语言源程序。
+
+http://www.cnblogs.com/me115/archive/2010/10/27/1862180.html
+
+
+Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。
+
diff --git "a/\345\220\215\350\257\215\346\224\266\351\233\206~" "b/\345\220\215\350\257\215\346\224\266\351\233\206~"
new file mode 100644
index 0000000..6056dc3
--- /dev/null
+++ "b/\345\220\215\350\257\215\346\224\266\351\233\206~"
@@ -0,0 +1,35 @@
+Uevent:是内核通知android有状态变化的一种方法，比如USB线插入、拔出，电池电量变化等等。其本质是内核发送（可以通过socket）一个字符串，应用层（android）接收并解释该字符串，获取相应信息。
+
+clang: 	Clang是一个C语言、C++、Objective-C、Objective-C++语言的轻量级编译器。源代码发布于BSD协议下。
+（clang是LLVM的一个子项目，）
+#########################################################################
+LLVM:   是构架编译器(compiler)的框架系统，以C++编写而成，用于优化以任意程序语言编写的程序的编译时间(compile-time)、链接时间(link-time)、运行时间(run-time)以及空闲时间(idle-time)，对开发者保持开放，并兼容已有脚本。LLVM计划启动于2000年，最初由University of Illinois at Urbana-Champaign的Chris Lattner主持开展。2006年Chris Lattner加盟Apple Inc.并致力于LLVM在Apple开发体系中的应用。Apple也是LLVM计划的主要资助者。
+#########################################################################
+LLVM:   命名最早源自于底层虚拟机（Low Level Virtual Machine）的缩写,由于命名带来的混乱，目前LLVM就是该项目的全称。LLVM 核心库提供了与编译器相关的支持，可以作为多种语言编译器的后台来使用。能够进行程序语言的编译期优化、链接优化、在线编译优化、代码生成。LLVM的项目是一个模块化和可重复使用的编译器和工具技术的集合。LLVM是伊利诺伊大学的一个研究项目，提供一个现代化的，基于SSA的编译策略能够同时支持静态和动态的任意编程语言的编译目标。自那时以来，已经成长为LLVM的主干项目，由不同的子项目组成，其中许多正在生产中使用的各种 商业和开源的项目，以及被广泛用于学术研究。[1] 
+对关注编译技术的开发人员，LLVM提供了很多优点：
+现代化的设计
+LLVM的设计是高度模块化的，使得其代码更为清晰和便于排查问题所在。
+语言无关的中间代码
+一方面，这使得透过LLVM能够将不同的语言相互连结起来；也使得LLVM能够紧密地与IDE交互和集成。
+另一方面，发布中间代码而非目标代码能够在目标系统上更好地发挥其潜能而又不伤害可调试性（i.e. 在目标系统上针对本机的硬件环境产生目标代码，但又能够直接通过中间代码来进行行级调试）
+作为工具和函数库
+使用LLVM提供的工具可以比较容易地实现新的编程语言的优化编译器或VM，或为现有的编程语言引入一些更好的优化/调试特性。[5]  
+#########################################################################
+
+Yasm：是一个完全重写的NASM汇编。目前，它支持x86和AMD64指令集，接受NASM和GNU汇编器（gas）语法，产出二进制， ELF32 ， ELF64 ， COFF ， Mach - O的（ 32和64 ） ， RDOFF2 ，的Win32和Win64对象的格式，并生成STABS 调试信息的来源，DWARF 2 ，CodeView 8格式。
+#########################################################################
+Lambda:http://baike.baidu.com/view/3048187.htm#2
+
+“Lambda 表达式”(lambda expression)是一个匿名函数，Lambda表达式基于数学中的λ演算得名，直接对应于其中的lambda抽象(lambda abstraction)，是一个匿名函数，即没有函数名的函数。Lambda表达式可以表示闭包（注意和数学传统意义上的不同）。
+(注释java 8实现这种功能)
+flex bison
+Flex词法分析器生成工具。是一个生成词法分析器的工具，它可以利用正则表达式来生成匹配相应字符串的C语言代码，其语法格式基本同Lex相同
+Bison是一种通用目的的分析器生成器。它将LALR(1)上下文无关文法的描述转化成分析该文法的C程序。 一旦你精通Bison，你可以用它生成从简单的桌面计算器到复杂的程序设计语言等等许多语言的分析器。
+Bison向上兼容Yacc；所有书写正确的Yacc语法都应该可以不加更改地与Bison一起工作， 熟悉Yacc的人能毫不费力地使用Bison。
+单词的描述称为模式(Lexical Pattern)，模式一般用正规表达式进行精确描述。FLEX通过读取一个有规定格式的文本文件，输出一个C语言源程序。
+
+http://www.cnblogs.com/me115/archive/2010/10/27/1862180.html
+
+
+Doxygen是一种开源跨平台的，以类似JavaDoc风格描述的文档系统，完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#。注释的语法与Qt-Doc、KDoc和JavaDoc兼容。Doxygen可以从一套归档源文件开始，生成HTML格式的在线类浏览器，或离线的LATEX、RTF参考手册。
+
diff --git "a/\345\261\236\346\200\247\347\263\273\347\273\237/\347\254\224\350\256\260" "b/\345\261\236\346\200\247\347\263\273\347\273\237/\347\254\224\350\256\260"
new file mode 100644
index 0000000..04c74ca
--- /dev/null
+++ "b/\345\261\236\346\200\247\347\263\273\347\273\237/\347\254\224\350\256\260"
@@ -0,0 +1,9 @@
+关于属性与环境变量 ，他俩相似，但不一样，环境变量是用等号链接，环境变量是用来配置例如java环境的变量一样的一类东西
+而属性则是用：链接，
+区别，一个是对名称的定义以及修改的权限增加了限制，增强了安全性，更适合用于程序的配置管理。
+每个属性由属性名称和属性值组成，名称通常是一长串以'.'分割的字符串，这些名称的前缀有特定的含义，不能随便改动，但是前缀后面的字串可以由应用程序来指定，
+而且属性值只能是字符串，如果需要在程序中使用数值，需要自行完成字符串和 数值之间的转换。
+java层原型函数，
+getProperty(),setProperty()
+native层
+
diff --git "a/\345\261\236\346\200\247\347\263\273\347\273\237/\347\254\224\350\256\260~" "b/\345\261\236\346\200\247\347\263\273\347\273\237/\347\254\224\350\256\260~"
new file mode 100644
index 0000000..04c74ca
--- /dev/null
+++ "b/\345\261\236\346\200\247\347\263\273\347\273\237/\347\254\224\350\256\260~"
@@ -0,0 +1,9 @@
+关于属性与环境变量 ，他俩相似，但不一样，环境变量是用等号链接，环境变量是用来配置例如java环境的变量一样的一类东西
+而属性则是用：链接，
+区别，一个是对名称的定义以及修改的权限增加了限制，增强了安全性，更适合用于程序的配置管理。
+每个属性由属性名称和属性值组成，名称通常是一长串以'.'分割的字符串，这些名称的前缀有特定的含义，不能随便改动，但是前缀后面的字串可以由应用程序来指定，
+而且属性值只能是字符串，如果需要在程序中使用数值，需要自行完成字符串和 数值之间的转换。
+java层原型函数，
+getProperty(),setProperty()
+native层
+
diff --git "a/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213.xmind" "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213.xmind"
new file mode 100644
index 0000000000000000000000000000000000000000..1e6dcb39cd25f17de1f2e7890b05e2d935af18a1
GIT binary patch
literal 64422
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

literal 0
HcmV?d00001

diff --git "a/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\215\225\350\257\215\350\247\243\351\207\212" "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\215\225\350\257\215\350\247\243\351\207\212"
new file mode 100644
index 0000000..2e68fe4
--- /dev/null
+++ "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\215\225\350\257\215\350\247\243\351\207\212"
@@ -0,0 +1,22 @@
+FastBoot 是Android设计的一套通过USB来个人能信手机分区映射的协议，方便开发人员能快速更新指定的手机分区。但是一般的零售机上往往去掉了FastBoot，Goolgle销售的开发机则带有FastBoot模块
+Recovery模式是Android特有的升级系统。利用Recovery模式，手机可以进行恢复出厂设置，或者执行OTA，补丁和固件升级。进入Recovery模式实际上是启动了一个文本模式的Linux。
+装载和启动Linux内核
+	Android的boot.img存放的就是Linux内核和一个根文件系统，Bootloader会把boot.img镜像装载进内存，然后Linux内核会执行整个系统的初始化，完成后装载根文件系统，最后启动Init进程
+	启动Init进程
+	Linux内核加载完毕后，会首先启动Init进程，Init进程是系统的第一个进程，在Init几次呢好那个的启动过程中，会解析Linux的配置脚本init.rc文件的内容，Init进程会装载Android的文件系统，创建系统目录，初始化树形系统，启动Android系统重要的守护进程（Linux级别），这些进程包括USB守护进程，adb守护进程，vold守护进程，rild守护进程等。
+最后Init进程也会作为守护进程来执行修改属性请求，重启崩溃的进程等操作。
+
+	启动ServiceManager
+	ServiceManager由Init进程启动，它主要的作用是管理Binder服务，负责Binder服务的注册与查找。
+	启动zygote进程
+	Init进程初始化结束时，会启动zygote进程。zygote进程负责fork出应用进程，是所有应用进程的父进程。zyogte进程初始化时会创建Dalvik虚拟机，预装在系统的资源文件和Java类。所有从Zygote进程fork出的用户进程将继承和共享这些预加载的资源，不用浪费时间重新加载，加快了应用程序的启动过程。启动结束后，zygote
+进程也将变为守护进程，负责相应启动apk应用程序的请求
+	启动SystemServer
+	SystemServer是zygote进程fork出的第一个进程，也是整个Android系统的核心进程。在SystemServer中运行着Android系统大部分的Binder服务。SystemServer首先启动本地服务SensorService；接着启动包括ActivityManagerService，windowsManagerService，packageManagerService在内的所有Java服务。
+	启动MediaServer
+	MediaServer由Init进程启动，它包含了一些多媒体相关的本地binder服务，包括CameraService，AudioFlingerService，MediaPlayerService和AudioPolicyService.
+	启动Launcher。
+SystemServer 加载所有Java服务后，最后会调用ActivityManagerService的systemReady（）方法，在这个方法中会发出“android.intent.category.HOME”.凡是相应这个Intent的APK应用程序运行起来，Launcher应用是Android系统默认的桌面应用，一般只有它会相应这个Intent，因此，系统开机后，第一个运行的应用就是Launcher。
+   
+	
+
diff --git "a/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\215\225\350\257\215\350\247\243\351\207\212~" "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\215\225\350\257\215\350\247\243\351\207\212~"
new file mode 100644
index 0000000..2e68fe4
--- /dev/null
+++ "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\215\225\350\257\215\350\247\243\351\207\212~"
@@ -0,0 +1,22 @@
+FastBoot 是Android设计的一套通过USB来个人能信手机分区映射的协议，方便开发人员能快速更新指定的手机分区。但是一般的零售机上往往去掉了FastBoot，Goolgle销售的开发机则带有FastBoot模块
+Recovery模式是Android特有的升级系统。利用Recovery模式，手机可以进行恢复出厂设置，或者执行OTA，补丁和固件升级。进入Recovery模式实际上是启动了一个文本模式的Linux。
+装载和启动Linux内核
+	Android的boot.img存放的就是Linux内核和一个根文件系统，Bootloader会把boot.img镜像装载进内存，然后Linux内核会执行整个系统的初始化，完成后装载根文件系统，最后启动Init进程
+	启动Init进程
+	Linux内核加载完毕后，会首先启动Init进程，Init进程是系统的第一个进程，在Init几次呢好那个的启动过程中，会解析Linux的配置脚本init.rc文件的内容，Init进程会装载Android的文件系统，创建系统目录，初始化树形系统，启动Android系统重要的守护进程（Linux级别），这些进程包括USB守护进程，adb守护进程，vold守护进程，rild守护进程等。
+最后Init进程也会作为守护进程来执行修改属性请求，重启崩溃的进程等操作。
+
+	启动ServiceManager
+	ServiceManager由Init进程启动，它主要的作用是管理Binder服务，负责Binder服务的注册与查找。
+	启动zygote进程
+	Init进程初始化结束时，会启动zygote进程。zygote进程负责fork出应用进程，是所有应用进程的父进程。zyogte进程初始化时会创建Dalvik虚拟机，预装在系统的资源文件和Java类。所有从Zygote进程fork出的用户进程将继承和共享这些预加载的资源，不用浪费时间重新加载，加快了应用程序的启动过程。启动结束后，zygote
+进程也将变为守护进程，负责相应启动apk应用程序的请求
+	启动SystemServer
+	SystemServer是zygote进程fork出的第一个进程，也是整个Android系统的核心进程。在SystemServer中运行着Android系统大部分的Binder服务。SystemServer首先启动本地服务SensorService；接着启动包括ActivityManagerService，windowsManagerService，packageManagerService在内的所有Java服务。
+	启动MediaServer
+	MediaServer由Init进程启动，它包含了一些多媒体相关的本地binder服务，包括CameraService，AudioFlingerService，MediaPlayerService和AudioPolicyService.
+	启动Launcher。
+SystemServer 加载所有Java服务后，最后会调用ActivityManagerService的systemReady（）方法，在这个方法中会发出“android.intent.category.HOME”.凡是相应这个Intent的APK应用程序运行起来，Launcher应用是Android系统默认的桌面应用，一般只有它会相应这个Intent，因此，系统开机后，第一个运行的应用就是Launcher。
+   
+	
+
diff --git "a/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\350\277\207\347\250\213" "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\350\277\207\347\250\213"
new file mode 100644
index 0000000..72def5f
--- /dev/null
+++ "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\350\277\207\347\250\213"
@@ -0,0 +1,14 @@
+当前的启动流程为ANdroid系统在java部分启动之前启动流程。
+ANdorid的启动过程主要设计几个实体:
+1。bootloader
+2.linux内核/跟文集系统以及当中的init和init.rc
+3/system文件系统及其中一些作为守护进程的可执行程序
+大致分为7个步骤：
+1/BootLoader运行 （linux通用）
+2/linux内核运行	  （linux通用）
+3/内核加载文件系统 （linux通用）
+4/init进程运行
+5/运行init.rc
+6/加载system和data文件系统
+7/运行各种服务(主要为各个守护进程)
+
diff --git "a/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\350\277\207\347\250\213~" "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\350\277\207\347\250\213~"
new file mode 100644
index 0000000..72def5f
--- /dev/null
+++ "b/\346\234\254\345\234\260\345\220\257\345\212\250\346\265\201\347\250\213/\345\220\257\345\212\250\350\277\207\347\250\213~"
@@ -0,0 +1,14 @@
+当前的启动流程为ANdroid系统在java部分启动之前启动流程。
+ANdorid的启动过程主要设计几个实体:
+1。bootloader
+2.linux内核/跟文集系统以及当中的init和init.rc
+3/system文件系统及其中一些作为守护进程的可执行程序
+大致分为7个步骤：
+1/BootLoader运行 （linux通用）
+2/linux内核运行	  （linux通用）
+3/内核加载文件系统 （linux通用）
+4/init进程运行
+5/运行init.rc
+6/加载system和data文件系统
+7/运行各种服务(主要为各个守护进程)
+
diff --git "a/\347\254\254\344\270\200\345\244\251" "b/\347\254\254\344\270\200\345\244\251"
new file mode 100644
index 0000000..e0fd093
--- /dev/null
+++ "b/\347\254\254\344\270\200\345\244\251"
@@ -0,0 +1,37 @@
+Android 系统开发
+1/ 启动操作系统
+塞班 英文
+市面上操作系统的
+IOS介绍
+国内android手机的操作系统 
+格力的总裁头像定制动画
+系统应用的定制
+ 	
+A8核高版本运行不起来，高版本的需要的性能更高。
+第二天 Android 编译流程 Android编译源码。
+编译源码的大小介绍
+第三天 启动流程。
+第四天  模块代码书写
+知识点1/
+JNI*******
+ 首先讲解简单的知识点 ，也就是jni的知识点。
+*******
+ 先在linux完成jni的调用
+  使用.so库的形式完成编程
+*******
+然后使用交叉工具链的形式完成编译Android机器上运行
+*******： 
+使用Android.mk文件的编译完成
+在Android机器上完成运行
+知识点2/
+Android的每一层的框架讲解。
+知识点3/
+Android 运行库
+知识点4/
+获得Android源码
+知识点5/
+Android刷机的练习
+知识点6/
+Android源码目录每个文件的作用
+知识点7/
+关于系统移植分区的文件
diff --git "a/\347\254\254\344\270\200\345\244\251~" "b/\347\254\254\344\270\200\345\244\251~"
new file mode 100644
index 0000000..e0fd093
--- /dev/null
+++ "b/\347\254\254\344\270\200\345\244\251~"
@@ -0,0 +1,37 @@
+Android 系统开发
+1/ 启动操作系统
+塞班 英文
+市面上操作系统的
+IOS介绍
+国内android手机的操作系统 
+格力的总裁头像定制动画
+系统应用的定制
+ 	
+A8核高版本运行不起来，高版本的需要的性能更高。
+第二天 Android 编译流程 Android编译源码。
+编译源码的大小介绍
+第三天 启动流程。
+第四天  模块代码书写
+知识点1/
+JNI*******
+ 首先讲解简单的知识点 ，也就是jni的知识点。
+*******
+ 先在linux完成jni的调用
+  使用.so库的形式完成编程
+*******
+然后使用交叉工具链的形式完成编译Android机器上运行
+*******： 
+使用Android.mk文件的编译完成
+在Android机器上完成运行
+知识点2/
+Android的每一层的框架讲解。
+知识点3/
+Android 运行库
+知识点4/
+获得Android源码
+知识点5/
+Android刷机的练习
+知识点6/
+Android源码目录每个文件的作用
+知识点7/
+关于系统移植分区的文件
diff --git "a/\347\254\254\344\272\214\345\244\251" "b/\347\254\254\344\272\214\345\244\251"
new file mode 100644
index 0000000..6558d19
--- /dev/null
+++ "b/\347\254\254\344\272\214\345\244\251"
@@ -0,0 +1,74 @@
+分析编译流程
+查看envsetup.sh
+关于终端命令的使用：
+
+Invoke ". build/envsetup.sh" from your shell to add the following functions to your environment:
+//选择编译平台
+- lunch:   lunch <product_name>-<build_variant>
+//
+- tapas:   tapas [<App1> <App2> ...] [arm|x86|mips|armv5|arm64|x86_64|mips64] [eng|userdebug|user]
+- croot:   Changes directory to the top of the tree.
+###########################
+- m:       Makes from the top of the tree.
+- mm:      Builds all of the modules in the current directory, but not their dependencies.
+- mmm://指定目录      Builds all of the modules in the supplied directories, but not their dependencies.
+           To limit the modules being buil use the syntax: mmm dir/:target1,target2.
+#####################################
+ - mma:     Builds all of the modules in the current directory, and their dependencies.
+- mmma:    Builds all of the modules in the supplied directories, and their dependencies.
+- cgrep:   Greps on all local C/C++ files.
+- ggrep:   Greps on all local Gradle files.
+- jgrep:   Greps on all local Java files.
+- resgrep: Greps on all local res/*.xml files.
+- sgrep:   Greps on all local source files.
+- godir:   Go to the directory containing a file.
+
+Look at the source to view more functions. The complete list is:
+
+
+71-line :VARIANT_CHOICES=(user userdebug eng)
+版本类型：用户版，调试版，工程机
+481-line lunch
+442-line add_lunch_combo
+
+文件结尾：添加其他的脚本文件
+
+# Execute the contents of any vendorsetup.sh files we can find.
+如果找不到打印到dev/null中
+for f in `test -d device && find -L device -maxdepth 4 -name 'vendorsetup.sh' 2> /dev/null` \
+         `test -d vendor && find -L vendor -maxdepth 4 -name 'vendorsetup.sh' 2> /dev/null`
+do
+    echo "including $f"
+    . $f
+done
+unset f
+//什么意思？？
+addcompletions
+
+
+关于m mm mmm的分析arget Package: BinderDemo (out/target/product/fspad-733/obj/APPS/Bi
+Android.mk文件的分析 ，在哪里定义的？
+inlcude $(BUILD_PACKAGE)生成apk文件
+关于mmm命令的使用测试显示，可以将任意目录下的文件进行编译，只要包含Android.mk文件即可
+所说的任意文件目录为在整个linux文件系统下例如： ～/：
+
+
+makefile :文件介绍
+main.mk
+config.mk
+envsetup.mk
+product_config.mk
+AndroidProducts.mk
+BoardConfig.mk
+关于产品的制作步骤：
+vendorsetup.sh来添加选项。
+1/
+创建fspad -733.mk文件
+2/
+创建AndroidProducts.mk文件(注意在改名时，不要带空格)
+3/
+################################
+boot.img --- kernel  +   ramdisk.img
+
+out/target/system目录 压缩成 system.img文件
+
diff --git "a/\347\254\254\344\272\214\345\244\251~" "b/\347\254\254\344\272\214\345\244\251~"
new file mode 100644
index 0000000..2f3d7c4
--- /dev/null
+++ "b/\347\254\254\344\272\214\345\244\251~"
@@ -0,0 +1,73 @@
+分析编译流程
+查看envsetup.sh
+关于终端命令的使用：
+
+Invoke ". build/envsetup.sh" from your shell to add the following functions to your environment:
+//选择编译平台
+- lunch:   lunch <product_name>-<build_variant>
+//
+- tapas:   tapas [<App1> <App2> ...] [arm|x86|mips|armv5|arm64|x86_64|mips64] [eng|userdebug|user]
+- croot:   Changes directory to the top of the tree.
+###########################
+- m:       Makes from the top of the tree.
+- mm:      Builds all of the modules in the current directory, but not their dependencies.
+- mmm://指定目录      Builds all of the modules in the supplied directories, but not their dependencies.
+           To limit the modules being buil use the syntax: mmm dir/:target1,target2.
+#####################################
+ - mma:     Builds all of the modules in the current directory, and their dependencies.
+- mmma:    Builds all of the modules in the supplied directories, and their dependencies.
+- cgrep:   Greps on all local C/C++ files.
+- ggrep:   Greps on all local Gradle files.
+- jgrep:   Greps on all local Java files.
+- resgrep: Greps on all local res/*.xml files.
+- sgrep:   Greps on all local source files.
+- godir:   Go to the directory containing a file.
+
+Look at the source to view more functions. The complete list is:
+
+
+71-line :VARIANT_CHOICES=(user userdebug eng)
+版本类型：用户版，调试版，工程机
+481-line lunch
+442-line add_lunch_combo
+
+文件结尾：添加其他的脚本文件
+
+# Execute the contents of any vendorsetup.sh files we can find.
+如果找不到打印到dev/null中
+for f in `test -d device && find -L device -maxdepth 4 -name 'vendorsetup.sh' 2> /dev/null` \
+         `test -d vendor && find -L vendor -maxdepth 4 -name 'vendorsetup.sh' 2> /dev/null`
+do
+    echo "including $f"
+    . $f
+done
+unset f
+//什么意思？？
+addcompletions
+
+
+关于m mm mmm的分析arget Package: BinderDemo (out/target/product/fspad-733/obj/APPS/Bi
+Android.mk文件的分析 ，在哪里定义的？
+inlcude $(BUILD_PACKAGE)生成apk文件
+关于mmm命令的使用测试显示，可以将任意目录下的文件进行编译，只要包含Android.mk文件即可
+所说的任意文件目录为在整个linux文件系统下例如： ～/：
+
+
+makefile :文件介绍
+main.mk
+config.mk
+envsetup.mk
+product_config.mk
+AndroidProducts.mk
+BoardConfig.mk
+关于产品的制作步骤：
+vendorsetup.sh来添加选项。
+1/
+创建fspad -733.mk文件
+2/
+创建AndroidProducts.mk文件(注意在改名时，不要带空格)
+3/
+################################
+boot.img --- kernel  +   ramdisk.img
+
+out/target/system目录 压缩成 system.img文件
-- 
1.9.1

